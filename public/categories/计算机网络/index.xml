<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>计算机网络 on Bethel</title>
        <link>http://localhost:1313/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link>
        <description>Recent content in 计算机网络 on Bethel</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 23 Jan 2024 21:03:54 +0000</lastBuildDate><atom:link href="http://localhost:1313/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>6 应用层</title>
        <link>http://localhost:1313/post/6-%E5%BA%94%E7%94%A8%E5%B1%82/</link>
        <pubDate>Tue, 23 Jan 2024 21:03:54 +0000</pubDate>
        
        <guid>http://localhost:1313/post/6-%E5%BA%94%E7%94%A8%E5%B1%82/</guid>
        <description>&lt;h2 id=&#34;主要概念&#34;&gt;主要概念&lt;/h2&gt;
&lt;p&gt;（1）客户服务器（C/S）：传统的网络应用采用的通信模型，服务器向客户提供资源和服务，服务器程序先运行，等待客户的请求；通信由客户发起，服务器收到请求之后，将需要的资源返回给客户。&lt;/p&gt;
&lt;p&gt;（2）P2P：对等模型，两个网络应用程序（Peer，对等体）在通信时没有严格的客户和服务器的区分，每一个 Peer 既有客户的功能也有服务器的功能。&lt;/p&gt;
&lt;p&gt;（3）解析器：DNS 的客户端程序，发送域名请求给本地 DNS 服务器。&lt;/p&gt;
&lt;p&gt;（4）递归解析：本地名字服务器向上级名字服务器发送查询请求，上级服务器转发给更上一级服务器，到达根服务器之后再向下转发，直至请求转发给权威名字服务器；查询结果再反向依次转发给本地名字服务器的过程。&lt;/p&gt;
&lt;p&gt;（5）迭代解析：本地名字服务器向上级名字服务器发送查询请求，上级名字服务器返回更上一级名字服务器的 IP 地址，以此类推，每一次查询请求均由本地名字服务器发送，直至请求权威服务器的过程。&lt;/p&gt;
&lt;p&gt;（6）MIME（多用途因特网邮件扩展）：为邮件头和 HTTP 消息头提供了内容类型扩展，以支持除纯文本之外的其它数据类型，包括图像、音频、视频、压缩文件等。&lt;/p&gt;
&lt;p&gt;（7）浏览器：WWW 的客户端程序，除了 HTTP，还支持 FTP、Email 等协议。&lt;/p&gt;
&lt;p&gt;（8）Webmail: 用户使用浏览器和 HTTP 协议与邮件服务器通信，收发邮件&lt;/p&gt;
&lt;p&gt;（9）统一资源定位符 URL：URL：protocol://domain_name:port/item_name&lt;/p&gt;
&lt;p&gt;（10）HTTP 操作过程&lt;/p&gt;
&lt;p&gt;（11）持久连接：HTTP1.1 的功能，在一个 TCP 连接上传输一个网页中的多个文件，所有文件传输完之后再关闭连接。&lt;/p&gt;
&lt;h2 id=&#34;网络应用模型&#34;&gt;网络应用模型&lt;/h2&gt;
&lt;h3 id=&#34;cs&#34;&gt;C/S&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;客户和服务器是指通信中所涉及的两个应用进程。
&lt;ul&gt;
&lt;li&gt;客户/服务器方式所描述的是进程之间服务和被服务的关系。&lt;/li&gt;
&lt;li&gt;客户是服务请求方，服务器是服务提供方。&lt;/li&gt;
&lt;li&gt;服务器总是处于运行状态，并等待客户的服务请求。服务器具有固定端口号（例如HTTP服务器的默认端口号为80)，而运行服务器的主机也具有固定的IP地址。&lt;/li&gt;
&lt;li&gt;C/S方式是因特网上传统的、同时也是最成熟的方式，很多我们熟悉的网络应用采用的都是C/S方式。包括万维网WWW、电子邮件、文件传输FTP等。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;基于C/S方式的应用服务通常是服务集中型的，即应用服务集中在网络中比客户计算机少得多的服务器计算机上。
&lt;ul&gt;
&lt;li&gt;由于一台服务器计算机要为多个客户机提供服务，在C/S应用中，常会出现服务器计算机跟不上众多客户机请求的情况。&lt;/li&gt;
&lt;li&gt;为此，在C/S应用中，常用计算机群集（或服务器场）构建一个强大的虚拟服务器。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;p2p&#34;&gt;P2P&lt;/h3&gt;
&lt;p&gt;在P2P方式中，没有固定的服务请求者和服务提供者，分布在网络边缘各端系统中的应用进程是对等的，被称为对等方。对等方相互之间直接通信，每个对等方既是服务的请求者，又是服务的提供者。&lt;/p&gt;
&lt;p&gt;目前，在因特网上流行的P2P应用主要包括P2P文件共享即时通信、P2P流媒体、分布式存储等。&lt;/p&gt;
&lt;p&gt;基于P2P的应用是服务分散型的，因为服务不是集中在少数几个服务器计算机中，而是分散在大量对等计算机中，这些计算机并不为服务提供商所有，而是为个人控制的桌面计算机和笔记本电脑，它们通常位于住宅、校园和办公室中。&lt;/p&gt;
&lt;p&gt;P2P方式的最突出特性之一就是它的可扩展性。因为系统每增加一个对等方，不仅增加的是服务的请求者，同时也增加了服务的提供者，系统性能不会因规模的增大而降低。&lt;/p&gt;
&lt;p&gt;P2P方式具有成本上的优势，因为它通常不需要庞大的服务器设施和服务器带宽。为了降低成本，服务提供商对于将P2P方式用于应用的兴趣越来越大。&lt;/p&gt;
&lt;h2 id=&#34;dns&#34;&gt;DNS&lt;/h2&gt;
&lt;h3 id=&#34;dns-基本概念&#34;&gt;DNS 基本概念&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;DNS目标：实现域名和IP地址之间的映射（转换）
&lt;ul&gt;
&lt;li&gt;分层的域名空间、分布式数据库&lt;/li&gt;
&lt;li&gt;域名的规定&lt;/li&gt;
&lt;li&gt;Client（解析器）请求本地域名服务器（UDP，端口53）&lt;/li&gt;
&lt;li&gt;本地名字服务器请求其他服务器（最终到权威域名服务器）
&lt;ul&gt;
&lt;li&gt;迭代解析（因特网普遍采用）&lt;/li&gt;
&lt;li&gt;递归解析&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DNS目标很简单，但实现系统庞大而复杂&lt;/li&gt;
&lt;li&gt;具有高效率（缓存机制）和可靠性（镜像、辅助域名服务器）&lt;/li&gt;
&lt;li&gt;安全性：DNSSEC&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;dns的特点&#34;&gt;DNS的特点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;分层命名空间：主机具有按层次组织的组合名称。&lt;/li&gt;
&lt;li&gt;分布式数据库：DNS可以在组织内进行细分，并且可以有任意层级（最大深度为128）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;hierarchical-namespace&#34;&gt;Hierarchical namespace&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;命名策略：名称按从叶子到根的路径结构化，由点分隔。每个区域对应于负责该部分层次结构的管理机构。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210425981.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;resource-records资源记录&#34;&gt;Resource Records（资源记录）&lt;/h3&gt;
&lt;p&gt;资源记录（Resource Records）是DNS中的基本数据单元，用于存储和传输有关域名和其关联信息的记录。每个域名可以有一个或多个资源记录。&lt;/p&gt;
&lt;p&gt;资源记录包含以下信息：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Owner（所有者）：资源记录所属的域名。&lt;/li&gt;
&lt;li&gt;Type（类型）：指定该资源记录的类型，决定了记录中存储的信息的含义。常见的类型包括：
&lt;ol&gt;
&lt;li&gt;A：主机地址记录，将域名映射到IPv4地址。&lt;/li&gt;
&lt;li&gt;AAAA：主机地址记录，将域名映射到IPv6地址。&lt;/li&gt;
&lt;li&gt;CNAME：规范名称记录，指定域名的规范名称（别名）。&lt;/li&gt;
&lt;li&gt;MX：邮件交换记录，指定接收该域名邮件的邮件服务器。&lt;/li&gt;
&lt;li&gt;NS：域名服务器记录，指定该域名的授权域名服务器。&lt;/li&gt;
&lt;li&gt;SOA：权威起始记录，指定该域名的起始授权服务器。&lt;/li&gt;
&lt;li&gt;TXT：文本记录，用于存储任意文本信息。&lt;/li&gt;
&lt;li&gt;SRV：服务记录，指定提供特定服务的服务器的位置。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Class（类）：指定协议族的类型，通常为IN（Internet系统）。&lt;/li&gt;
&lt;li&gt;TTL（生存时间）：指定缓存资源记录的有效时间，以秒为单位。过期后，客户端需要重新查询以获取最新的记录。&lt;/li&gt;
&lt;li&gt;Data（数据）：根据资源记录的类型，存储特定类型的信息。例如，A记录中存储IPv4地址，MX记录中存储邮件服务器的优先级和域名。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;dns客户端解析器&#34;&gt;DNS客户端（解析器）&lt;/h3&gt;
&lt;p&gt;DNS客户端，也被称为解析器，通常是安装在用户设备上（如PC、手机或任何需要连接到Internet的设备）的软件。这个客户端的任务是向DNS服务器发出查询，请求将一个网站的域名（例如www.example.com）转换为与之对应的IP地址。这就像是在问，“请告诉我这个网站的精确位置”。&lt;/p&gt;
&lt;p&gt;浏览器、电子邮件客户端、手机应用等都有内置的DNS解析器。解析器首先在本地缓存和“hosts”文件中查找IP地址，如果找不到，则向本地的DNS服务器（通常是由互联网服务提供商或企业IT部门设定的）发出查询请求。&lt;/p&gt;
&lt;h3 id=&#34;dns服务器&#34;&gt;DNS服务器&lt;/h3&gt;
&lt;p&gt;DNS服务器是互联网的关键组件之一，其任务是响应来自解析器的查询，将域名解析为对应的IP地址，并将这个IP地址返回给请求者。&lt;/p&gt;
&lt;p&gt;DNS服务器是分层次和分布式的，这是为了提高效率和可靠性。当你的设备发出DNS查询请求时，以下是常见的处理流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;本地DNS服务器（Local DNS Server）：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这是查询的起点。本地DNS服务器一般由你的ISP（互联网服务提供商）或企业IT部门运营。当用户设备发出DNS查询请求时，请求首先会发送到本地DNS服务器。如果本地DNS服务器缓存中已经有对应的记录，它会直接返回结果。否则，本地DNS服务器会代理用户，将查询请求发送到更高级的DNS服务器。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;根DNS服务器（Root DNS Server）：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果本地DNS服务器无法解析查询请求，请求就会发送到根DNS服务器。根DNS服务器位于DNS的最顶层，是互联网上的13组服务器之一。根服务器没有具体的记录信息，但它知道所有顶级域（如.com、.org、.net等）的DNS服务器的信息。它会将查询指向对应的顶级域的DNS服务器。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;顶级域DNS服务器（Top-Level Domain, TLD, DNS Server）：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这个层级的服务器管理顶级域下的所有二级域名。例如，.com TLD服务器就负责管理所有以.com结尾的二级域名的记录。当这个服务器收到查询请求，它会指向对应的二级域名的权威DNS服务器。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;权威DNS服务器（Authoritative DNS Server）：&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;权威DNS服务器是负责特定二级域名的服务器。比如，&lt;code&gt;example.com&lt;/code&gt;的权威DNS服务器就负责管理所有以&lt;code&gt;example.com&lt;/code&gt;结尾的子域名，比如&lt;code&gt;www.example.com&lt;/code&gt;或&lt;code&gt;mail.example.com&lt;/code&gt;。这个服务器拥有真正的、权威的DNS记录，当收到查询请求时，它会返回对应的IP地址。&lt;/p&gt;
&lt;h2 id=&#34;dns查表&#34;&gt;DNS查表&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;递归查询： 递归查询是DNS客户端（解析器）向DNS服务器发出的一种请求，要求DNS服务器负责完成整个解析过程并返回最终的解析结果。&lt;/li&gt;
&lt;li&gt;迭代查询： 迭代查询是DNS客户端向DNS服务器发出的一种请求，要求DNS服务器返回一个指向下一级服务器的响应，而不是直接提供解析结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210427377.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;dns-缓存&#34;&gt;DNS 缓存&lt;/h3&gt;
&lt;p&gt;为了提高DNS的查询效率，并减轻根域名服务器的负荷和减少因特网上的DNS查询报文数量，在域名服务器中广泛地使用了高速缓存（cache）。&lt;/p&gt;
&lt;p&gt;高速缓存用来存放最近查询过的域名以及从何处获得域名映射信息的记录。&lt;/p&gt;
&lt;p&gt;TLD服务器通常被本地域名服务器缓存，因此根域名服务器很少被访问。&lt;/p&gt;
&lt;p&gt;不但在本地域名服务器中需要高速缓存，在用户主机中也很需要。许多用户主机在启动时从本地域名服务器下载域名和P地址的全部数据库，维护存放自己最近使用的域名的高速缓存，并且只在从缓存中找不到域名时才向域名服务器查询。&lt;/p&gt;
&lt;h2 id=&#34;mailsmtppop3imap&#34;&gt;Mail：SMTP/POP3/IMAP&lt;/h2&gt;
&lt;p&gt;目标：用户之间的异步数据传输&lt;/p&gt;
&lt;p&gt;邮件格式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基本邮件格式(IMF)只支持ASCII（英文）&lt;/li&gt;
&lt;li&gt;MIME:扩展邮件头，支持多种数据类型、多种语言、邮件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;内包含多部分（附件）&lt;/p&gt;
&lt;p&gt;邮件传输协议(Client/Server)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发送邮件协议：SMTP&lt;/li&gt;
&lt;li&gt;接收邮件协议：POP3,IMAP4(功能更强，更复杂)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Webmail&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户使用浏览器和HTTP协议与邮件服务器通信，收发邮件&lt;/li&gt;
&lt;li&gt;邮件服务器之间使用SMTP发送邮件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;安全性：PGP,SMIME&lt;/p&gt;
&lt;h3 id=&#34;电子邮件系统的结构&#34;&gt;电子邮件系统的结构&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210427735.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UA (User Agent)
&lt;ul&gt;
&lt;li&gt;end-user mail program&lt;/li&gt;
&lt;li&gt;Interface between the end users and the email servers&lt;/li&gt;
&lt;li&gt;E.g,outlook,foxmail,…&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mail Server
&lt;ul&gt;
&lt;li&gt;Responsible for transmitting/receiving emails and reporting status information about mail transferring to the mail sender&lt;/li&gt;
&lt;li&gt;Both a client and a server&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Email protocols
&lt;ul&gt;
&lt;li&gt;SMTP:used for sending an email&lt;/li&gt;
&lt;li&gt;POP3:used for receiving an email&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;电子邮件地址&#34;&gt;电子邮件地址&lt;/h3&gt;
&lt;p&gt;DNS地址格式：mailboxname@domain&lt;/p&gt;
&lt;p&gt;每个电子邮件地址在互联网上是唯一&lt;/p&gt;
&lt;h3 id=&#34;internet-邮件格式&#34;&gt;Internet 邮件格式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Message envelop：&amp;ldquo;信封&amp;quot;是一个抽象的概念，用于描述邮件从源地址到目的地址的传输信息。这些信息通常不包含在邮件本身的头部或正文中，而是在邮件传输过程中由邮件服务器和协议生成和管理的。&lt;/li&gt;
&lt;li&gt;Message connect:互联网电子邮件采用的是RFC 5322标准定义的邮件格式。
&lt;ul&gt;
&lt;li&gt;邮件头（Headers）
&lt;ol&gt;
&lt;li&gt;From：发件人的邮件地址。&lt;/li&gt;
&lt;li&gt;To：主要收件人的邮件地址。&lt;/li&gt;
&lt;li&gt;Cc（Carbon Copy）：抄送给其他人的邮件地址。&lt;/li&gt;
&lt;li&gt;Bcc（Blind Carbon Copy）：密送给其他人的邮件地址，被隐藏在邮件中。&lt;/li&gt;
&lt;li&gt;Subject：邮件的主题或标题。&lt;/li&gt;
&lt;li&gt;Date：邮件发送的日期和时间。&lt;/li&gt;
&lt;li&gt;Reply-To：回复邮件的地址。&lt;/li&gt;
&lt;li&gt;MIME-Version：邮件使用的MIME（Multipurpose Internet Mail Extensions）版本。&lt;/li&gt;
&lt;li&gt;Content-Type：邮件正文的类型和编码方式。&lt;/li&gt;
&lt;li&gt;Content-Disposition：附件的处理方式。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;空行（Blank Line）：邮件头和正文之间需要有一个空行作为分隔。&lt;/li&gt;
&lt;li&gt;邮件正文（Body）：邮件的实际内容，可以包括文本、图片、附件等多种格式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mime&#34;&gt;MIME&lt;/h3&gt;
&lt;p&gt;MIME（Multipurpose Internet Mail Extensions）是一种用于多部分多媒体电子邮件的扩展标准。它扩展了传统的纯文本电子邮件，允许在邮件中包含多种类型的媒体内容，如图像、音频、视频等。&lt;/p&gt;
&lt;p&gt;MIME通过引入额外的邮件头字段来定义邮件的内容类型。常见的邮件头字段包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MIME-Version：标识使用的MIME版本。&lt;/li&gt;
&lt;li&gt;Content-Description：描述邮件的可读字符串。&lt;/li&gt;
&lt;li&gt;Content-Id：邮件内容的唯一标识符。&lt;/li&gt;
&lt;li&gt;Content-Transfer-Encoding：指定邮件在传输时的编码方式，用于处理二进制数据。&lt;/li&gt;
&lt;li&gt;Content-Type：指定邮件内容的类型和子类型，如文本（text）、图像（image）、音频（audio）、视频（video）、应用程序（application）等。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MIME支持多部分消息内容类型，其中每个部分都有自己的类型和编码方式。这使得邮件能够以多种格式呈现，并支持包含附件等复杂的内容结构。&lt;/p&gt;
&lt;p&gt;使用MIME，可以使用现有的邮件程序和协议发送MIME消息。它已经被广泛使用，并成为互联网上电子邮件的标准。&lt;/p&gt;
&lt;p&gt;MIME还定义了各种内容类型和子类型，以适应不同类型的媒体内容。例如，text/plain表示纯文本，image/gif表示GIF格式的静态图像，audio/basic表示基本音频，video/mpeg表示MPEG格式的视频等。这些类型和子类型允许邮件接收者正确解释和显示邮件中的内容。&lt;/p&gt;
&lt;p&gt;增加了5个新的邮件首部字段，这些字段提供了有关邮件主体的信息。&lt;/p&gt;
&lt;p&gt;定义了许多邮件内容的格式，对多媒体电子邮件的表示方法进行了标准化。&lt;/p&gt;
&lt;p&gt;定义了传送编码，可对任何内容格式进行转换，而不会被邮件系统改变。&lt;/p&gt;
&lt;p&gt;实际上，MIME不仅仅用于SMTP,也用于后来的同样面向ASCII:字符的HTTP。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210428168.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;stmp&#34;&gt;STMP&lt;/h3&gt;
&lt;p&gt;简单邮件传输协议（Simple Mail Transfer Protocol，SMTP）用于在用户代理（UA）和邮件服务器之间以及邮件服务器之间传输邮件消息。&lt;/p&gt;
&lt;p&gt;SMTP服务器监听25号端口。 SMTP客户端建立与该端口的TCP连接。 如果消息无法传递，最终将返回给发送者包含无法传递的消息的错误报告的第一部分。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SMTP服务器始终处于开启和监听状态，通过TCP的25端口进行通信。&lt;/li&gt;
&lt;li&gt;SMTP服务器负责接收并存储用户的入站邮件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;SMTP是一种简单的ASCII协议。&lt;/p&gt;
&lt;p&gt;邮件系统由文件系统和SMTP组成。用户通过SMTP客户端将邮件消息发送到SMTP服务器，SMTP服务器负责将邮件传递到目标服务器或目标用户的邮箱。MTA（Mail Transfer Agent，邮件传输代理）是使用SMTP的邮件服务器。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210428944.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;pop和imap&#34;&gt;POP和IMAP&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210429807.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;wwwhttp&#34;&gt;WWW:HTTP&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;目标：将分布在互联网不同设备上的资源组织起来。&lt;/li&gt;
&lt;li&gt;WWW体系结构
&lt;ul&gt;
&lt;li&gt;超链接：超文本、超媒体&lt;/li&gt;
&lt;li&gt;Web客户（浏览器）和Web服务器&lt;/li&gt;
&lt;li&gt;URL:protocol://domain_name:port/item_name&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Web页面：静态页面(HTML),动态页面，活动页面&lt;/li&gt;
&lt;li&gt;超文本传输协议(HTTP)
&lt;ul&gt;
&lt;li&gt;Client/Server,同步数据传输&lt;/li&gt;
&lt;li&gt;over TCP,port80&lt;/li&gt;
&lt;li&gt;HTTP操作：TCP连接，HTTP请求报文和响应报文&lt;/li&gt;
&lt;li&gt;HTTP1.0&amp;amp;1.1:持久连接、流水线请求&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;概念&#34;&gt;概念&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;www
&lt;ol&gt;
&lt;li&gt;万维网采用客户端/服务器模式，其中浏览器程序充当客户端。&lt;/li&gt;
&lt;li&gt;客户端和服务器通过HTTP（超文本传输协议）进行交互。&lt;/li&gt;
&lt;li&gt;万维网文档使用URL（统一资源定位符）进行定位。&lt;/li&gt;
&lt;li&gt;万维网文档采用HTML（超文本标记语言）编写。&lt;/li&gt;
&lt;li&gt;搜索引擎使用户能够方便地找到所需的信息。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;浏览器
&lt;ol&gt;
&lt;li&gt;一个应用程序作为用户与网络的接口，用于获取来自Web服务器的信息（网页）并将信息显示给用户。当用户点击超链接时，浏览器会确定链接的URL和网页名称（例如www.abc.com/example.html），然后向DNS请求www.abc.com的IP地址。浏览器建立与返回的IP地址的TCP连接，并发送一个HTTP请求，请求页面 /example.html ，并获取嵌入的图像。浏览器显示 /example.html 中的所有文本和图像，并在完成后释放TCP连接。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Web 服务器
&lt;ol&gt;
&lt;li&gt;Web服务器存储一组Web文档，并通过向浏览器发送文档副本来响应请求。服务器的工作循环包括以下步骤：&lt;/li&gt;
&lt;li&gt;接受来自客户端（浏览器）的TCP连接。&lt;/li&gt;
&lt;li&gt;获取页面的路径，即所请求文件的名称。&lt;/li&gt;
&lt;li&gt;获取文件（从磁盘上）。&lt;/li&gt;
&lt;li&gt;将文件的内容发送给客户端。&lt;/li&gt;
&lt;li&gt;释放TCP连接。&lt;/li&gt;
&lt;li&gt;这些步骤循环进行，以响应浏览器的请求并向客户端提供所请求的Web文档。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;web文档（web page）
&lt;ol&gt;
&lt;li&gt;静态网页(static web page)：&lt;/li&gt;
&lt;li&gt;存储在文件中，内容不可更改。&lt;/li&gt;
&lt;li&gt;页面内容在创建后不会发生变化，呈现给用户的是固定的信息。&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210430605.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;动态网页(dynamic web page)：&lt;/li&gt;
&lt;li&gt;每当服务器接收到请求时可以根据需求进行更改。&lt;/li&gt;
&lt;li&gt;页面内容是在服务器端根据请求生成的，通常是通过服务器上的程序输出，如脚本语言(script)。&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210431410.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;活动网页(active web page)：&lt;/li&gt;
&lt;li&gt;在文档加载到浏览器后，页面可以根据用户的操作进行更改。&lt;/li&gt;
&lt;li&gt;页面内容是在客户端生成的，通过在浏览器中运行的计算机程序（例如Java）实现。&lt;/li&gt;
&lt;li&gt;这种类型的页面常常包含交互性和动态功能，用户可以与页面进行互动并触发特定事件。&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210432112.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;URL
&lt;ol&gt;
&lt;li&gt;默认：协议http；端口80；路径index.html&lt;/li&gt;
&lt;li&gt;protocol://domain_name:port/item_name&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210432606.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;http&#34;&gt;HTTP&lt;/h3&gt;
&lt;h4 id=&#34;http介绍&#34;&gt;HTTP介绍&lt;/h4&gt;
&lt;p&gt;HTTP 是一个应用层协议，它使用 TCP 连接进行可靠的传送&lt;/p&gt;
&lt;p&gt;HTTP定义了浏览器（即万维网客户进程）怎样向万维网服务器请求万维网文档，以及万维网服务器怎样把万维网文档传送给浏览器。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210432892.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;每个万维网网点都有一个服务器进程，它不断地&lt;strong&gt;监听 TCP 的端口 80&lt;/strong&gt;，以便发现是否有浏览器向它发出连接建立请求。&lt;/p&gt;
&lt;p&gt;一旦监听到连接建立请求并建立了 TCP 连接之后，浏览器就向万维网服务器发出浏览某个页面的请求，服务器接着就返回所请求的页面作为响应。&lt;/p&gt;
&lt;p&gt;最后，TCP 连接就被释放了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210433212.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;http10http11&#34;&gt;HTTP/1.0&amp;amp;HTTP/1.1&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;HTTP/1.0
&lt;ol&gt;
&lt;li&gt;停等&lt;/li&gt;
&lt;li&gt;非持续连接：每次浏览器要请求一个文件都要与服务器建立TCP连接，当收到响应后就立即关闭连接。&lt;/li&gt;
&lt;li&gt;每请求一个文档就要有两倍的RTT的开销。若一个网页上有很多引用对象（例如图片等），那么请求每一个对象都需要花费2RTT的时间。&lt;/li&gt;
&lt;li&gt;为了减小时延，浏览器通常会建立多个并行的TCP连接同时请求多个对象。但是，这会大量占用www服务器的资源，特别是www服务器往往要同时服务于大量客户的请求，这会使其负担很重。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;HTTP/1.1
&lt;ol&gt;
&lt;li&gt;持续连接：万维网服务器在发送响应后仍然保持这条连接，使同一个客户（浏览器）和该服务器可以继续在这条连接上传送后续的HTTP请求报文和响应报文。这并不局限于传送同一个页面上引用的对象，而是只要这些文档都在同一个服务器上就行。&lt;/li&gt;
&lt;li&gt;为了进一步提高效率，HTTP/1.1的持续连接还可以使用流水线方式工作，即浏览器在收到HTTP的响应报文之前就能够连续发送多个请求报文。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210433607.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;http报文格式&#34;&gt;HTTP报文格式&lt;/h4&gt;
&lt;p&gt;HTTP是面向文本的，其报文中的每一个字段都是一些ASCII码串，并且每个字段的长度都是不确定的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210434306.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210434711.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210435289.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210435577.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;cookies&#34;&gt;cookies&lt;/h4&gt;
&lt;p&gt;Cookie是一种对无状态的HTTP进行状态化的技术。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210435977.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;缓存和代理服务器&#34;&gt;缓存和代理服务器&lt;/h4&gt;
&lt;p&gt;万维网缓存又称为Web缓存(Web Cache),可位于客户机，也可位于中间系统上，位于中间系统上的&lt;/p&gt;
&lt;p&gt;Web缓存又称为代理服务器(Proxy Server).&lt;/p&gt;
&lt;p&gt;Web缓存把最近的一些请求和响应暂存在本地磁盘中。当新请求到达时，若发现这个请求与暂时存放的请求相同，就返回暂存的响应，而不需要按URL的地址再次去因特网访问该资源。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210436455.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>5 传输层</title>
        <link>http://localhost:1313/post/5-%E4%BC%A0%E8%BE%93%E5%B1%82/</link>
        <pubDate>Tue, 23 Jan 2024 20:52:56 +0000</pubDate>
        
        <guid>http://localhost:1313/post/5-%E4%BC%A0%E8%BE%93%E5%B1%82/</guid>
        <description>&lt;p&gt;主要概念&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;引入网络层的原因：消除网络层的不可靠性；提供源主机到端主机的可靠地，如实际使用网 络无关的信息传输；提高服务质量，进行差错检测。&lt;/p&gt;
&lt;p&gt;与网络层的区别：传输层提供应用进程间的逻辑通信，而网络层只是实现主机到主机之间通信&lt;/p&gt;
&lt;p&gt;传输层提供高效、可靠、高性价比的数据传输，独立于当前的物理层网络，是进程与进程间的通信&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;算法&#34;&gt;算法&lt;/h2&gt;
&lt;h3 id=&#34;流量控制拥塞控制&#34;&gt;流量控制，拥塞控制&lt;/h3&gt;
&lt;h4 id=&#34;慢启动---启动速率很低拥塞窗口初始值为1个最大报文段长度mss在达到阈-值或者发现丢包之前拥塞窗口按指数级增长imghttpspicture2023-1309715649cosap-beijingmyqcloudcomimgnull-20240123210154605null---注---cwnd-congestionwindow&#34;&gt;慢启动   启动速率很低，拥塞窗口初始值为1个最大报文段长度（MSS）。在达到阈 值或者发现丢包之前，拥塞窗口按指数级增长&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210154605.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;   注：   cwnd: CongestionWindow&lt;/h4&gt;
&lt;h4 id=&#34;ai---当拥塞窗口达到阈值时按线性增长&#34;&gt;AI   当拥塞窗口达到阈值时，按线性增长&lt;/h4&gt;
&lt;h4 id=&#34;md---出现重发定时器超时拥塞窗口降为最小值1个mss阈值改为超时时刻的拥塞窗口值的一半重新开始新的慢启动&#34;&gt;MD   出现重发定时器超时，拥塞窗口降为最小值（1个MSS），阈值改为超时时刻的拥塞窗口值的一半，重新开始新的慢启动。&lt;/h4&gt;
&lt;h4 id=&#34;快速恢复---收到三个重复的ack时拥塞窗口降为当前窗口的一半开始新的ai&#34;&gt;快速恢复   收到三个重复的ACK时，拥塞窗口降为当前窗口的一半，开始新的AI&lt;/h4&gt;
&lt;h4 id=&#34;最大最小公平性-max-min-fairness&#34;&gt;最大最小公平性 (Max-Min Fairness)&lt;/h4&gt;
&lt;p&gt;基本含义：使得资源分配向量的最小分量的值最大，防止任何网络流被‘饿死’，同时在一定程度上尽可能增加每个流的速率。&lt;/p&gt;
&lt;p&gt;原则：一个信道上，在满足最小需求的前提下，各流尽量均分带宽；如果增加任何一个参与者（分量）的带宽，将导致其它的具有相同或者更少带宽的参与者（分量）的带宽下降，此时即满足了最大最小公平性&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In Figure 6-20, suppose a new flow E is added that takes a path from R1 to R2 to R6. How does the max-min bandwidth allocation change for the five flows?&lt;/p&gt;
&lt;p&gt;习题8：在书图6-20（即下图）中，假设加入了一个新的流E，它的路径是从R1到R2、R2再到R6。请问对于5个流的最大－最小带宽分配有什么变化？&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210154980.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;解题思路：本题考查对于最大最小公平性原则的理解。在带宽分配中，如果增加任一个流的带宽，不会减少最小带宽需求的流的带宽，则该分配方式满足最大最小公平性原则。&lt;/p&gt;
&lt;p&gt;答：流A和E在R1-R2均分带宽。由于A不是占用带宽最小的流，从2/3降为1/2没有违反最大-最小公平性原则。&lt;/p&gt;
&lt;p&gt;在链路R1-R2上，A分配1/2带宽，在R2-R3上继续分配1/2带宽；&lt;/p&gt;
&lt;p&gt;在链路R1-R2上，E分配1/2带宽, 在R2-R6上继续分配1/2带宽；&lt;/p&gt;
&lt;p&gt;其他流（B、C、D）的带宽分配不变。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;tcp拥塞控制过程&#34;&gt;TCP拥塞控制过程&lt;/h4&gt;
&lt;p&gt;慢启动，AIMD&lt;/p&gt;
&lt;p&gt;发送窗口=min(接收窗口，拥塞窗口)&lt;/p&gt;
&lt;p&gt;发生超时，则阈值＝超时时刻的拥塞窗口值/2&lt;/p&gt;
&lt;h3 id=&#34;nagle算法发送端--积累要发送的数据一次尽可能发送较大的数据量1个mss&#34;&gt;Nagle算法（发送端）  积累要发送的数据，一次尽可能发送较大的数据量（1个MSS）&lt;/h3&gt;
&lt;h3 id=&#34;clark算法接收端--等待空闲的接收缓冲区变大只在有较大缓存至少为12-mss时才发送窗口更新通知&#34;&gt;Clark算法（接收端）  等待空闲的接收缓冲区变大，只在有较大缓存（至少为1/2 MSS）时，才发送窗口更新通知&lt;/h3&gt;
&lt;h3 id=&#34;jacobson算法--估计端到端环回时延rtt--rtt_估值alpha-times-rtt_估值的历史值--1---alpha-times-rtt_测量值&#34;&gt;Jacobson算法  估计端到端环回时延RTT  $$RTT_{估值}=\alpha \times RTT_{估值的历史值} + (1 - \alpha) \times RTT_{测量值}$$&lt;/h3&gt;
&lt;h2 id=&#34;传输层协议&#34;&gt;传输层协议&lt;/h2&gt;
&lt;h4 id=&#34;udp&#34;&gt;UDP&lt;/h4&gt;
&lt;p&gt;提供无连接、尽力而为的传输服务，采用校验和方式进行差错检测 ，不提供差错恢复功能。 UDP保留发送方和接收方之间的消息边界&lt;/p&gt;
&lt;p&gt;使用UDP的协议：DNS、DHCP、RIP等&lt;/p&gt;
&lt;h5 id=&#34;段头格式&#34;&gt;段头格式&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210155297.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;校验和计算&#34;&gt;校验和计算&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210155575.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;tcp&#34;&gt;TCP&lt;/h4&gt;
&lt;p&gt;提供面向连接的、可靠的字节流服务，不保证应用层的消息边界&lt;/p&gt;
&lt;h5 id=&#34;段格式&#34;&gt;段格式&lt;/h5&gt;
&lt;p&gt;段头（20或更多字节）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210155826.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210156094.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;校验和&#34;&gt;校验和&lt;/h5&gt;
&lt;p&gt;Provides extra reliability&lt;/p&gt;
&lt;p&gt;It checksums the &lt;strong&gt;header&lt;/strong&gt;, the &lt;strong&gt;data&lt;/strong&gt;, and the &lt;strong&gt;conceptualpseudo-header&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Pseudo-header: helps detect mis-delivered packets Checksum is mandatory(TCP中的校验和是必须支持的)&lt;/p&gt;
&lt;h5 id=&#34;options-in-header&#34;&gt;Options in Header&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;MSS(Maximum Segment Size)
&lt;ul&gt;
&lt;li&gt;连接建立时协商&lt;/li&gt;
&lt;li&gt;收发方向的MSS可以不同&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Window scale
&lt;ul&gt;
&lt;li&gt;允许双方在连接开始时协商&lt;/li&gt;
&lt;li&gt;最大可达 $$2^{30$$ 字节&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Timestamp&lt;/li&gt;
&lt;li&gt;SACK
&lt;ul&gt;
&lt;li&gt;选择性确认&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;三步建立连接四步释放连接&#34;&gt;三步建立连接，四步释放连接&lt;/h5&gt;
&lt;p&gt;建立连接（客户端确认“服务器的确认”😀）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210156371.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;释放连接（主动方等被动方的遗言，然后确认“被动方的确认”😀）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123210156619.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>4 网络层</title>
        <link>http://localhost:1313/post/4-%E7%BD%91%E7%BB%9C%E5%B1%82/</link>
        <pubDate>Tue, 23 Jan 2024 20:36:56 +0000</pubDate>
        
        <guid>http://localhost:1313/post/4-%E7%BD%91%E7%BB%9C%E5%B1%82/</guid>
        <description>&lt;h2 id=&#34;概念&#34;&gt;概念&lt;/h2&gt;
&lt;h3 id=&#34;网络层功能&#34;&gt;网络层功能&lt;/h3&gt;
&lt;p&gt;网络层的任务是将源计算机发出的数据分组（数据报）经过适当的路径送到目的地计算机，从源端到目的端可能要经过若干中间节点。&lt;/p&gt;
&lt;p&gt;网络层是处理计算机网络中&lt;strong&gt;端到端数据传输的最低层&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;存储转发分组交换机制&#34;&gt;存储转发分组交换机制&lt;/h3&gt;
&lt;p&gt;一台主机要发送一个分组（数据报），那么它将分组传送给最近的路由器，该路由器或者在它自己的 LAN 上，或者在一条通向承运商的点到点链路上。该分组被存储在路由器上，一直到它完全到达路由器为止，所以路由器可以验证它的校验和。然后它被沿路转发到下一台路由器，直到到达目标主机为止，最后在目标主机上它被递交给相应的进程。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;网络层****传输的单位：分组&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;向传输层提供的服务虚电路和数据表&#34;&gt;向传输层提供的服务：虚电路和数据表&lt;/h3&gt;
&lt;p&gt;分组交换&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;面向连接的虚电路服务 （Virtual Circuit approach）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;发送方&lt;/strong&gt;发送给&lt;strong&gt;接收方&lt;/strong&gt;的所有分组都沿着同一条虚电路传送&lt;/p&gt;
&lt;p&gt;不是真正的物理连接&lt;/p&gt;
&lt;p&gt;Virtual Circuit Identidier（VIC）:标识虚电路的信号，要先建立虚连接&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;无连接的数据报服务（Datagram approach）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;发送方&lt;strong&gt;&lt;strong&gt;发送给&lt;/strong&gt;&lt;/strong&gt;接收方****的分组可能沿着不同路径传送&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;无连接，每个包单独处理，没有真正的带宽分配&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;对比的方面&lt;/th&gt;
&lt;th&gt;虚电路&lt;/th&gt;
&lt;th&gt;数据报&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;连接的建立&lt;/td&gt;
&lt;td&gt;必须有&lt;/td&gt;
&lt;td&gt;不要&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;目的站地址&lt;/td&gt;
&lt;td&gt;仅在连接建立阶段使用，每个分组使用短的虚电路号&lt;/td&gt;
&lt;td&gt;每个分组都有目的站的全地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;路由选择&lt;/td&gt;
&lt;td&gt;在虚电路连接建立时进行，所有分组均按同一路由&lt;/td&gt;
&lt;td&gt;每个分组独立选择路由&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;当路由器出故障&lt;/td&gt;
&lt;td&gt;所有通过了出故障的路由器的虚电路均不能工作&lt;/td&gt;
&lt;td&gt;出故障的路由器可能会丢失分组，一些路由可能会发生变化&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;分组的顺序&lt;/td&gt;
&lt;td&gt;总是按发送顺序到达目的站&lt;/td&gt;
&lt;td&gt;到达目的站时可能不按发送顺序&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;端到端的差错处理&lt;/td&gt;
&lt;td&gt;由通信子网负责&lt;/td&gt;
&lt;td&gt;由主机负责&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;端到端的流量控制&lt;/td&gt;
&lt;td&gt;由通信子网负责&lt;/td&gt;
&lt;td&gt;由主机负责&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;路由选择算法&#34;&gt;路由选择算法&lt;/h2&gt;
&lt;h3 id=&#34;最优化原则&#34;&gt;最优化原则&lt;/h3&gt;
&lt;p&gt;如果路由器 J 是在从路由器 I 到路由器 K 的最优路径上，那么，从 J 到 K 的最优路径也必定沿着同样的路由路径。&lt;/p&gt;
&lt;h3 id=&#34;最短路径选择算法dijkstra-最短路由搜索算法&#34;&gt;最短路径选择算法（Dijkstra 最短路由搜索算法）&lt;/h3&gt;
&lt;h3 id=&#34;扩散算法flooding洪泛&#34;&gt;扩散算法（Flooding）洪泛&lt;/h3&gt;
&lt;p&gt;在扩散法中，每一个入境分组将被路由器转发到除了它进来的那条路线之外的每一条输出线路上。&lt;/p&gt;
&lt;p&gt;由于扩散算法会产生大量的重复分组，需要改进扩散算法，避免重复的分组。&lt;/p&gt;
&lt;p&gt;收到包就转发&lt;/p&gt;
&lt;h3 id=&#34;距离矢量路由选择distance-vector-routing&#34;&gt;距离矢量路由选择（Distance Vector Routing）&lt;/h3&gt;
&lt;p&gt;DVR 是一种基于距离的基本路由协议，根据距离确定数据包的最佳路径。它使用简单的度量标准（如跳数）来计算最佳路径，并与邻居共享这些信息。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204920532.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;每个路由器有一个路由表，更新表时只跟邻居交换。&lt;/p&gt;
&lt;p&gt;如果结点 i 的所有邻站都知道到结点j的最短距离，那么求结点 i 和结点 j 之间的最短距离就可以用结点 i 到每个邻站之间的距离分别加上该邻站到结点 j 的最短距离，然后再从得数中选择最小的一个。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204921101.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;所有的节点都监听从其他节点传送来的路由选择更新信息，并在下列情况下更新它们的路由选择表：&lt;/p&gt;
&lt;p&gt;A. 被通告一条新的路径，该路由在本节点的路由表中部存在，此时本地系统加入这条新的路由；&lt;/p&gt;
&lt;p&gt;B. 通过发送来路由信息的节点有一条到达某个目的地的路由，该路由比当前使用的路由有较短的距离（较小的代价）。在这种情况下，就用经过发送路由信息的节点的新路由替换路由表中到达那个目的地的现有路由。&lt;/p&gt;
&lt;p&gt;C. 在本节点的现有路由表中为了到达某一目的地首先应前往的下一节点如果通告了一个较高的代价，就要使用这一新的代价更新从本节点前往同一目的地的代价。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建路由表
&lt;ol&gt;
&lt;li&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204921376.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;更新路由表
&lt;ol&gt;
&lt;li&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204922113.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204922693.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;无穷计算（Count-to-infinity）问题：DVR 在得知更高效或更短路径（好消息）时会快速更新其路由表。然而，对于“坏消息”，如链路故障或更长路径，它的反应较慢。这种差异可能导致“无限计数”问题，其中路由器持续增加失效链路的跳数，导致路由环路和次优路由。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;好消息传得快，坏消息传得慢，导致了当路由信息发生变化时该变化未能及时地被所有路由器知道，而仍然可能在路由器之间进行传递&lt;/li&gt;
&lt;li&gt;慢收敛是导致发生路由回路的根本问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总结&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用在 RIP （Routing Information Protocol）、Cisco EIGRP （Enhanced Interior Gateway Routing Protocol）
&lt;ol&gt;
&lt;li&gt;RIP协议为应用层协议，使用UDP传送数据&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;改进：BGP-4 （Border Gateway Protocol）、IDRP （Inter-domain Routing Protocol）&lt;/li&gt;
&lt;li&gt;距离值&amp;gt;=16意味着该网络不可达&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;链路状态路由选择link-state-routing&#34;&gt;链路状态路由选择（Link State Routing）&lt;/h3&gt;
&lt;p&gt;概念&lt;/p&gt;
&lt;p&gt;在链路状态路由中，每个路由器都将其邻接网络的信息共享给网络中的所有其他路由器。使用链路状态包（Link-State Packet，LSP）定义并发送最佳已知的网络拓扑。当网络发生变化时，信息会被共享。&lt;/p&gt;
&lt;p&gt;步骤&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;发现邻居节点：每个路由器需要发现它的邻居，并知道他们的网络地址。这个过程通常是通过发送一种特殊的数据包，称为 HELLO 包，来实现的。HELLO 包可以在广播网络中广播，也可以在点对点网络中向邻居单播。当邻居收到 HELLO 包后，会回复一个确认包，告诉发送者它是谁。在这里，路由器的标识（Route IDs）必须是全球唯一的。另外，当两个或更多路由器通过局域网或其他多访问网络连接时，可以简化网络拓扑。&lt;/li&gt;
&lt;li&gt;测量线路开销：路由器需要测量到每个邻居的延迟或成本。这个过程可以通过测量往返时间（使用 ECHO 包）和带宽来实现。在此过程中，可能需要考虑是否在测量延迟时考虑负载因素，因为这可能会导致路由表振荡，从而引发许多潜在问题。&lt;/li&gt;
&lt;li&gt;创建链路状态分组：路由器需要构建一个链路状态分组（Link-State Packet，LSP），该包包含所有新学习到的信息：这个分组的内容包含了发送方的标识，以及是一个序列号（Seq）和年龄（Age），以及一个邻居列表。对于每个邻居，同时也要给出到这个邻居的延迟。这个过程可以定期进行，也可以在一些重大事件发生时进行，例如链路或邻居宕机、重新上线，或其属性发生显著变化。
&lt;ol&gt;
&lt;li&gt;序号是为了解决前面发生的浪费太多资源的问题，每发一包，序号加 1&lt;/li&gt;
&lt;li&gt;年龄是为了解决路由器崩溃，序号发生错误等情况，每秒年龄减 1，减到 0 后丢弃&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;分发链路状态分组：路由器需要将 LSP 可靠地发送到网络中的所有其他路由器，而不仅仅是它的邻居。这个过程主要是通过洪泛法来实现的，以防止路由器之间线路的错误。所有的 LSP 都需要得到确认，以确保其正确送达。&lt;/li&gt;
&lt;li&gt;计算新路由：一旦路由器积累了一整套 LSP，它就可以利用这些信息构造出整个网络拓扑图。然后，路由器可以运行 Dijkstra 的算法，根据这个网络拓扑图，计算出本节点到其他结点的最短路径。最后，这些计算结果可以被安装在路由表中，用于指导路由器的路由决策。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;例子&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204923268.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;应用&lt;/p&gt;
&lt;p&gt;链路状态路由（Link State Routing）在多种网络协议中得到了采用和实现，主要包括以下两种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;IS-IS（Intermediate System to Intermediate System）：这是一个开放性的路由协议，被设计出来主要用于路由交换机（routers）和交换机（switches）之间。IS-IS 协议支持多种网络层协议，如 DECnet，ISO CLNP，IP，AppleTalk，Novell NLSP （IPX）等。这种多协议支持的能力使得它在各种不同的网络环境中都能够工作。&lt;/li&gt;
&lt;li&gt;OSPF（Open Shortest Path First）：OSPF 是在 IS-IS 之后设计的一种路由协议，它只为 IP 提供服务。这是一种用于互联网内部网络的路由协议，主要用于在自治系统内部进行路由选择。OSPF 能够动态地适应网络拓扑的改变，其基本思想是让路由器了解到整个网络的拓扑结构，然后用最短路径算法（如 Dijkstra 算法）计算出最佳路由。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;两者都是基于链路状态的路由选择算法，但他们在具体的应用和支持的网络协议上有所不同。&lt;/p&gt;
&lt;h3 id=&#34;层次路由hierarchical-routing&#34;&gt;层次路由（Hierarchical Routing）&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204923903.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;红线是原路由，绿线是新路由&lt;/p&gt;
&lt;p&gt;Consider a subnet with 720 routers.假设这里有 720 个路由器&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If there is no hierarchy 不分层
&lt;ul&gt;
&lt;li&gt;720 routing table entries&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;If the subnet is partitioned into 24 regions of 30 routers each （Total:53） 24 个区域，每个区域 30 个路由器&lt;/li&gt;
&lt;li&gt;30 local entries 每个区域本地 30 个表&lt;/li&gt;
&lt;li&gt;23 remote entries 其他区域的表&lt;/li&gt;
&lt;li&gt;If a three-level hierarchy is chosen, with 8 clusters, each containing 9 regions of 10 routers (Total: 25)
&lt;ul&gt;
&lt;li&gt;10 entries for local routers&lt;/li&gt;
&lt;li&gt;8 entries for routing to other regions within its own cluster&lt;/li&gt;
&lt;li&gt;7 entries for distant clusters&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;dvr-和-lsr-对比&#34;&gt;DVR 和 LSR 对比&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;DVR (Distance Vector Routing)&lt;/th&gt;
&lt;th&gt;LSR (Link State Routing)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;分享的信息&lt;/td&gt;
&lt;td&gt;目标网络和距离&lt;/td&gt;
&lt;td&gt;网络拓扑（LSP）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;分享对象&lt;/td&gt;
&lt;td&gt;相邻路由器&lt;/td&gt;
&lt;td&gt;网络中的所有路由器&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;分享频率&lt;/td&gt;
&lt;td&gt;周期性&lt;/td&gt;
&lt;td&gt;变化时&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;路由器知道的信息&lt;/td&gt;
&lt;td&gt;距离，不包括路径拓扑&lt;/td&gt;
&lt;td&gt;整个网络拓扑&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是否有数至无穷的问题&lt;/td&gt;
&lt;td&gt;有&lt;/td&gt;
&lt;td&gt;没有&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;拥塞控制&#34;&gt;拥塞控制&lt;/h2&gt;
&lt;p&gt;概念&lt;/p&gt;
&lt;p&gt;当一个子网或子网的一部分中出现太多分组的时候，网络的性能开始下降。这种情况称之为拥塞，网络资源上有太多的分组时，将会导致网络性能下降，即对资源需求的总和大于可用资源。&lt;/p&gt;
&lt;p&gt;产生拥塞的原因&lt;/p&gt;
&lt;p&gt;包括低带宽线路、多个输入对应一个输出、节点缓冲容量小以及节点处理速度低。&lt;/p&gt;
&lt;p&gt;任何涉及等待或排队的系统都可能发生拥塞。如果数据包到达率高于数据包处理率，输入队列会变得越来越长。如果数据包离开率低于数据包处理率，输出队列会变得越来越长。&lt;/p&gt;
&lt;p&gt;拥塞控制的通用原则&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开环控制
&lt;ul&gt;
&lt;li&gt;是预防性技术，通过预先采取措施避免拥塞的发生。&lt;/li&gt;
&lt;li&gt;确定何时接受新流量、何时丢弃分组及丢弃哪些分组&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;闭环控制
&lt;ul&gt;
&lt;li&gt;是反应性技术，一旦网络发生拥塞，就采取措施进行应对。&lt;/li&gt;
&lt;li&gt;监视系统，检测拥塞发生的时间和地点，将信息传递到能采取行动的地方，然后调整系统运行以解决问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;拥塞控制途径：增加资源和减少负载&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;增加资源：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;网络提供（Network Provisioning）：规划和调整网络，以适应业务负载的需求。通过增加带宽、增加路由器、改进网络拓扑等方式来增加网络资源，以减轻拥塞压力。&lt;/li&gt;
&lt;li&gt;业务量感知的路由（Traffic Aware Routing）：在进行路由选择时，考虑网络负载的影响。根据网络拥塞的情况，选择路径以避免拥塞节点或拥塞链路，从而实现负载均衡和拥塞控制。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;减少负载：&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;接纳控制（Admission Control）：仅适用于虚电路网络，当网络资源不足时，拒绝建立新的虚电路连接，以避免进一步加重网络负载。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;业务量减速（Traffic Throttling）：通过限制流量的速率来降低网络负载。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;可以使用抑制分组（choke packet）、逐跳反压（hop-by-hop backpressure）和显示拥塞通知（ECN）等技术来控制和调节流量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;choke packet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;检测拥塞：
&lt;ol&gt;
&lt;li&gt;链路利用率（utilization of the output links）：如果输出链路的利用率过高，那么可能存在网络拥塞的情况。&lt;/li&gt;
&lt;li&gt;队列缓冲（buffering of queued packets inside the router）：如果路由器内部的数据包队列缓冲过多，那么可能存在网络拥塞的情况。&lt;/li&gt;
&lt;li&gt;丢包数（number of packets that are lost due to insufficient buffering）：如果因为缓冲不足而丢失的数据包数量过多，那么可能存在网络拥塞的情况。 为了估算队列延迟，通常使用指数加权移动均值（Exponentially Weighted Moving Average， EWMA）算法。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;通知源主机：
&lt;ol&gt;
&lt;li&gt;发送一个抑制分组（Choke Packet）给源主机，抑制分组中包含了原始数据包中的目标地址。&lt;/li&gt;
&lt;li&gt;对原始数据包进行标记，以防止它产生更多的抑制分组。&lt;/li&gt;
&lt;li&gt;为了避免增加网络负载，路由器可能会以低速率发送抑制分组。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;源主机降速：源主机接收到抑制分组后，可能会根据分组中的信息调整发送到指定目标的数据流量。例如，源主机可能会将流量减少 x%（例如 50%）。这样就可以降低网络拥塞，提高网络的整体性能。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;hop-by-hop backpressure&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它对经过的每一个跳点（也就是网络中的节点或路由器）都会产生影响。这种机制的主要目的是限制源节点向网络中发送过多的数据，从而减轻网络拥塞。&lt;/li&gt;
&lt;li&gt;在逐跳反压机制中，当一个节点（如路由器）检测到网络拥塞时，它会向上游节点发送反压信号，通知上游节点降低发送数据的速率。这个过程会在每个经过的节点间重复，从而使得整个网络路径上的数据流量得到控制。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ECN（IP/TCP 会使用）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ECN 通过在 IP 数据包头部使用两个比特位来记录数据包是否经历了拥塞。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当路由器检测到拥塞时，它会将传输的数据包的 ECN 字段设置为指示拥塞的标记。目的地主机会将这些标记作为明确的拥塞信号回传给发送方，在下一次回复数据包中将标记传递回去。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204924306.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;负载掉落（Load Shedding）：当路由器的处理能力不足以处理所有到达的数据包时，可以选择丢弃部分数据包来减轻负载。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以使用不同的策略，如葡萄酒策略（丢新的）或牛奶策略（丢旧的），也可以采用随机早期检测（Random Early Detection/RED）算法，在缓冲区空间即将耗尽之前开始丢弃数据包。&lt;/li&gt;
&lt;li&gt;RED：早点丢随机丢
&lt;ul&gt;
&lt;li&gt;RED 的目标是在拥塞出现之前就开始主动丢弃部分数据包，以促使发送方降低传输速率。通过采用随机丢包的方式，RED 可以实现一种分散拥塞的机制，避免了一次性丢弃大量数据包所带来的突发性拥塞。&lt;/li&gt;
&lt;li&gt;当某条线路上的平均队列长度超过一个阈值时，该线路被认为是拥塞的，随机丢弃一小部分数据包。&lt;/li&gt;
&lt;li&gt;路由器如何向源主机告知拥塞情况呢？路由器直接丢弃选择的数据包，受影响的发送方在没有收到确认时会注意到数据包的丢失。这是一种隐式通知。&lt;/li&gt;
&lt;li&gt;源主机在收到丢失的数据包后会减缓其传输速率，以响应丢包情况。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;服务质量&#34;&gt;服务质量&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;评价标准
&lt;ul&gt;
&lt;li&gt;Reliability
&lt;ul&gt;
&lt;li&gt;Packet error rate 差错率&lt;/li&gt;
&lt;li&gt;Packet loss rate 丢包率&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Delay&lt;/li&gt;
&lt;li&gt;Jitter&lt;/li&gt;
&lt;li&gt;Bandwidth&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;流量整形
&lt;ul&gt;
&lt;li&gt;漏桶（leaky bucket）算法
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204924777.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;桶满则数据丢失&lt;/li&gt;
&lt;li&gt;每个主机连接到网络的接口中都包含一个漏桶，即含有一个有限长度的内部队列。如果当该队列满的时候，又有一个分组到来，那么该分组将被丢弃，亦即是，如果在一台主机上，队列中的分组数目已经达到了最大值，这是又有一个或者多个进程要发送分组，那么新发送的分组将被丢弃。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;令牌桶（token bucket）算法
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204925126.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;桶中保存的是令牌，每个令牌包含一定数量的字节的分组，令牌桶允许主机积累发送全，直至到达桶的最大尺寸，因而相对于漏桶，允许有一定的突发流量。&lt;/li&gt;
&lt;li&gt;经过令牌桶之后的突发数据持续时间：
&lt;ul&gt;
&lt;li&gt;突发时间S，令牌桶容量B，令牌产生速率R，最大输出速率M&lt;/li&gt;
&lt;li&gt;MS=B+RS  &amp;ndash;&amp;gt; S=B(M-R)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;分组调度
&lt;ul&gt;
&lt;li&gt;公平排队（fair queueing）
&lt;ul&gt;
&lt;li&gt;路由器为每一条输出线路使用一组单独的队列，每个流一个队列。当一条线路空闲的时候，路由器轮流扫描这些队列，从下一个队列中取出第一个分组。使得所有的流量以相同的速率发送数据包&lt;/li&gt;
&lt;li&gt;（缺陷：他给使用大数据包的主机比使用小数据包的主机提供了更多的带宽）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;加权的公平排队（weighted fair queueing）
&lt;ul&gt;
&lt;li&gt;通过不同的主机赋予不同的优先级进行加权调节，从而提高算法的效率。&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204925683.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;网络互联&#34;&gt;网络互联&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;互联网络的分组转发
&lt;ul&gt;
&lt;li&gt;级联虚电路：
&lt;ul&gt;
&lt;li&gt;优点：
&lt;ul&gt;
&lt;li&gt;路由器预留缓冲区等资源，保证服务质量&lt;/li&gt;
&lt;li&gt;分组按序号传输；&lt;/li&gt;
&lt;li&gt;分组头短&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺点：
&lt;ul&gt;
&lt;li&gt;路由器需要大量内存，存储虚电路信息；&lt;/li&gt;
&lt;li&gt;一旦发生拥塞，没有其它路由；&lt;/li&gt;
&lt;li&gt;健壮性差：如果网络中有一个不可靠的数据报子网，级连虚电路很难实现。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;无连接网络互联：
&lt;ul&gt;
&lt;li&gt;优点：
&lt;ul&gt;
&lt;li&gt;能够容忍拥塞，并能适应拥塞；&lt;/li&gt;
&lt;li&gt;健壮性好；&lt;/li&gt;
&lt;li&gt;可用于多种网络互连。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺点：
&lt;ul&gt;
&lt;li&gt;长包头：&lt;/li&gt;
&lt;li&gt;包不能保证按序号到达；&lt;/li&gt;
&lt;li&gt;不能保证服务质量。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;隧道技术
&lt;ul&gt;
&lt;li&gt;当源和目标主机位于相同类型的网络中，中间的网络属于不同类型时使用隧道方案。&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204926041.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;互联网路由
&lt;ul&gt;
&lt;li&gt;互联网定义了两级路由算法：在每个网络内部使用的内部网关协议（interior gateway protocol）和在网络之间使用的外部网关协议exterior gateway protocol）。&lt;/li&gt;
&lt;li&gt;自治系统（AS,Autonomous System）
&lt;ul&gt;
&lt;li&gt;自治系统：在单一的技术管理下的一组路由器，而这些路由器使用一种AS内部的路由选择协议和共同的度量以确定分组在该AS内的路由，同时还使用一种AS之间的路由选择协议用以确定分组在AS之间的路由。&lt;/li&gt;
&lt;li&gt;现在对自治系统AS的定义是强调下面的事实：尽管一个AS使用了多种内部路由选择协议和度量，但重要的是一个AS对其他AS表现出的是一个单一的和一致的路由选择策略。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;因特网有两大类路由选择协议
&lt;ul&gt;
&lt;li&gt;内部网关协议IGP（Interior Gateway Protocol）：即在一个自治系统内部使用的路由选择协议。目前这类路由选择协议使用得最多，如RIP和OSPF协议。&lt;/li&gt;
&lt;li&gt;外部网关协议EGP（External Gateway Protocol）：若源站和目的站处在不同的自治系统中，当数据报传到一个自治系统的边界时，就需要使用一种协议将路由选择信息传递到另一个自治系统中。这样的协议就是外部网关协议EGP。在外部网关协议中目前使用最多的是BGP-4。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;分段和重组
&lt;ul&gt;
&lt;li&gt;MTU：Maximum Transmission Unit 最大传输单元&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;internet上的网络层&#34;&gt;Internet上的网络层&lt;/h2&gt;
&lt;h3 id=&#34;ipv4&#34;&gt;IPv4&lt;/h3&gt;
&lt;p&gt;每一台主机和每一个接口的唯一的 32 比特的标识符，点分十进制 x.x.x.x&lt;/p&gt;
&lt;h4 id=&#34;ipv4-header&#34;&gt;IPv4 Header&lt;/h4&gt;
&lt;p&gt;一个IP数据报由首部和数据两部分组成。&lt;/p&gt;
&lt;p&gt;首部的前一部分是固定长度，共20字节,是所有IP数据报必须具有的。在首部的固定部分的后面是一些可选字段，其长度是可变的。IP分组（数据报）结构如下图所示。IP首部的长度为20-60B。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204926463.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;版本 (version) 字段&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;版本 (Version) 字段记录了数据报属于协议哪个版本。（ipv4 or ipv6）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IHL 字段&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;由于头的长度不固定，所以头的 IHL 字段指明了头有多长（以4B为单位）。IHL 的最小值为 5，这表明头没有可选项。该 4 位字段的最大值为 15，把头的长度限制为最大 60 字节，因此选项 (Options) 字段最多为 40 字节。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;区分服务 (differentiated services) 字段&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;区分服务 (Differentiated services) 字段&lt;/p&gt;
&lt;p&gt;该字段最初称为服务类型 (Type of service)。它曾经并且仍然用来区分不同的服务种类。&lt;/p&gt;
&lt;p&gt;现在，前 6 位用来标记数据包的服务类别，我们在本章前面描述过的加速服务和确保服务：后 2 位用来携带显式拥塞通知信息，比如数据包是否经历了拥塞，我们在本章的拥塞控制部分描述了显式拥塞通知。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;总长度 (total length) 字段&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;总长度 (Total length) 字段包含了该数据报中的所有内容，即头和数据。最大长度是 65535 个字节。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标识 (identification) 字段&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;标识 (Identification) 字段的用途是让目标主机确定一个新到达的分段属于哪一个数据报。&lt;/p&gt;
&lt;p&gt;同一个数据报的所有段包含同样的标识值。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DF（Don&amp;rsquo;t Fragment）标志
&lt;ul&gt;
&lt;li&gt;DF=1 不能分段&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MF（More Fragments）标志
&lt;ul&gt;
&lt;li&gt;进行分段且后面还有fragment MF=0&lt;/li&gt;
&lt;li&gt;后面没有fragment MF=1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;分段偏移量 (fragment offset) 字段&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除了数据报的最后一个段以外，其他所有段的长度必须是 8 字节的倍数(单位为8B)&lt;/p&gt;
&lt;h4 id=&#34;例ip-数据报分段&#34;&gt;例：IP 数据报分段&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204926769.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204927189.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生存期 (time to live) 字段&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;生存期 (Time to live) 字段是一个用于限制数据包生存期的计数器。这里的计数单位最初设置为秒，因此最大的生存期为 255 秒。在每一跳上该计数器必须被递减，而且，当数据报在一台路由器上排队时间较长时，该计数器必须多倍递减。实际上，它只是跳计数器，当它递减到 0 时，数据包就被丢弃，并且路由器给数据包的源主机发回一个报警包。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;协议 (protocol) 字段&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;协议 (Protocol) 字段指明了该将它交给哪个传输进程。&lt;/p&gt;
&lt;p&gt;TCP 是6、 UDP 是17&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204927437.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;头校验和 (header checksum) 字段&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;头校验和 (Header checksum) 字段。校验算法的执行过程是这样的：当数据到达时，所有的 16 位（半字）累加起来，然后再取结果的补码。该算法的目的是到达数据包的头校验和计算结果应该为 0。这样的校验和对于检测数据包穿过网络时是否发生错误非常有用。请注意，在每一跳必须重新计算头校验和字段，因为至少有个字段总是不断在改变（即生存期字段），&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204927705.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;源地址和目标地址&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;源地址 (Source address) 字段和目标地址 (Destination address) 字段表示源网络接和日标网络接口的 P 地址。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选项 (options) 字段&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;选项 (Options) 字段的设计意图是提供一种途径，允许后续版本协议包含一些原设计中没有出现的信息，以便实验人员尝试新的想法、避免为那些不常使用的信息分配头字段。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204928015.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;严格源路由&#34;&gt;严格源路由&lt;/h4&gt;
&lt;p&gt;严格源路由 (Strict source routing) 选项给出了从源到目标的完整路径，其形式是一系列 IP 地址。数据报必须严格地遵循这条路径向前传输。&lt;/p&gt;
&lt;h4 id=&#34;松散源路由&#34;&gt;松散源路由&lt;/h4&gt;
&lt;p&gt;松散源路由 (Loose source routing) 选项要求该数据包穿越所指定的路由器列表，并且要求按照列表中的顺序前进；但是，在途中也允许经过其他路由器。&lt;/p&gt;
&lt;h4 id=&#34;记录路由&#34;&gt;记录路由&lt;/h4&gt;
&lt;p&gt;记录路由 (Record route) 选项告诉沿途的路由器，将自己的 IP 地址附加到可送字段中。&lt;/p&gt;
&lt;h4 id=&#34;时间戳&#34;&gt;时间戳&lt;/h4&gt;
&lt;p&gt;时间戳 (Timestamp) 选项类似于记录路由选项，只不过每个路由器除了记录自己的 32 位 IP 地址以外，还要记录一个 32 位时间戳&lt;/p&gt;
&lt;h4 id=&#34;ipv4-地址&#34;&gt;IPv4 地址&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;分类编址的 ipv4
&lt;ol&gt;
&lt;li&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204928376.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;只有 A/B/C 类地址能分配&lt;/li&gt;
&lt;li&gt;主机号全为 0：网络地址&lt;/li&gt;
&lt;li&gt;主机号全为 1：广播地址&lt;/li&gt;
&lt;li&gt;A：0 8 位网络号&lt;/li&gt;
&lt;li&gt;最小网络号为 0，保留不指派&lt;/li&gt;
&lt;li&gt;最大网络号为 127，作为本地环回测试，不指派&lt;/li&gt;
&lt;li&gt;B：10 16 位网络号&lt;/li&gt;
&lt;li&gt;最小网络号也是第一个可指派的网络号 128.0&lt;/li&gt;
&lt;li&gt;网络地址为 128.0.0.0&lt;/li&gt;
&lt;li&gt;最大网络号也是最后一个可指派的网络号 191.255&lt;/li&gt;
&lt;li&gt;网络地址为 191.255.0.0&lt;/li&gt;
&lt;li&gt;C：110 24 位网络号&lt;/li&gt;
&lt;li&gt;最小网络号也是第一个可指派的网络号 192.0.0&lt;/li&gt;
&lt;li&gt;网络地址为 192.0.0.0&lt;/li&gt;
&lt;li&gt;最大网络号也是最后一个可指派的网络号 223.255.255&lt;/li&gt;
&lt;li&gt;网络地址为 223.255.255.0&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;划分子网的 ipv4
&lt;ol&gt;
&lt;li&gt;从主机号借用若干位作为子网号&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204928635.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;划分为三个子网后对外仍是一个网络&lt;/li&gt;
&lt;li&gt;子网掩码&lt;/li&gt;
&lt;li&gt;（IP 地址） AND （子网掩码） = 网络地址&lt;/li&gt;
&lt;li&gt;默认子网掩码：未划分子网的情况下使用的子网掩码&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204929259.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;无分类编址的 ipv4
&lt;ol&gt;
&lt;li&gt;CIDR：斜线记法 在斜线后面写上网络号所占的比特数 128.14.34.7/20&lt;/li&gt;
&lt;li&gt;路由聚合&lt;/li&gt;
&lt;li&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204929716.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;最长前缀匹配：若路由器查表转发分组时，发现有多条路由可选，则选择网络前缀最长的那条&lt;/li&gt;
&lt;li&gt;（最小的子网）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;ipv4-地址的应用规划&#34;&gt;IPv4 地址的应用规划&lt;/h4&gt;
&lt;p&gt;给定一个 IPv4 地址块，如何将其划分成几个更小的地址块，并将这些地址块分配给互联网中不同网络，进而可以给各网络中的主机和路由器接口分配 IPv4 地址&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;定长的子网掩码 FLSM（Fixed Length Subnet Mask）、
&lt;ol&gt;
&lt;li&gt;使用同一个子网掩码来划分子网&lt;/li&gt;
&lt;li&gt;子网划分方式不灵活：只能划分出$$2^$$个子网（是从主机号部分借用的用来作为子网号的比特数量）&lt;/li&gt;
&lt;li&gt;每个子网所分配的 1P 地址数量相同，容易造成 P 地址浪费。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204930518.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204931390.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;变长的子网掩码 VLSM（Variable Length Subnet Mask）
&lt;ol&gt;
&lt;li&gt;使用不同的子网掩码来划分子网&lt;/li&gt;
&lt;li&gt;子网划分方式灵活：可以按需分配&lt;/li&gt;
&lt;li&gt;每个子网所分配的 P 地址数量可以不同，尽可能减少对 P 地址的浪费&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204932235.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204932858.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;nat转换&#34;&gt;NAT转换&lt;/h4&gt;
&lt;p&gt;NAT网络地址转换，它是一种把内部私有网络地址(IP地址)翻译成合法网络IP地址的技术。&lt;/p&gt;
&lt;p&gt;1)宽带共享解决IP地址匮乏问题&lt;/p&gt;
&lt;p&gt;简单地说，NAT就是在局域网内部网络中使用内部地址，而当内部节点要与外部网络进行通讯时，就在网关处，将内部地址替换成公用地址，从而在外部公网(internet)上正常使用，NAT可以使多台计算机共享Internet:连接，只申请一个合法IP地址，就把整个局域网中的计算机接入Internet中。这一功能很好地解决了公共IP地址紧缺的问题。&lt;/p&gt;
&lt;p&gt;2)提供安全防护&lt;/p&gt;
&lt;p&gt;NAT屏蔽了内部网络，所有内部网计算机对于公共网络来说是不可见的。内部地址（在内部网络中分配给节点的私有IP地址）只能在内部网络中使用，不能被路由转发，隐藏保护了内网的计算机。&lt;/p&gt;
&lt;h4 id=&#34;ip-数据报分组和转发过程&#34;&gt;IP 数据报分组和转发过程&lt;/h4&gt;
&lt;h5 id=&#34;直接交付与间接交付&#34;&gt;直接交付与间接交付&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204933392.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;可以通过&lt;strong&gt;目的地址&lt;/strong&gt; &lt;strong&gt;IP&lt;/strong&gt; 和&lt;strong&gt;源地址的****子网掩码&lt;/strong&gt;进行&lt;strong&gt;逻辑与运算&lt;/strong&gt;得到&lt;strong&gt;目的网络地址&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果&lt;strong&gt;目的网络地址&lt;/strong&gt;和&lt;strong&gt;源网络地址&lt;/strong&gt; &lt;strong&gt;相同&lt;/strong&gt;，就是&lt;strong&gt;在同一个网络&lt;/strong&gt;中，属于&lt;strong&gt;直接交付&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果&lt;strong&gt;目的网络地址&lt;/strong&gt;和&lt;strong&gt;源网络地址&lt;/strong&gt; &lt;strong&gt;不相同&lt;/strong&gt;，就&lt;strong&gt;不在同一个网络&lt;/strong&gt;中，属于&lt;strong&gt;间接交付&lt;/strong&gt;，传输给主机所在网络的&lt;strong&gt;默认****网关&lt;/strong&gt;（路由器），由默认网关帮忙转发。&lt;/p&gt;
&lt;h5 id=&#34;默认网关&#34;&gt;默认网关&lt;/h5&gt;
&lt;p&gt;为了使本网络中的主机能和其他网络中的主机进行通信，给其指定本网络的一个路由器的接口，由该路由器帮忙进行转发。&lt;strong&gt;所指定的路由器&lt;/strong&gt;，也被称为&lt;strong&gt;默认****网关&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204933847.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;路由器查表转发过程&#34;&gt;路由器查表转发过程&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;路由器收到 IP 数据报
&lt;ol&gt;
&lt;li&gt;检查 IP 数据报首部是否出错：
&lt;ul&gt;
&lt;li&gt;若出错，则直接丢弃该 IP 数据报并通告源主机&lt;/li&gt;
&lt;li&gt;若没有出错，则进行转发&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;根据 IP 数据报的目的地址在路由表中查找匹配的条目：
&lt;ul&gt;
&lt;li&gt;若找到匹配的条目，则转发给条目中指示的下一跳&lt;/li&gt;
&lt;li&gt;若找不到，则丢弃该数据报并通告源主机&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;假设 IP 数据报首部没有出错，路由器取出 IP 数据报首部各地址字段的值&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如源地址和目的地址&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204934384.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;查表转发&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;逐条检查路由条目，将目的地址与路由条目中的地址掩码进行逻辑与运算得到目的网络地址，然后与路由条目中的目的网络进行比较，如果相同，则这条路由条目就是匹配的路由条目。&lt;/p&gt;
&lt;p&gt;按照它的下一条指示，图中所示的也就是接口 1 转发该 IP 数据报&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204935203.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;路由器隔离广播域&#34;&gt;路由器隔离广播域&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204935785.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;ipv6&#34;&gt;IPv6&lt;/h3&gt;
&lt;p&gt;IPv6  地址，冒分十六进制&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204936056.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;数据报：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240123204936353.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;其他协议&#34;&gt;其他协议&lt;/h3&gt;
&lt;h4 id=&#34;icmp&#34;&gt;ICMP&lt;/h4&gt;
&lt;h4 id=&#34;arp&#34;&gt;ARP&lt;/h4&gt;
&lt;h4 id=&#34;dhcp&#34;&gt;DHCP&lt;/h4&gt;
</description>
        </item>
        <item>
        <title>3 数据链路层</title>
        <link>http://localhost:1313/post/3-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</link>
        <pubDate>Sun, 21 Jan 2024 15:23:20 +0000</pubDate>
        
        <guid>http://localhost:1313/post/3-%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</guid>
        <description>&lt;h2 id=&#34;数据链路层的功能&#34;&gt;数据链路层的功能&lt;/h2&gt;
&lt;p&gt;数据链路层的功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;向网络层提供一个定义良好的服务接口。&lt;/li&gt;
&lt;li&gt;处理传输错误。&lt;/li&gt;
&lt;li&gt;调节数据流，确保慢速的接收方不会被快速的发送方淹没。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;为了实现这些目标，数据链路层从网络层获得数据包，然后将这些数据包封装成帧 (frame) 以便传输。每个帧包含一个帧头、一个有效载荷（用于存放数据包）以及一个帧尾。&lt;/p&gt;
&lt;p&gt;基本术语：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;结点(node)：&lt;/p&gt;
&lt;p&gt;网络中的主机（host）和路由器（router）称为结点&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;链路（Link）&lt;/p&gt;
&lt;p&gt;两个结点之间的点到点的线路段&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据链路（Data Link）&lt;/p&gt;
&lt;p&gt;协议+链路，在不可靠的物理链路上实现可靠的传输&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;端到端（end to end）&lt;/p&gt;
&lt;p&gt;从源结点（source node）到目的结点 （ destinationnode）的通信路径（path），可能由多个链路组成&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;提供给网络层的服务：&lt;/p&gt;
&lt;p&gt;无确认的无连接服务：是指源机器向目标机器发送独立的帧，目标机器并不对这些帧进行确认。&lt;/p&gt;
&lt;p&gt;有确认的无连接服务：当向网络层提供这种服务时，数据链路层仍然没有使用逻辑连接，但其发送的每一帧都需要单独确认。&lt;/p&gt;
&lt;p&gt;面向连接的服务：采用这种服务，源机器和目标机器在传输任何数据之前要建立一个连接。连接上发送的每一帧都被编号，数据链路层确保发出的每个帧都会真正被接收方收到。它还保证每个帧只被接收一次，并且所有的帧都将按正确的顺序被接收。&lt;/p&gt;
&lt;p&gt;数据链路层使用的信道&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;点对点信道，使用一对一的通信方式。 PPP 协议则是目前使用报广泛的点对点协议。&lt;/li&gt;
&lt;li&gt;广播信道，这种信道上连接的主机很多，使用一对多的广播通信方式。采用共享广播信 道的有线局域网普遍使用 CSMA/CD 协议，而无线局域网则使用 CSMA/CA 协议。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;封装成帧与透明传输&#34;&gt;封装成帧与透明传输&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;透明传输&lt;/strong&gt;：在数据链路层传输时，所传输的数据在数据链路层没有任何的阻挡，接收方所收到的数据和发送方发送的数据没有任何差别，也就是说，&lt;strong&gt;数据链路层对其传输的数据帧是完全透明的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;封装成帧&lt;/strong&gt;是指在一段数据的前后分别添加首部和尾部构成帧。&lt;/p&gt;
&lt;p&gt;帧是数据链路层的数据传送单元。&lt;/p&gt;
&lt;p&gt;帧长=帧的数据部分长度+首部和尾部的长度。&lt;/p&gt;
&lt;p&gt;首部和尾部中含有很多控制信息，它们的一个重要作用是确定帧的界限，即&lt;strong&gt;帧定界&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;接收方能从接收到的二进制比特流中区分出帧的 起始与终止，即&lt;strong&gt;帧同步&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;字符计数法character-count&#34;&gt;字符计数法Character Count&lt;/h3&gt;
&lt;p&gt;利用头部中的一个字段来标识该帧中的字符数。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/2021-07-21-10-47-55-9uynXC.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;字节填充法byte-stuffing&#34;&gt;字节填充法Byte Stuffing&lt;/h3&gt;
&lt;p&gt;让每个用一些特殊的字节作为开始和结朿。这些特殊字节通常都相同，称为标志字节 (flag byte)，作为帧的起始和结束分界符。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/2021-07-21-10-47-55-09lAvz.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;零比特填充法bit-stuffing&#34;&gt;零比特填充法Bit Stuffing&lt;/h3&gt;
&lt;p&gt;每个帧的开始和结束由一个特殊的比特模式，01111110 或十六进制 0x7E 标记。这种模式是一个标志字节。每当发送方的数据链路层在数据中遇到连续五个 1，它便自动在输出的比特流中填入一个比特 0。这种比特填充类似于字节填充，在数据字段的标志字节之前插入一个转义字节到出境字符流中。&lt;/p&gt;
&lt;h3 id=&#34;违规编码法physical-layer-coding-violations&#34;&gt;违规编码法Physical Layer Coding Violations&lt;/h3&gt;
&lt;p&gt;在物理层进行比特编码时，常采用违规编码法。例如，曼彻斯特编码方法将数据比特 “1&amp;quot; 编码成“高－低“电平对，将数据比特 ”O&amp;quot; 编码成“低－高“电平对，而“高－高“电平对和“低 －低“电平对在数据比特中是违规的（即没有采用），因此可借用这些违规编码序列来定界帧的起始和终止。局域网 IEEE 802 标准就采用了这种方法。违规编码法不采用任何填充技术便能实现数 据的透明传输，但只适用千采用冗余编码的特殊编码环境。&lt;/p&gt;
&lt;h2 id=&#34;差错检测和纠正&#34;&gt;差错检测和纠正&lt;/h2&gt;
&lt;p&gt;通常利用编码技术进行差错控制，主要有两类：自动重传请求 (ARQ)和前向纠错(FEC) 。&lt;/p&gt;
&lt;p&gt;在 ARQ方式中，当接收方检测到差错时，就设法通知发送方重发，直到收到正确的数据为止。在 FEC 方式中，接收方不但能发现差错，而且能确定错误的位置并加以纠正。因此，差错控制又可分为检错编码和纠错编码。&lt;/p&gt;
&lt;h3 id=&#34;检错编码&#34;&gt;检错编码&lt;/h3&gt;
&lt;h4 id=&#34;奇偶校验码&#34;&gt;奇偶校验码&lt;/h4&gt;
&lt;p&gt;缺点：只能检验奇数位出错情况&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;奇检验码：附加一个检验位后，码长为 n 的码字中 1 的个数为奇数。&lt;/li&gt;
&lt;li&gt;偶检验码：附加一个检验位后，码长为 n 的码字中 1 的个数为偶数。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;循环冗余码crc&#34;&gt;循环冗余码CRC&lt;/h4&gt;
&lt;p&gt;（1）发送方：待校验数据补充r个0之后，对生成多项式进行模2除法，余数（r位）即为校验信息&lt;/p&gt;
&lt;p&gt;（2）接收方：待校验数据和校验信息一起，对生成多项式进行模2除法，余数不为0即认为有错&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240121164309560.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240121164309560&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;CRC 的性能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;所有的一位错误都将被检测到&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;可以捕捉到&lt;strong&gt;所有包含奇数个位&lt;/strong&gt;变反的错误情形&lt;/li&gt;
&lt;li&gt;带 r 个校验位的多项式编码可以检测到所有&lt;strong&gt;长度小于等于 r 的突发错误&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;如果突发错误的长度为 r+1，这样一个不正确的帧被当做有效帧接收的概率是$\frac 1 {2^{r-1}}$&lt;/li&gt;
&lt;li&gt;同样可以证明，当一个长度大于 r+1 位的突发错误发生时，或者几个短突发错误发生时，一个坏帧被当做有效帧通过检测的概率为$\frac 1 {2^{r}}$&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;纠错编码&#34;&gt;纠错编码&lt;/h3&gt;
&lt;p&gt;最常见的纠错编码是海明码。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240121164632811.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240121164632811&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240121164709496.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240121164709496&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;流量控制和可靠传输机制&#34;&gt;流量控制和可靠传输机制&lt;/h2&gt;
&lt;h3 id=&#34;乌托邦式的单工协议&#34;&gt;乌托邦式的单工协议&lt;/h3&gt;
&lt;p&gt;单工协议即数据只能单向传输。这个协议假设信道永远不会丢失或损坏帧，接收方的处理能力足够快，缓冲区足够大。发送程序无限循环，接受程序响应事件，协议1中不包含流量控制和纠错功能。&lt;/p&gt;
&lt;h3 id=&#34;stop-and-wait-protocol&#34;&gt;Stop-and-Wait Protocol&lt;/h3&gt;
&lt;h4 id=&#34;无错信道上的单工停等协议&#34;&gt;无错信道上的单工停等协议&lt;/h4&gt;
&lt;p&gt;发送方的速度如果过快，接收方会被淹没，除了增强接收方的处理能力，可以让接收方给发送方发送反馈，发送方收到后才可以发送下一帧。发送程序无限循环并等待接收方确认，接受程序响应事件后发送确认帧。&lt;/p&gt;
&lt;h4 id=&#34;有错信道上的单工停等协议&#34;&gt;有错信道上的单工停等协议&lt;/h4&gt;
&lt;p&gt;有错信道上传输数据需要增加校验，接收方仅在数据正确时发送确认帧。但在确认帧丢失的情况下（超时），发送方将重发。接收方难以判断帧是重发还是新发，因此帧前加上序号以区分。重复的帧也会收到确认帧，以便发送方决策。&lt;/p&gt;
&lt;h4 id=&#34;超时重传&#34;&gt;超时重传&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;分组丢失：发送方发送分组，接收方没有收到分组，那么接收方不会发出确认，只要发送方过一段时间没有收到确认，就认为刚才的分组丢了，那么发送方就会再次发送。&lt;/li&gt;
&lt;li&gt;确认丢失：发送方发送成功，接收方接收成功，确认分组也被发送，但是分组丢失，那么到了等待时间，发送方没有收到确认，又会发送分组过去，此时接收方前面已经收到了分组，那么此时接收方要做的事就是:丢弃分组,重新发送确认。&lt;/li&gt;
&lt;li&gt;传送延迟：发送方发送成功，接收方接收成功，确认分组也被发送，没有丢失，但是由于传输太慢，等到了发送方设置的时间，发送方又会重新发送分组，此时接收方要做的事情：丢弃分组，重新发送确认.。发送方如果收到两个或者多个确认，就停止发送，丢弃其他确认。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;差错控制&#34;&gt;差错控制&lt;/h4&gt;
&lt;p&gt;ARQ（自动请求重传）实现差错控制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果正确的接收，那么接受方会发送一个ACK帧给发送方&lt;/li&gt;
&lt;li&gt;如果发送方没有收到接受方回复的ACK帧，那么发送方会设置计时器并重新发送传输帧&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了确保正确性，必须对框架和ACK进行编号&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;接收机需要区分重传（由于丢失ACK或提前定时器）和新帧，对于停等协议，2个数字（使用1位）就足够了。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;信道利用率&#34;&gt;信道利用率&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240121214056171.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240121214056171&#34;
	
	
&gt;
$$
\alpha = \frac {t_{prop}} {t_{frame}} = \frac {Distance/Speed Of Signal} {Frame Size/Bit rate}
$$&lt;/p&gt;
&lt;p&gt;$$
U=\frac {t_{frame}} {2t_{prop}+t_{frame}}=\frac 1 {2\alpha +1}
$$&lt;/p&gt;
&lt;h3 id=&#34;sliding-window-protocol&#34;&gt;Sliding Window Protocol&lt;/h3&gt;
&lt;h4 id=&#34;滑动窗口的概念&#34;&gt;滑动窗口的概念&lt;/h4&gt;
&lt;p&gt;所有滑动窗口协议的本质是在任何时刻发送方总是维持着一组序号，分别对应于允许它发送的帧。我们称这些帧落在发送窗口 (sending window) 内。类似地，接收方也维持着一个接收窗口 (receiving window)，对应于一组允许它接受的帧。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;发送方窗口内的序号代表了那些可以被发送的帧，或者那些已经被发送但还没有被确认的帧&lt;/strong&gt;。任何时候当有新的数据包从网络层到来时，它被赋予窗口中的下一个最高序号，并且窗口的上边界前移一格。当收到一个确认时，窗口的下边界也前移一格。按照这种方法发送窗口持续地维持了一系列未被确认的帧。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;接收方数据链路层的窗口对应于它可以接受的帧&lt;/strong&gt;。任何落在窗口内的帧被放入接收方的缓冲区。当收到一个帧，而且其序号等于窗口下边界时，接收方将它传递给网络层，并将整个窗口向前移动 1 个位置。任何落在窗口外面的帧都将被丢弃。在所有情况下，接收方都要生成一个确认并返回给发送方，以便发送方知道该如何处理。&lt;/p&gt;
&lt;h4 id=&#34;滑动窗口协议的特点&#34;&gt;滑动窗口协议的特点&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;只有接受窗口向前移动的时候，发送窗口才会向前移动&lt;/li&gt;
&lt;li&gt;从滑动窗口的概念来看，停止等待协议、回退N协议和选择重传协议只不过是发送窗口和接受窗口的大小不同
&lt;ul&gt;
&lt;li&gt;停止等待协议：发送窗口和接受窗口大小都是1&lt;/li&gt;
&lt;li&gt;后退N协议:发送窗口&amp;gt;1,接收窗口大小为1&lt;/li&gt;
&lt;li&gt;选择重传协议:发送窗口&amp;gt;1,接受窗口大小&amp;gt;1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;当接收窗口大小为1的时候可以保证有序的被接收&lt;/li&gt;
&lt;li&gt;数据链路层中，传输过程中滑动窗口的大小是固定的&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;可靠的传输机制&#34;&gt;可靠的传输机制&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;捎带确认(piggy backing)：数据帧携带一个ACK帧&lt;/li&gt;
&lt;li&gt;超时重传：在发送某个数据帧之后，就开启一个计时器，开始计时，一旦超过某段时间还没有收到确认帧，就重新发送该数据帧&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自动重传请求ARQ：接受方请求发送方重新发送出错的数据帧来恢复出错的帧，传统的自动重传分三种&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;停止等待ARQ&lt;/li&gt;
&lt;li&gt;后退ARQ&lt;/li&gt;
&lt;li&gt;选择性重传ARQ
窗口开的够大的时候，帧在线路上可以连续的流动，因此又称连续的ARQ协议&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;一位滑动窗口协议&#34;&gt;一位滑动窗口协议&lt;/h4&gt;
&lt;p&gt;发送窗口=接收窗口=1，其实就是停等协议。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/2021-07-21-10-48-05-bbOgga.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;回退n帧协议gbn&#34;&gt;回退N帧协议GBN&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;发送窗口的大小&amp;gt;1，接收窗口的大小=1&lt;/li&gt;
&lt;li&gt;接收端发现某一帧发生差错时，直接丢弃所有后续的帧，对丢弃帧不发送确认&lt;/li&gt;
&lt;li&gt;数据链路层除了接收应该递交给网络层的下一帧之外，拒绝接收其它任何帧&lt;/li&gt;
&lt;li&gt;发送方最终会超时，将按顺序重传所有未被确认的帧，即从最初受损或丢失的那一帧开始&lt;/li&gt;
&lt;li&gt;接收端接收帧的顺序和发送端发出帧的顺序相同&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/1734701-20191113143205596-1020968708.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;窗口大小的选择&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用n表示序号字段长度；$2^n$表示发送端可发送帧的序号个数&lt;/li&gt;
&lt;li&gt;发送窗口尺寸w应为$2^n-1$&lt;/li&gt;
&lt;li&gt;任何时候，可以发送的帧的最大个数不能等同于序号空间的大小。对回退 n 协议，可发送的帧最多为 MAX_SEQ 个，即使存在 MAX_SEQ+1 个不同的序号（分别为 0、1、2、&amp;hellip;MAX_SEQ)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;适用情况&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;回退n帧协议，如果错误率较低时，工作的很好&lt;/li&gt;
&lt;li&gt;但错误率较高时，就会浪费大量的带宽在重传上&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;累计确认&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当 n 号帧的确认到达，n-1 号帧、n-2 号帧等都会自动被确认。这种类型的确认称为累计确认 (cumulative acknowledgement)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;计时器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;因为协议 5 有多个未被确认的帧，所以逻辑上它需要多个计时器，即每一个未被确认的帧都需要一个计时器&lt;/p&gt;
&lt;h4 id=&#34;选择重传协议sr&#34;&gt;选择重传协议SR&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;接收方的数据链路层存储坏帧之后的所有正确的帧，当发送方得知某个帧出错时，只是重传此坏帧，而不是所有的后继帧&lt;/li&gt;
&lt;li&gt;在这个协议中，发送方和接收方都维持一个可接收序列号的窗口&lt;/li&gt;
&lt;li&gt;接收窗口的大小&amp;gt;1，并为窗口中的每个序列号都提供一个缓冲区，每个缓冲区用一位判断其是否为空&lt;/li&gt;
&lt;li&gt;当某一帧到达时，接收方检查其序列号，看其是否落在窗口内&lt;/li&gt;
&lt;li&gt;如果落在窗口内且从未接收过，就接收并存储&lt;/li&gt;
&lt;li&gt;接收到的此帧保存在数据链路层，而不交给网络层，直到比它序列号小的所有帧都按次序已交给了网络层，此帧才能提交给网络层&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/1734701-20191113173906867-2062364742.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;选择重传协议的窗口大小&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;窗口大小应为&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Ws+Wr&amp;lt;=2^n | Ws&amp;gt;=Wr | Ws,Wr&amp;lt;=2^(n-1) &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一般情况下发送窗口和接收窗口都取$2^{n-1}$&lt;/p&gt;
&lt;p&gt;这个问题的本质在于：当接收方向前移动它的窗口后，新的有效序号范围与老的序号范围有重叠。因此，后续的一批帧可能是重复的帧（如果所有的确认都丢失了），也可能是新的帧（如果所有的确认都接收到了）。可怜的接收方根本无法区分这两种情形。&lt;/p&gt;
&lt;p&gt;解决这个难题的办法是确保接收方向前移动窗口之后，新窗口与老窗口的序号没有重叠。为了保证没有重叠，窗口的最大尺寸应该不超过序号空间的一半，&lt;/p&gt;
&lt;p&gt;无论如何，接收方不可能接受序号低于窗口下界的帧，也不可能接受序号高于窗口上界的帧。因此，所需要的缓冲区的数量等于窗口的大小，而不是序号的范围。&lt;/p&gt;
&lt;p&gt;出于同样的原因，需要的计时器数量等同于缓冲区的数量，而不是序号空间的大小。&lt;/p&gt;
&lt;p&gt;实际上，每个缓冲区都有一个相关联的计时器。当计时器超时，缓冲区的内容就要被重传&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NAK&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当接收方有理由怀疑出现了错误时，它就给发送方返回一个否定确认 (NAK) 帧。这样的帧实际上是一个重传请求，在 NAK 中指定了要重传的帧。在两种情况下，接收方要特别注意：接收到一个受损的帧，或者到达的帧并非是自己所期望的（可能出现丢帧错误）。为了避免多次请求重传同一个丢失帧，接收方应该记录下对于某一帧是否已经发送过 NAK。&lt;/p&gt;
&lt;h3 id=&#34;信道利用率帧序号计算&#34;&gt;信道利用率/帧序号计算&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;信道利用率&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;帧发送时间$$t_f$$、单向传播时延$$t_p$$、发送窗口大小$$W_T$$
&lt;ul&gt;
&lt;li&gt;$$\alpha=\frac{t_p}{t_f}$$&lt;/li&gt;
&lt;li&gt;$$t_f=\frac{帧长}{信道速率}$$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;信道利用率$$U=\frac{W_T}{1+2a}=\frac{W_T&lt;em&gt;t_f}{t_f+2&lt;/em&gt;t_p+t_{确认}（一般忽略）}$$
&lt;ul&gt;
&lt;li&gt;U=100%  $$W\geq1+2a$$&lt;/li&gt;
&lt;li&gt;U&amp;lt;100%  $$W&amp;lt;1+2a$$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;采用捎带应答时，信道利用率$$U=\frac{W_T}{2+2a}$$
&lt;ul&gt;
&lt;li&gt;U=100%  $$W\geq2+2a$$&lt;/li&gt;
&lt;li&gt;U&amp;lt;100%  $$W&amp;lt;2+2a$$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;信道利用率$$U=\frac{L_1}{L_1+L_2+2×t×v}$$
&lt;ul&gt;
&lt;li&gt;L1:发送帧长   L2:确认帧长  t:单向传播时延   v:传输速率&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;帧序号计算&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;第一个总用时$$t_总=t_f+2*t_p+t_{确认}$$&lt;/li&gt;
&lt;li&gt;计算可发多少个
&lt;ul&gt;
&lt;li&gt;$$x=\frac{t_总}{t}$$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;计算最小帧序号 n
&lt;ul&gt;
&lt;li&gt;GBN:$$x&amp;lt;2^n-1$$&lt;/li&gt;
&lt;li&gt;SR:$$x&amp;lt;2^{n-1}$$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;介质访问控制&#34;&gt;介质访问控制&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://aye10032.gitbook.io/computernetwork/di-san-zhang-shu-ju-lian-lu-ceng/3.5-jie-zhi-fang-wen-kong-zhi&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://aye10032.gitbook.io/computernetwork/di-san-zhang-shu-ju-lian-lu-ceng/3.5-jie-zhi-fang-wen-kong-zhi&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;静态分配信道&#34;&gt;静态分配信道&lt;/h3&gt;
&lt;p&gt;将使用介质的每个设备与来自同一信道上的其他设备的通信隔开，把时域和频域资源合理分配给网络上的设备。&lt;/p&gt;
&lt;h4 id=&#34;fdm-频分多路复用&#34;&gt;FDM 频分多路复用&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;每个信号有自己独立的带宽，信号在通信的过程中自始自终都占用这个频带，在同样的时间占用不同的带宽频率
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;不用于数字，只用于&lt;strong&gt;模拟信号&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;tdm-时分多路复用&#34;&gt;TDM 时分多路复用&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;时分多路复用TDM，信道分割的方法是信号占用的时间，将使用复用的各路信号在时间上互不重叠，在传输时把时间分成小的时隙，每一时隙由复用的一个信号占用
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240122110938080.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不会发生碰撞&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;stdm-统计时分复用&#34;&gt;STDM 统计时分复用&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;是改进的时分复用技术，它可以提高信道的利用率。集中器使用这个方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240122110938415.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;统计时分复用技术使用STDM帧来传送复用数据，但每一个STDM帧中的时隙数小于或等于连接在集中器上的用户数，因此STDM帧不是固定分配时隙，而是按需动态分配时隙，由于用户占用的时隙并不是周期性地被使用，所以在每个时隙中还必须有用户的地址信息，这是统计时分复用必须要有的不可避免的开销。&lt;/li&gt;
&lt;li&gt;各用户有了数据就随时发往集中器的输入缓存，然后集中器按照一定顺序依次扫描用户是否输入，把缓存中的输入数据放到 STDM 帧中，没有数据的缓存就跳过去，当一个帧的数据放满了才发送出去。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;wdm-波分多路复用&#34;&gt;WDM 波分多路复用&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;使用一根光纤来同时传输多个光载波信号&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用于光信号&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;cdm-码分多路复用&#34;&gt;CDM 码分多路复用&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;CDM与前几钟技术不同，它既共享信道的频率，也共享时间，是一种真正的动态复用技术，其原理是每比特时间被分成m个更短的时间槽，称为码片（Chip），通常情况下每比特有64或128个码片，每个站点（通道）被指定一个唯一的m位的代码或码片序列。当发送1时站点就发送码片序列，发送0时就发送码片序列的反码。当两个或多个站点同时发送时，各路数据在信道中被线形相加。为了从信道中分离出各路信号，要求各个站点的码片序列是相互正交的&lt;/li&gt;
&lt;li&gt;Java\C\Python\PHP(规格化内积/正交)&lt;/li&gt;
&lt;li&gt;均匀分割&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;动态分配信道&#34;&gt;动态分配信道&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;有效数据率&amp;amp;CSMA/CD工作过程，例题：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240122110938739.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;以太网最短帧长：使最短帧发送时间不少于2τ，以便发送站点能够在发送完毕之前检测到冲突&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;aloha&#34;&gt;ALOHA&lt;/h5&gt;
&lt;p&gt;纯ALOHA想发就发，不监听，不按时间槽发送，随机重发如果发生冲突，接收方在就会检测出差错,然后不予确认，发送方在一定时间内收不到确认就判断发生冲突。等待超时后就会重发数据帧。两个帧时内无冲突概率 $$e^{-2G}$$吞吐量： $$S=G*e^{-2G}$$  G=0.5 时，最好的信道利用率为 18.4%（G 每帧时的平均帧数）&lt;/p&gt;
&lt;p&gt;时隙S-ALOHA只在时隙开始才能发送把时间分成若干个相同的时间片，所有用户在时间片开始时刻同步接入网络信道若发生冲突，那么等到时间槽开始才能发，无冲突的概率为 $$e^{-G}$$，G=1 时效率最高位 36.8% ，效率是纯ALOHA的两倍&lt;/p&gt;
&lt;h5 id=&#34;csmacarrier-sense-multiple-access-载波侦听多路访问协议发送前先侦听缺点如果发生冲突都需要将已经出错的数据帧发送给接受方造成资源的浪费imghttpspicture2023-1309715649cosap-beijingmyqcloudcomimgnull-20240122111242527null&#34;&gt;CSMA（Carrier Sense Multiple Access ）载波侦听多路访问协议，发送前先侦听缺点：如果发生冲突，都需要将已经出错的数据帧发送给接受方，造成资源的浪费&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240122111242527.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/h5&gt;
&lt;p&gt;1 坚持忙时一直监听，空闲就发&lt;/p&gt;
&lt;p&gt;非坚持busy不发，随机时间后检测&lt;/p&gt;
&lt;p&gt;p 坚持Idle 下 p发送，1-p不发busy等待下一个时间槽空闲后随机发&lt;/p&gt;
&lt;h5 id=&#34;csmacd碰撞检测&#34;&gt;CSMA/CD（碰撞检测）&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;先听再发，边发边听，碰撞停止，随机延发（二进制退避）&lt;/li&gt;
&lt;li&gt;（半双工）以太网使用，使用 CSMA 协议，有线&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;二进制退避算法&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;确定基本退避（推迟)时间为争用期2τ
&lt;ol&gt;
&lt;li&gt;数据发送方最长需要一个往返传播时延的时间（2t）才可以了解自己的数据有没有和其他的数据帧冲突。 只要经过2t时间还没有检测到碰撞，就能肯定这次发送不会发生碰撞。这段时间称为争用期&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;定义参数k，它等于重传次数，但k不超过10
&lt;ol&gt;
&lt;li&gt;k=min[重传次数，10]&lt;/li&gt;
&lt;li&gt;当重传次数不超过10时，k等于重传次数&lt;/li&gt;
&lt;li&gt;当重传次数大于10时，k就不再增大而一直等于10。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;从离散的整数集合$$[0,1,2^k-1]$$中随机取出一个数r，&lt;/li&gt;
&lt;li&gt;重传时间$$T=r*2τ$$&lt;/li&gt;
&lt;li&gt;当重传达16次仍不能成功时，认为此帧永远无法正确发出，抛弃此帧并向高层报告出错。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最短有效帧长&lt;/strong&gt;$$L=2τ*带宽$$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;macamultiple-access-with-collision-avoidance&#34;&gt;MACA（Multiple Access with Collision Avoidance）&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240122111242967.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（A） 首先给B发送一个RTS帧（包含了随后将要发送的数据帧的长度）。&lt;/p&gt;
&lt;p&gt;（B） B用一个CTS帧作为应答（包含了随后将要发送的数据帧的长度，复制）。&lt;/p&gt;
&lt;p&gt;（C） C只听到了A发出的RTS，但没有听到B发出的CTS，只要它没有干扰CTS，那么在数据帧传送过程中，它可以自由地发送任何信息。&lt;/p&gt;
&lt;p&gt;（D） D听不到RTS帧，但是听到了CTS帧。只要听到了CTS帧，这意味着它与一个将要接收数据帧的站离得很近，所以，它就延缓发送任何信息直到那个帧如期传送完毕。&lt;/p&gt;
&lt;p&gt;（E） 站E听到了这两条控制消息，与D一样在数据帧完成之前它必须保持安静。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;csmaca&#34;&gt;CSMA/CA&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;CS：载波侦听/监听，每一个站在发送数据之前以及发送数据时都要检测一下总线上是否有其他计算机在发送数据。&lt;/p&gt;
&lt;p&gt;MA：多点接入，表示许多计算机以多点接入的方式连接在一根总线上。&lt;/p&gt;
&lt;p&gt;CD：碰撞检测（冲突检测)，边发送边监听，通过适配器边发送数据边检测信道上信号电压的变化情况，以便判断自己在发送数据时其他站是否也在发送数据。&lt;/p&gt;
&lt;p&gt;基于MACA进行了改进，在802.11标准定义，能解决隐藏终端问题，但不能解决暴露终端问题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;半双工网络/无线网&lt;/li&gt;
&lt;li&gt;RTS：请求发送控制帧&lt;/li&gt;
&lt;li&gt;CTS：允许发送控制帧-&amp;gt;明确发送许可，指示其它站点不要发送&lt;/li&gt;
&lt;li&gt;过程：
&lt;ul&gt;
&lt;li&gt;在发送数据前，先检查信道是否空闲
&lt;ol&gt;
&lt;li&gt;信道空闲：
&lt;ul&gt;
&lt;li&gt;发出RTS（RTS包括发射端的地址、接收端的地址、下一份数据将持续发送的时间等信息）。&lt;/li&gt;
&lt;li&gt;接收端收到RTS后会发出响应CTS。&lt;/li&gt;
&lt;li&gt;发送端收到CTS后，开始发送数据帧（同时预约信道:发送方告知其他站点自己要传多久数据)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;信道忙：等待信道空闲。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;当接受方接收到其他发送方发送RTS后，因为已经建立过通信了，所以就不会响应其他发送方的RTS，这样就可以避免信号发生干扰。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;接受方使用CRC循环检验码判断接受的数据是否出错。没有出错返回ACK响应.&lt;/li&gt;
&lt;li&gt;发送方收到ACK就可以进行下一个数据帧的发送，若没有则一直重传至规定重发次数为止(采用二进制指数退避算法来确定随机的推迟时间）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;终端问题&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240122111243262.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;li&gt;隐藏终端问题
&lt;ul&gt;
&lt;li&gt;A和C向B传送数据，若A开始发送，C监听不到A的传输，C认为它可以向B传输数据，导致在B处产生冲突，因此，需要一个MAC协议来防止冲突的发生&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;暴露终端问题
&lt;ul&gt;
&lt;li&gt;B先向A发送，此时C监听到有一个传输正在进行，认为它不能向D发送数据，因此，需要一个MAC协议来防止延迟传输的发生&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;解决方案（MACA）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240122111243555.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240122111243857.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;动态划分信道轮询访问介质访问控制&#34;&gt;动态划分信道（轮询访问介质访问控制）&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;结合了信道划分介质访问控制的优点（不会发生传输冲突）&lt;/p&gt;
&lt;p&gt;和随机访问介质访问控制的优点（数据帧可以占据全部带宽）&lt;/p&gt;
&lt;p&gt;轮询访问介质访问控制：既要不产生冲突，发送时又占全部带宽。&lt;/p&gt;
&lt;p&gt;令牌转递协议主要应用于令牌环网（物理星型拓扑，逻辑环形拓扑）&lt;/p&gt;
&lt;p&gt;采用令牌传送方式的网络常用于&lt;strong&gt;负载较重、通信量较大&lt;/strong&gt;的网络中&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;轮询协议&#34;&gt;轮询协议&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;主结点轮流&amp;quot;邀请&amp;quot;从属结点发送数据。&lt;/li&gt;
&lt;li&gt;缺点：
&lt;ul&gt;
&lt;li&gt;轮询开销&lt;/li&gt;
&lt;li&gt;等待延迟&lt;/li&gt;
&lt;li&gt;单点故障&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;令牌传递协议&#34;&gt;令牌传递协议&lt;/h5&gt;
&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/(null)-20240122111244196.(null)&#34; alt=&#34;img&#34; style=&#34;zoom:50%;&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;所有站连接成一个单环结构，一个站依次连接到下一站。令牌传递到下一站只是简单地从一个方向接收令牌在另一个方向上发送令牌。令牌绕着环循环到达任何一个目标站。为了阻止帧陷入无限循环，应设置帧必须从某个站取下，如可设置为最初发送帧的原始站，经历一个完整的环后取下。&lt;/li&gt;
&lt;li&gt;令牌：
&lt;ul&gt;
&lt;li&gt;特殊格式的MAC帧，不含任何信息。令牌控制信道的使用，确保同一时刻只有一个结点独占信道。&lt;/li&gt;
&lt;li&gt;每个结点都可以在一定的时间内(令牌持有时间）获得发送数据的权利，并不是无限制地持有令牌。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;缺点：&lt;/li&gt;
&lt;li&gt;令牌开销&lt;/li&gt;
&lt;li&gt;等待延迟&lt;/li&gt;
&lt;li&gt;单点故障（替代机解决）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;局域网&#34;&gt;局域网&lt;/h2&gt;
&lt;p&gt;局域网（ Local Area Ne twork, LAN) 是指在一个较小的地理范围内，将各种计算机、外部设备和数据库系统等通过双绞线、同轴电缆等连接介质互相连接起来，组成资源和 信息共享的计算机互连网络。主要特点如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为一个单位所拥有，且地理范围和站点数目均有限。&lt;/li&gt;
&lt;/ol&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;所有站点共享较高的总带宽（即较高的数据传输速率）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;较低的时延和较低的误码率。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;各站为平等关系而非主从关系。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;能进行广播和多播。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;局域网的介质访问控制方法主要有 CSMA/CD 协议、令牌总线协议和令牌环协议，其中前两 种协议主要用千总线形局域网，令牌环协议主要用于环形局域网。&lt;/p&gt;
&lt;h3 id=&#34;经典以太网&#34;&gt;经典以太网&lt;/h3&gt;
&lt;p&gt;以太网是目前最流行的有线局域网技术。以太网逻辑上采用总线形拓扑结构，所有计算机共 享同一条总线，信息以广播方式发送，以太网使用 CSMAJCD 方式对总线进行访问控制。&lt;/p&gt;
&lt;p&gt;以太网采用两项措施来简化通信：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;采用无连接的工作方式，既不对发送的数据帧编号，又不要求接收方发送确认，即以太网尽最大努力交付数据，提供的是不可靠服务，对差错的纠正则由高层完成。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;发送的数据都使用曼彻斯特编码的信号，每个码元的中间出现一次电压转换，接收方利用这种电压转换方便地将位同步信号提取出来。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240122115842065.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240122115842065&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;网卡：&lt;/p&gt;
&lt;p&gt;计算机与外界局域网的连接是通过主板上嵌入的一块网络适配器 (Adapter) ［又称网络接口卡NlC)] 实现的。适配器上装有处理器和存储器，工作在数据链路层。适 配器和局域网的通信是通过电缆或双绞线以串行方式进行的，而适配器和计算机的通信则是通过 计算机的1/0 总线以并行方式进行的。因此，适配器的重要功能就是进行数据的串并转换。 适配器不仅能实现与局域网传输介质之间的物理连接和电信号匹配，还涉及帧的发送与接 收、帧的封装与拆封、介质访问控制、数据的编码与解码及数据缓存等功能。当适配器收到正确 的帧时，就使用中断来通知该计算机，并交付协议栈中的网络层。当计算机要发送 IP 数据报时， 就由协议栈把 IP 数据报向下交给适配器，组帧后发送到局域网。&lt;/p&gt;
&lt;p&gt;以太网的MAC地址&lt;/p&gt;
&lt;p&gt;lEEE 802 标准为局域网规定了一种 48 位的全球地址，是指厄域网上的每台计算机中固化在适 配器的 ROM 中的地址，称为物理地址或 MAC 地址（因为这种地址用在 MAC 帧中），这个地址用 千控制主机在树络上的数据通信。全世界所有的局域网适配器都具有不同的地址，一台计笃机只要 没有更换适配器，不管其地理位翌如何变化，共 MAC 地址都不会变化。&lt;/p&gt;
&lt;p&gt;MAC 地址长 6 字节，一般用由连字符（或冒号）分隔的 12 个十六进制数表示，如 02-60-8c-e4-b1-21 。高 24 位为厂商代码，低 24 位为厂商自行分配的适配器序列号。&lt;/p&gt;
&lt;p&gt;当路由器通过适配器连接到局域网时，适配器上的 MAC 地址就用来标志路由器的某个接口。 路由器若同时连接到两个网络上，则它需要两个适配器和两个 MAC 地址。&lt;/p&gt;
&lt;p&gt;以太网的MAC帧&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240122120130412.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240122120130412&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;目标地址&#34;&gt;目标地址&lt;/h5&gt;
&lt;p&gt;如果传输出去的目标地址第一位是 0，则表示这是一个普通地址；如果是 1，则表示这是一个组地址。组地址允许多个站同时监听一个地址。当某个帧被发送到一个组地址， 该组中的所有站都要接收它。往一组地址的发送行为称为组播 (multicasting)。由全 1 组成的特殊地址保留用作广播 (broadcasting)。如果一个帧的目标地址字段为全 1，则它被网络上的所有站接收。&lt;/p&gt;
&lt;h5 id=&#34;mac-地址&#34;&gt;MAC 地址&lt;/h5&gt;
&lt;p&gt;站的源地址有一个有趣的特点，那就是它们具有全球唯一性。&lt;/p&gt;
&lt;p&gt;地址字段的前 3 个字节用作该站所在的组织唯一标识符 (OUI, Organizationally Unique Identifier)。该字段的值由 IEEE 分配，指明了网络设备制造商。&lt;/p&gt;
&lt;p&gt;地址字段的最后 3 个字节由制造商负责分配，并在设备出厂之前把完整的地址用程序编入 NIC&lt;/p&gt;
&lt;h5 id=&#34;数据字段和长度范围&#34;&gt;数据字段和长度范围&lt;/h5&gt;
&lt;p&gt;接下来是数据 (Data) 字段，最多可包含 1500 个字节。总帧长度最多 1518 字节。&lt;/p&gt;
&lt;p&gt;以太网要求有效帧必须至少 64 字节长，从目标地址算起直到校验和，包括这两个字段本身在内。如果帧的数据部分少于 46 个字节，则使用填充 (Pad) 字段来填充该帧，使其达到最小长度要求&lt;/p&gt;
&lt;h5 id=&#34;数据字段下限的原因&#34;&gt;数据字段下限的原因&lt;/h5&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/2021-07-21-13-03-06-yDuRZv.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;当 B 检测到它所接收到的信号比它发送的信号更强时，它知道已经发生了冲突，所以放弃了自己传送，并且产生一个 48 位的突发噪声以警告所有其他站。&lt;/p&gt;
&lt;p&gt;如果一个站试图传送非常短的帧，则可以想象：虽然发生了冲突，但是在突发噪声回到发送方 (2 て）之前，传送已经结束。然后，发送方将会得出刚オ一帧已经成功发送的错误结论。为了避免发生这样的情况，所有帧必须至少需要 2 て时间才能完成发送，这样当突发噪声回到发送方时传送过程仍在进行。&lt;/p&gt;
&lt;h5 id=&#34;二进制指数后退-binary-exponential-backoff&#34;&gt;二进制指数后退 (binary exponential backoff)&lt;/h5&gt;
&lt;p&gt;一般地，在第i�次冲突之后，从0∼2i−10∼2�−1之间随机选择一个数，然后等待这么多个时间槽。然而，达到 10 次冲突之后，随机数的选择区间被固定在最大值 1023，以后不再增加。在 16 次冲突之后，控制器放弃努力，并给计算机返回一个失败报告。&lt;/p&gt;
&lt;h3 id=&#34;交换式以太网&#34;&gt;交换式以太网&lt;/h3&gt;
&lt;h5 id=&#34;交换机&#34;&gt;交换机&lt;/h5&gt;
&lt;p&gt;交换机只把帧输出到该帧想去的端口。当交换机端口接收到来自某个站的以太网帧，它就检査该帧的以太网地址，确定该帧前往的目的地端口&lt;/p&gt;
&lt;p&gt;在集线器中，所有站都位于同一个冲突域 (collision domain)， 它们必须使用 CSMA/CD 算法来调度各自的传输。在交换机中，每个端口有自己独立的冲突域。通常情况下，电缆是全双工的，站和端口可以同时往电缆上发送帧，根本无须担心其他站或者端口。现在冲突不可能发生，因而 CSMA/CD 也就不需要了。然后，如果电缆是半双工的，则站和端口必须以通常的 CSMA/CD 方式竞争传输。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://static.xqmmcqs.com/2021-07-21-13-03-08-CmRZJq.png&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/2021-07-21-13-03-08-CmRZJq.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;交换机的优点&#34;&gt;交换机的优点&lt;/h5&gt;
&lt;p&gt;交换机的性能优于集线器有两方面的原因。首先，由于没有冲突，容量的使用更为有效。其次，也是更重要的，有了交换机可以同时发送多个帧（由不同的站发出）。这些帧到达交换机端口并穿过交换机背板输出到适当的端口&lt;/p&gt;
&lt;p&gt;帧被发送到输出端口还有利于安全。大多数 LAN 接口都支持混杂模式 (promiscuous mode)，这个模式下所有的帧都被发到每台计算机，而不只是那些它寻址的机器。每个连到集线器上的计算机能看到其他所有计算机之间的流量&lt;/p&gt;
&lt;p&gt;有了交换机，流量只被转发到它的目的端口。&lt;/p&gt;
&lt;h3 id=&#34;高速以太网&#34;&gt;高速以太网&lt;/h3&gt;
&lt;p&gt;速率达到或超过 100Mb/s 的以太网称为高速以太网，表 3.3 列出了几种高速以太网技术。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240122120446572.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240122120446572&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;快速以太网&#34;&gt;快速以太网&lt;/h4&gt;
&lt;p&gt;传输速率比传统快10倍，数据传输速率达到100Mb/s。用户只需更换一个适配器，再配上一个100Mb/s的集线器就可方便地由10BASE-T以太网直接升级到100Mb/s。目前的10Mb/s和100Mb/s以太网是使用无屏蔽双绞线布线的。&lt;/p&gt;
&lt;h4 id=&#34;千兆以太网&#34;&gt;千兆以太网&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;数据传输速率是快速以太网的10倍，可达到1Gb/s。吉比特以太网保留了传统10BASE-T以太网的基本特征，具有相同的帧格式和类似的组网方法&lt;/li&gt;
&lt;li&gt;特点（802.3z标准的G比特以太网）：
&lt;ul&gt;
&lt;li&gt;支持全双工和半双工两种工作方式；&lt;/li&gt;
&lt;li&gt;在半双工方式下采用CSMA/CD协议，而在全双工方式下不采用该协议；&lt;/li&gt;
&lt;li&gt;向后兼容10BASE-T和100BASE-T技术。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;1000BASE-T，即IEEE 802.3ab，使用4对5类非屏蔽双绞线，双绞线长度可达100 m。&lt;/li&gt;
&lt;li&gt;1000BASE-X，即IEEE 802.3z，有以下3种有关传输介质的标准：
&lt;ul&gt;
&lt;li&gt;1000BASE-CX；&lt;/li&gt;
&lt;li&gt;1000BASE-LX；&lt;/li&gt;
&lt;li&gt;1000BASE-SX。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;万兆以太网&#34;&gt;万兆以太网&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;又称万兆以太网，使用IEEE 802.3以太网介质访问控制MAC协议&lt;/li&gt;
&lt;li&gt;特征：
&lt;ul&gt;
&lt;li&gt;只支持双工模式，不支持单工模式，而传统的以太网标准均支持单工/双工模式。&lt;/li&gt;
&lt;li&gt;由于传输速率高，10吉比特以太网只能使用光纤作为传输介质，而传统的以太网标准均支持同轴电缆。&lt;/li&gt;
&lt;li&gt;不支持CSMA/CD协议，因为该协议只适用于速率较慢的单工以太网。&lt;/li&gt;
&lt;li&gt;使用64B/66B和8B/10B两种编码方式，而传统以太网只使用8B/10B的编码方式。&lt;/li&gt;
&lt;li&gt;具有支持局域网和广域网的接口，且有效距离可达40 km，而传统的以太网只支持局域网应用，有效传输距离不超过5 km。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;无线局域网&#34;&gt;无线局域网&lt;/h3&gt;
&lt;h4 id=&#34;80211-体系结构和协议栈&#34;&gt;802.11 体系结构和协议栈&lt;/h4&gt;
&lt;p&gt;有固定基础设施的无线局域网&lt;/p&gt;
&lt;p&gt;无固定基础设施移动自组织网络&lt;/p&gt;
&lt;h4 id=&#34;80211局域网的mac帧&#34;&gt;802.11局域网的MAC帧&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/2021-07-21-13-03-16-h9nbGA.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;数据帧的第二个字段为持续时间 (Duration) 字段，它通告本帧和其确认将会占用信道多长时间，按微秒计时。该字段会出现在所有帧中，包括控制帧，其他站使用该字段来管理各自的 NAV 机制。&lt;/p&gt;
&lt;p&gt;接下来是地址字段。发往 AP 或者从 AP 接收的帧都具有 3 个地址，这些地址都是标准的 IEEE802 格式。第一个地址是接收方地址，第二个地址是发送方地址。很显然，这两个地址是必不可少的，那么第三个地址是做什么用的呢？请记住，当帧在一个客户端和网络中另一点之间传输时，AP 只是一个简单的中继点。这网络中的另一点也许是一个远程客户端，或许是 Internet 接入点。第三个地址就指明了这个远程端点&lt;/p&gt;
&lt;h3 id=&#34;虚拟局域网&#34;&gt;虚拟局域网&lt;/h3&gt;
&lt;h5 id=&#34;vlan-和配置表&#34;&gt;VLAN 和配置表&lt;/h5&gt;
&lt;p&gt;为了使 VLAN 正常地运行，网桥必须建立配置表。这些配置表指明了通过哪些端口可以访问到哪些 VLAN。当一帧到来时，比如说来自灰色 VLAN，那么这帧必须被转发到所有标记为 G 的端口。这一条规则对于网桥不知道目的地位置的普通流量（即单播）以及组播和广播流量都适用。注意，一个端口可以标记为多种 VLAN 颜色。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/2021-07-21-13-03-21-fyrCfc.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;vlan-帧格式&#34;&gt;VLAN 帧格式&lt;/h5&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://static.xqmmcqs.com/2021-07-21-13-03-21-moYXc1.png&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/2021-07-21-13-03-21-moYXc1.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&#34;vlan-感知&#34;&gt;VLAN 感知&lt;/h5&gt;
&lt;p&gt;因为存在一些计算机（和交换机）无法感知 VLAN，因此第一个 VLAN 感知的网桥在帧上添加一个 VLAN 字段，路径上的最后一个网桥把添加的 VLAN 字段删除。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://static.xqmmcqs.com/2021-07-21-13-03-22-cJN9Bk.png&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/2021-07-21-13-03-22-cJN9Bk.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;广域网&#34;&gt;广域网&lt;/h2&gt;
&lt;p&gt;广域网(Wide Area Network,WAN) 通常是指毅盖范围很广（远超一个城市的范围）的长距离网络，任务是长距离运送主机所发送的数据。连接广域网各结点交换机的链路都是高速链路， 广域网首要考虑的问题是通信容昼必须足够大，以便支持日益增长的通信拭。 广域网不等千互联网。互联网可以连接不同类型的网络，通常使用路由器来连接。图 3.32 显示了由相距较远的局域网通过路由器与广域网相连而成的一个栩盖范围很广的互联网。因此，局域网可以通过广域网与另一个相隔很远的局域网通信。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240122125926898.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240122125926898&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;广域网由一些结点交换机（注意不是路由器，结点交换机和路由器都用来转发分组，它们的 工作原理也类似。结点交换机在单个网络中转发分组，而路由器在多个网络构成的互联网中转发 分组）及连接这些交换机的链路组成。结点交换机的功能是存储并转发分组。结点之间都是点到点连接，但为了提高网络的可靠性，通常一个结点交换机往往与多个结点交换机相连。从层次上考虑，广域网和局域网的区别很大，因为局域网使用的协议主要在数据链路层（还有少量在物理层），而广域网使用的协议主要在网络层。怎么理解“局域网使用的协议主要在数据链路层，而广域网使用的协议主要在网络层“这句话呢？若网络中的两个结点要进行数据交换， 则结点除了要给出数据，还要给数据“包装”上一层控制信息，用于实现传输控制等功能。若这 层控制信息是数据链路层协议的控制信息，则称使用了数据链路层协议；若这层控制信息是网络 层的控制信息，则称使用了网络层协议。&lt;/p&gt;
&lt;h2 id=&#34;数据链路层协议实例&#34;&gt;数据链路层协议实例&lt;/h2&gt;
&lt;h3 id=&#34;ppp&#34;&gt;PPP&lt;/h3&gt;
&lt;p&gt;**点对点****协议（Point-to-Point Protocol， PPP）**是目前使用最广泛的数据链路层协议，用于使用拨号电话接入因特网时一般都使用PPP协议，是面向字节的数据链路层协议。 PPP协议只支持全双工链路。&lt;/p&gt;
&lt;h4 id=&#34;组成&#34;&gt;组成&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;一种将封装了多种协议的数据报传输到串行链路的方法。&lt;/li&gt;
&lt;li&gt;链路控制协议（Link Control Protocol， LCP），LCP 协议是 PPP 协议的一部分。它用于建立、配置、测试数据链路的连接。&lt;/li&gt;
&lt;li&gt;一套网络控制协议（Network Control Protocol， NCP），NCPs 是一系列协议，用于建立和配置不同的网络层协议。每个 NCP 协议都支持不同的网络层协议，比如 IP 协议，OSI 的网络层，苹果的 Appple Talk 等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;帧格式&#34;&gt;帧格式&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240122130122287.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;标志字段&#34;&gt;标志字段&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;标志（flag）：首部的第一个字段和尾部的最后一个字段都是标志字段 F（flag），规定的值用十六进制表示为：0x7E = 01111110。如果数据字段碰巧出现了标志字段的值，则需要在数据字段进行字节填充，来消除这种歧义。&lt;/li&gt;
&lt;li&gt;PPP 协议可以应用在异步传输或者同步传输中，异步传输以字节为单位传输，同步传输以比特为单位传输。所以填充方式也分为字节填充和比特填充。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;字节填充&#34;&gt;字节填充&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;当 PPP 使用异步传输时，如果信息字段出现了和标志字段一样的字节（&lt;strong&gt;0x7E 为开始/结束字符，0x7D 为转义字符）&lt;/strong&gt;，就需要进行字节填充，核心思路是通过在该字节前面填充转义字符（escape character， ESC）。&lt;/li&gt;
&lt;li&gt;然后用0x20 xor后面那个&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240122130122478.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;比特填充&#34;&gt;比特填充&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;PPP 协议在用在同步光纤网络等链路时，会使用&lt;strong&gt;同步传输（将一连串的比特连续传送&lt;/strong&gt;，而不是按字节为单位传送）。这时候 PPP 协议采用比特填充。
&lt;ul&gt;
&lt;li&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/%28null%29-20240122130122660.%28null%29&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;ppp协议的应满足的需求&#34;&gt;PPP协议的应满足的需求&lt;/h4&gt;
&lt;p&gt;(1) 简单。对数据链路层的帧，无需差错恢复，无需序号，无需流量控制。  (2) 封装成帧。PPP协议必须规定特殊的字符作为帧定界符（标志着一个帧的开始和结束）。  (3) 透明传输。与帧定界符一样的比特组合应该如何处理。  (4) 差错检测：接收到错误的帧就直接丢弃。  (5) 最大传送单元：数据部分最大长度MTU。  &amp;hellip;.&lt;/p&gt;
&lt;h4 id=&#34;ppp协议的不需要满足的需求&#34;&gt;PPP协议的不需要满足的需求&lt;/h4&gt;
&lt;p&gt;(1) 无需差错纠正/恢复。  (2) 无需流量控制。  (3) 无需支持多点链路。  (4) 不存在乱序交付。  差错恢复、流量控制等由高层协议处理。&lt;/p&gt;
&lt;h3 id=&#34;hdlc&#34;&gt;HDLC&lt;/h3&gt;
&lt;p&gt;HDLC 称为“高级数据链路控制协议”，它是一个在&lt;strong&gt;同步网络&lt;/strong&gt;上传输的、面向比特位的数据链路层协议。&lt;/p&gt;
&lt;p&gt;数据报文可透明传输，用于实现透明传输的是“零比特插入法”，易于硬件实现。&lt;/p&gt;
&lt;p&gt;采用全双工通信。 所有帧采用CRC校验，对信息帧进行顺序编号，可防止漏收或重传，传输可靠性高。&lt;/p&gt;
&lt;h4 id=&#34;hdlc站&#34;&gt;HDLC站&lt;/h4&gt;
&lt;p&gt;HDLC站分为：主站、从站和复合站。  (1) 主站：发送命令（包括数据信息）帧，接收响应帧，并负责对整个链路的控制系统的初启、流程控制、差错检测或恢复等。  (2) 从站：接收由主站发来的命令帧，向主站发送响应帧，并且配合主站参与差错恢复等链路控制。  复合站：既能发送，又能接收命令帧和响应帧，并且负责这整个链路的控制。&lt;/p&gt;
&lt;h4 id=&#34;hdlc的帧格式&#34;&gt;HDLC的帧格式&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/-20240122130133057&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;(1) 标志（Flag）字段：占一个字节，二进制位01111110。  (2) 控制（Control）字段：表示帧的类型。分为三种：信息帧（I）、监督帧（S）、无编号帧（U）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(1) 信息帧：控制字段第1位为0，用来传输数据信息，或使用捎带技术对数据进行确认。 (2) 监督帧：前两位比特是10，用于流量控制，执行对信息帧的确认、请求重发和请求暂停发送等功能。 (3) 无编号帧：前两位比特是11，用于提供对链路的建立、拆除等多种控制功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;ppp协议和hdlc协议比较&#34;&gt;PPP协议和HDLC协议比较&lt;/h2&gt;
&lt;p&gt;相同点：  (1) PPP、HDLC协议都支持全双工链路。  (2) 都可以实现透明传输。  (3) 都可以实现差错检测，但都不纠正差错。&lt;/p&gt;
&lt;p&gt;不同点：  (1) PPP协议面向字节，HDLC协议面向比特。  (2) HDLC协议帧格式没有协议字段。  (3) PPP协议无序号和确认机制，HDLC协议有编号和确认机制。  (4) PPP协议不可靠，HDLC协议可靠。&lt;/p&gt;
&lt;p&gt;（5）PPP 可以用于同步传输也可以用于异步传输，而 HDLC 只能用在同步网上&lt;/p&gt;
&lt;h2 id=&#34;数据链路层设备&#34;&gt;数据链路层设备&lt;/h2&gt;
&lt;h3 id=&#34;以太网交换机&#34;&gt;以太网交换机&lt;/h3&gt;
&lt;p&gt;以太网交换机也称二层交换机，二层是指以太网交换机工作在数据链路层。以太网交换机实质上是一个多接口的网桥，它能将网络分成小的冲突城，为每个用户提供更大的带宽。对于传统使用集线器的共享式 10Mb/s 以太网，若共有N个用户，则每个用户的平均带宽为总带宽（10Mb/s）的 1/。使用以太网交换机（全双工方式）连接这些主机时，虽然从每个接口到主机的带宽还是10Mb/s，但是因为一个用户通信时是独占带宽的（而不是和其他网络用户共享传输介质带宽的），所以拥有N个接口的交换机的总容量为 Nx10Mb/s。这正是交换机的最大优点。&lt;/p&gt;
&lt;p&gt;以太网交换机的特点：1）当交换机的接口直接与主机或其他交换机连接时，可工作在全双工方式，并能同时连通多对接口，使每对相互通信的主机都能像独占通信介质那样，无冲突地传输数据，这样就不需要使用 CSMA/CD 协议。2）当交换机的接口连接集线器时，只能使用 CSMA/CD 协议且只能工作在半双工方式。当前的交换机和计算机中的网卡都能自动识别上述两种情况。3）交换机是一种即插即用设备，其内部的帧转发表是通过自学习算法，基于网络中各主机间的通信，自动地逐渐建立的。4）交换机因为使用专用交换结构芯片，交换速率较高。5） 交换机独占传输介质的带宽。&lt;/p&gt;
&lt;p&gt;以太网交换机主要采用两种交换模式：1） 直通交换方式。只检查帧的目的MAC 地址，以决定该帧的转发接口。这种方式的交换时延非常小，缺点是它不检查差错就直接转发，因此可能将一些无效帧转发给其他站。直通交换方式不适用于需要速率匹配、协议转换或差错检测的线路。2）存储转发交换方式。先将接收到的帧缓存到高速缓存器中，并检查数据是否正确，确认无误后通过查找表转换为输出接口，以便将该帧发送出去。若发现帧有错，则将其丢弃。优点是可靠性高，且能支持不同速率接口间的转换，缺点是时延较大。交换机一般都具有多种速率的接口，如10Mb/s、100Mb/s 的接口，以及多速率自适应接口。&lt;/p&gt;
&lt;h4 id=&#34;交换机的自学习功能&#34;&gt;交换机的自学习功能&lt;/h4&gt;
&lt;p&gt;决定一个帧是转发到某个接口还足丢弃它称为过虎。决定一个帧应被移至哪个接口称为转发。交换机的过滤和转发借助交换表 (switch table) 完成。交换表中的一个表项至少包含： 一 个 MAC 地址和连通该 MAC 地址的接口。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240122130415185.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240122130415185&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240122130429660.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240122130429660&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;共享式以太网和交换式以太网的对比&lt;/p&gt;
&lt;p&gt;假设交换机已通过自学习算法逐步建立了完整的转发表，下面举例说明使用镁线器的共享式 以太网与全部使用交换机的交换式以太网的区别。 l) 主机发送普通帧。对于共享式以太网，集线器将帧转发到其他所有接口，其他各主机中&lt;/p&gt;
&lt;p&gt;的网卡根据帧的目的 MAC 地址决定接收或丢弃该帧。对于交换式以太网，交换机收到帧 后，根据帧的目的 MAC 地址和自身的交换表将帧明确地转发给目的主机。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;主机发送广播帧。对于共享式以太网，媒线器将帧转发到其他所有接口，其他各主机 中的网卡检测到帧的目的 MAC 地址是广播地址时，就接收该帧。对于交换式以太网，&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;交换机检测到帧的目的 MAC 地址是广播地址，千是从其他所有接口转发该帧，其他&lt;/p&gt;
&lt;p&gt;各主机收到该广播帧后，就接收该帧。两种悄况从效果上看是相同的，但它们的原理 并不相同。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;多对主机同时通信。对千共享式以太网，当多对主机同时通信时，必然产生冲突。对千 交换式以太网，交换机能实现多对接口的商速并行交换，因此不会产生冲突。&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>2 物理层</title>
        <link>http://localhost:1313/post/2-%E7%89%A9%E7%90%86%E5%B1%82/</link>
        <pubDate>Sat, 20 Jan 2024 15:12:37 +0000</pubDate>
        
        <guid>http://localhost:1313/post/2-%E7%89%A9%E7%90%86%E5%B1%82/</guid>
        <description>&lt;h2 id=&#34;物理层的功能&#34;&gt;物理层的功能&lt;/h2&gt;
&lt;p&gt;物理层是计算机网络分层结构的最低一层。物理层负责通过物理介质移动数据，涉及在介质上传输的信号和比特流。根据网络传输过程，物理层从数据链路层接收完整的帧(Frame)，将二进制编码为一系列信号，并通过本地物理介质传输这些信号。&lt;/p&gt;
&lt;h2 id=&#34;基本概念&#34;&gt;基本概念&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;信号&lt;/strong&gt; #card&lt;/p&gt;
&lt;p&gt;信号是&lt;strong&gt;数据的电气或电磁表现&lt;/strong&gt;，可分为&lt;strong&gt;模拟信号（连续信号）&lt;strong&gt;和&lt;/strong&gt;数字信号（离散信号）&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;码元&lt;/strong&gt; #card&lt;/p&gt;
&lt;p&gt;一个离散信号状态或信号事件
表示一位k进制数字（k进制码元）
1码元携带$log_2k$bit信息量&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据率Bit rate&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据传输速率 bps&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;波特率Baud rate&lt;/strong&gt; #card&lt;/p&gt;
&lt;p&gt;码元传送速率
$1 Baud = (log_2V)bps$
V是信号的电平级数&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;信噪比S/N&lt;/strong&gt; #card&lt;/p&gt;
&lt;p&gt;$SNR(db)=10log_{10} \frac S N$&lt;/p&gt;
&lt;p&gt;$\frac S N=10^{\frac {SNR} {10}}$&lt;/p&gt;
&lt;h2 id=&#34;信道&#34;&gt;信道&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;信道Channel&lt;/strong&gt; #card&lt;/p&gt;
&lt;p&gt;传送信息的媒体&lt;/p&gt;
&lt;h3 id=&#34;基带信号和宽带信号&#34;&gt;基带信号和宽带信号&lt;/h3&gt;
&lt;p&gt;信道按传输信号形式的不同，可分为传送模拟信号的模拟信道和传送数字信号的数字信道两&lt;/p&gt;
&lt;p&gt;大类；信道按传输介质的不同可分为无线信道和有线信道。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;基带信号(Baseband signaling)&lt;/strong&gt; #card&lt;/p&gt;
&lt;p&gt;基带信号将数字信号 1 和 0 直接用两种不同的电压表示，然后送到数字信道上传输。&lt;strong&gt;占用整条网线的信号传输。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;宽带信号传输(Broadband signaling)&lt;/strong&gt; #card&lt;/p&gt;
&lt;p&gt;宽带信号将基带信号进行调制后形成频分复用模拟信号，然后送到模拟信道上传输。&lt;strong&gt;一条网线可以传输多种不同的信号&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;单工半双工全双工&#34;&gt;单工/半双工/全双工&lt;/h3&gt;
&lt;p&gt;单工simplex/半双工half-duplex/全双工full-deplex #card&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单工：只有一个方向&lt;/li&gt;
&lt;li&gt;半双工：双方都能发送信号，但是不能同时发送&lt;/li&gt;
&lt;li&gt;全双工：通信双方都能同时发送消息&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;串行传输和并行传输&#34;&gt;串行传输和并行传输&lt;/h3&gt;
&lt;p&gt;串行传输serial transmission和并行传输parallel transmission #card&lt;/p&gt;
&lt;p&gt;串行传输是指 1 比特 1 比特地按照时间顺序传输（远距离通信通常采用串行传输）
并行传输是指若干比特通过多条通信信道同时传输。
&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240120172438888.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240120172438888&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;异步传输和同步传输&#34;&gt;异步传输和同步传输&lt;/h3&gt;
&lt;p&gt;异步串行传输 #card&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;独立时钟，无须同步&lt;/li&gt;
&lt;li&gt;以字符为单位进行传输，发送两个字符之间的间隔是任意的&lt;/li&gt;
&lt;li&gt;每个字节的开始位置发送一个起始位（0），结束时发送1个或者多个停止位（1），每个字节之间会有一个时间间隔&lt;/li&gt;
&lt;li&gt;接收方依靠字符中的起始位和停止位来同步&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240120173158356.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240120173158356&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;同步串行传输 #card&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以时钟信号线对传输的数据线上的信号进行比特同步&lt;/li&gt;
&lt;li&gt;以数据块（帧或分组）为单位传输&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240120173324594.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240120173324594&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;信道的极限容量&#34;&gt;信道的极限容量&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Nyquist 奈奎斯特准则&lt;/strong&gt; #card&lt;/p&gt;
&lt;p&gt;无噪声信道 $C=2Blog_2V$&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Shannon 香农定理&lt;/strong&gt; #card&lt;/p&gt;
&lt;p&gt;有噪声信道 $C=Blog_2(1+S/N)$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;计算后取二者中的最小值&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;编码与调制&#34;&gt;编码与调制&lt;/h2&gt;
&lt;p&gt;把数据变换为模拟信号的过程称为&lt;strong&gt;调制&lt;/strong&gt;，把数据变换为数字信号的过程称为&lt;strong&gt;编码&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;数字数据编码为数字信号&#34;&gt;数字数据编码为数字信号&lt;/h3&gt;
&lt;p&gt;数字数据编码用于基带传输中，即在基本不改变数字数据信号频率的情况下，直接传输数字 信号。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240120174834063.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240120174834063&#34;
	
	
&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;归零(RZ)编码&lt;/strong&gt;。#card&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;用高电平表示 1 、低电平表示 0 （或者相反），每个码元的中间均跳变到零电平（归零），接收方根据该跳变调整本方的时钟基准，这就为收发双方提供了自同步机制。&lt;/li&gt;
&lt;li&gt;因为归零需要占用一部分带宽，所以传输效率受到了一定的影响。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;非归零 (NRZ) 编码&lt;/strong&gt;。#card&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与 RZ 编码的区别是不用归零，一个时钟全部用来传输数据，编码效率最高。&lt;/li&gt;
&lt;li&gt;但 NRZ 编码的收发双方存在同步问题，为此需要双方都带有时钟线。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;反向非归零 (NRZI) 编码&lt;/strong&gt;。#card&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;与 NRZ 编码的区别是用电平的跳变表示 0 、电平保待不变表示 1 。&lt;/li&gt;
&lt;li&gt;跳变信号本身可作为一种通知机制。这种编码方式媒成了前两种编码的优点，既能传输时钟信号，又能尽虽不损失系统带宽。&lt;/li&gt;
&lt;li&gt;USB 2.0 的编码方式就是 NRZI 编码。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;曼彻斯特编码&lt;/strong&gt;。#card&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个码元的中间都发生电平跳变，电平跳变既作为时钟信号（用于同步）， 又作为数据信号。可用向下跳变表示1、向上跳变表示0，或者采用相反的规定。&lt;/li&gt;
&lt;li&gt;编码速率是码元速率的 2 倍，所占的频带宽度是原始基带宽度的 2 倍。&lt;/li&gt;
&lt;li&gt;标准以太网使用的就是曼彻斯特编码。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;差分曼彻斯特编码&lt;/strong&gt;。#card&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个码元的中间都发生电平跳变，与曼彻斯特编码不同的是，电平跳变仅表示时钟信号，而不表示数据。&lt;/li&gt;
&lt;li&gt;数据的表示在于每个码元开始处是否有电平跳变： 无跳变表示1，有跳变表示0。&lt;/li&gt;
&lt;li&gt;差分曼彻斯特编码拥有更强的抗干扰能力。&lt;/li&gt;
&lt;li&gt;编码速率是码元速率的 2 倍，所占的频带宽度是原始基带宽度的 2 倍。&lt;/li&gt;
&lt;li&gt;差分曼彻斯特编码则被广泛用于宽带高速网中。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;模拟数据编码为数字信号&#34;&gt;模拟数据编码为数字信号&lt;/h3&gt;
&lt;p&gt;主要包括&lt;strong&gt;采样、量化、编码&lt;/strong&gt;三个步骤。&lt;/p&gt;
&lt;p&gt;数据传输率=采样频率×量化位数&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;采样 #card&lt;/p&gt;
&lt;p&gt;是指对模拟信号进行周期性扫描，将时间上连续的信号变成时间上离散的信号。
采样定理：在将模拟信号转换成数字信号时，假设原始信号中的最大频率为f，那 么采样率j采样必须大于或等于最大频率 f 的 2 倍，才能保证采样后的数字信号完整保留原模拟信号的信息（只需记住结论）。另外，采样定理又称奈奎斯特定理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;量化 #card&lt;/p&gt;
&lt;p&gt;是指将采样得到的电平幅值按照一定的分级标度转换为对应的数值并取整，这样就将连续的电平幅值转换为了离散的数字量。采样和量化的实质就是分割和转换。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;编码 #card&lt;/p&gt;
&lt;p&gt;是指将量化得到的离散整数转换为与之对应的二进制编码。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;数字数据调制为模拟信号&#34;&gt;数字数据调制为模拟信号&lt;/h3&gt;
&lt;p&gt;调制：将二进制数据转换为带通模拟信号&lt;/p&gt;
&lt;p&gt;正弦波由&lt;strong&gt;振幅、频率、相位&lt;/strong&gt;定义&lt;/p&gt;
&lt;p&gt;数字数据调制为模拟信号的方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;幅移键控(amplitude shift keying, ASK) #card&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;振幅随基带数字信号变化，频率和相位保持不变。通过改变载波的振幅来表示数字信号1和0。这种方式比较容易实现，但抗干扰能力差。如，用有载波和无载波输出分别表示 1 和 0。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;频移键控(frequency shift keying, FSK) #card&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;频率随基带数字信号变化，振幅和相位保持不变。通过改变载波的频率来表示数字信号1和0。这种方式容易实现，抗干扰能力强，目前应用较广泛。如，用频率f1和频率f2分别表示 1 和 0 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;相移键控(phase shift keying, PSK) #card&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;相位随基带数字信号变化，频率和振幅保持不变。通过改变载波的相位来表示数字信号1和0。又分为绝对调相和相对调相。如，用相位 0 和 π分别表示 1 和 0, 是一种绝对调相方式。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;正交振幅调制(quadrature amplitude modulation, QAM) #card&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;振幅和相位变化结合在一起，形成叠加信号。设波特率为 B, 采用 m 个相位，每个相位有 n 种振幅，则该QAM的数据传输速率 R 为 $R=Blog_2(nm)$ (b/s)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240120193826567.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240120193826567&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;QAM 效率最高，目前Modem（调制解调器）使用的方法。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240120194617831.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240120194617831&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;模拟数据调制为模拟信号&#34;&gt;模拟数据调制为模拟信号&lt;/h3&gt;
&lt;p&gt;为了实现传输的有效性，可能需要较高的频率。这种调制方式还可使用频分复用 (FDM) 技 术，充分利用带宽资源。电话机和本地局交换机采用模拟信号传输模拟数据的编码方式。&lt;/p&gt;
&lt;h3 id=&#34;电话系统&#34;&gt;电话系统&lt;/h3&gt;
&lt;h4 id=&#34;adsl非对称数字用户线&#34;&gt;ADSL非对称数字用户线&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;有256个子信道，其中6个用于电话，2个用于控制，剩下248个用于数据。&lt;/li&gt;
&lt;li&gt;语音信道带宽为4000Hz。&lt;/li&gt;
&lt;li&gt;上行速度为64~640Kbit/s，下行速度为500Kbit/s-7Mbit/s。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240120200156195.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240120200156195&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;传输介质&#34;&gt;传输介质&lt;/h2&gt;
&lt;h3 id=&#34;双绞线&#34;&gt;双绞线&lt;/h3&gt;
&lt;p&gt;双绞线是最常用的古老传输介质，它由两根采用一定规则并排绞合的、相互绝缘的铜导线组版。绞合可以减少对相邻导线的电磁干扰。为了进一步提高抗电磁干扰的能力，可在双绞线的外面再加一层，即用金属丝编织成的屏蔽层，这就是屏蔽双绞线 (STP) 。无屏蔽层的双绞线称为非屏蔽双绞线 (UTP) 。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240120200421277.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240120200421277&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;同轴电缆&#34;&gt;同轴电缆&lt;/h3&gt;
&lt;p&gt;同轴电缆由内导体、绝缘层、网状编织屏蔽层和塑料外层构成。按特性阻抗数值的不同，通常将同轴电缆分为两类： 50Q同轴电缆和 75Q同轴电缆。其中， 50Q同轴电缆主 要用千传送基带数字信号，又称基带同轴电缆，它在局域网中应用广泛： 75Q同轴电缆主要用于传送宽带信号，又称宽带同轴电缆，主要用于有线电视系统。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240120200519759.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240120200519759&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;由于外导体屏蔽层的作用，同轴电缆具有良好的抗干扰特性，被广泛用千传输较高速率的数据，其传输距离更远，但价格较双绞线贵。&lt;/p&gt;
&lt;h3 id=&#34;光纤&#34;&gt;光纤&lt;/h3&gt;
&lt;p&gt;光纤通信就是利用光导纤维（简称光纤）传递光脉冲来进行通信。有光脉冲表示 1, 无光脉冲表示 0。可见光的频率约为$10^8$MHz, 因此光纤通信系统的带宽范围极大。光纤上要由纤芯和包层构成，纤芯很细，其直径只有 8 至 100µm,光波通过纤芯进行传导，包层较纤芯有较低的折射率。当光线从高折射率的介质射向低折射率的介质时，其折射角将大于入射角。因此，只要入射角大于某个临界角度，就会出现全反射，即光线碰到包层时就会折射回纤芯，这个过程不断重复，光也就沿着光纤传输下去。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240120200807816.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240120200807816&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;利用光的全反射特性，可以将从不同角度入射的多条光线在一根光纤中传输，这种光纤称为 多模光纤，多模光纤的光源为发光二极管。光脉冲在多模光纤中传输时会逐渐展宽，造成失真，因此多模光纤只适合于近距离传输。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240120200933751.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240120200933751&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;光纤的直径减小到只有一个光的波长时，光纤就像一根波导那样，可使光线一直向前传播， 而不会产生多次反射，这样的光纤就是单模光纤 。单模光纤的纤芯很细，直径只有几微米，制造成本较高。同时，单模光纤的光源为定向性很好的半导体激光器，因此单模光纤的衰减较小，可传输数公里甚至数十干米而不必采用中继器，适合远距离传输。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240120201001425.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240120201001425&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;光纤不仅具有通信容址非常大的优点，还具有如下特点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;传输损耗小，中继距离长，对远距离传输特别经济。&lt;/li&gt;
&lt;/ol&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;抗宙电和电磁干扰性能好。这在有大电流脉冲干扰的环境下尤为重要。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;无串音干扰，保密性好，也不易被窃听或截取数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;体积小，重量轻。这在现有电缆管道已拥塞不堪的情况下特别有利。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;无线传输介质&#34;&gt;无线传输介质&lt;/h3&gt;
&lt;p&gt;无线通信已广泛用于蜂窝移动电话领城。随着便携式计算机的出现，以及军事、野外等特殊场合对移动联网的需要，促进了移动通信的发展，现在无线局城网的应用己非常普遍。
（1）无线电波
无线电波具有较强的穿透能力，可以传输很长的距离，因此广泛用于通信领域，如无线手机通信、计算机冈络中的无线局城网（WLAN） 等。因为无线电波使信号向所有方向散播，所以有效距离范围内的接收设备无须对准菜个方向，就可与无线电波发射者进行通信连接，大大简化了通信连接。这也是无线电波传输的最重要优点之一。
（2）微波、红外线和激光
目前高带宽的无线通信主要使用三种技术：微波、红外线和激光，它们都需要在发送方和接收方之间有一条视线通路，有很强的方向性，沿直线传播。不同的是，红外通信和激光通信将要传输的信号分别转换为各自的信号格式，即红外光信号和激光信号，再直接在空间中传播。
微波通信的频率较高，频段范围也很宽，载波频率通常为2~40GHz，因此通信信道的容量大。例如，一个带宽为2MHz 的频段可容纳500条语音线路，若用来传输数字信号，则数据率可达数兆比特/秒。与通常的无线电波不同，微波通信的信号是沿直线传播的，因此在地面上的传播距离有限，超过一定距离后就要使用中继站来接力。
卫星通信利用地球同步卫星作为中继来转发微波信号，可以克服地面微波通信距离的限制3三颗相隔 120°的同步卫星几乎就能覆盖整个地球表面，因此基本能实现全球通信。卫星通信的优点是通信容量大、距离远、覆盖广，缺点是保密性差、端到端传播时延长。&lt;/p&gt;
&lt;h2 id=&#34;物理层接口的特性&#34;&gt;物理层接口的特性&lt;/h2&gt;
&lt;p&gt;物理层考虑的是如何在连接到各种计算机的传输媒体上传输数据比特流，而不指具体的传输 媒体。网络中的硬件设备和传输介质的种类繁多，通信方式也各不相同。物理层应尽可能屏蔽这些差异，让数据链路层感觉不到这些差异，使数据链路层只需考虑如何完成本层的协议和服务。&lt;/p&gt;
&lt;p&gt;物理层的主要任务可以描述为确定与传输媒体的接口有关的一些特性：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;机械特性。指明接口所用接线器的形状和尺寸、引脚数目和排列、固定和锁定装置等。&lt;/li&gt;
&lt;li&gt;电气特性。指明在接口电缆的各条线上出现的电压的范围。&lt;/li&gt;
&lt;/ol&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;功能特性。指明某条线上出现的某一电乎的电压表示何种意义。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;过程特性。或称规程特性。指明对千不同功能的各种可能事件的出现顺序。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;常用的物理层接口标准有 EIA RS-232-C、 ADSL 和 SONET/SDH 等。&lt;/p&gt;
&lt;h2 id=&#34;物理层设备&#34;&gt;物理层设备&lt;/h2&gt;
&lt;h3 id=&#34;中继器&#34;&gt;中继器&lt;/h3&gt;
&lt;p&gt;中继器的主要功能是整形、放大并转发信号，以消除信号经过一长段电缆后产生的失真和衰减，使信号的波形和强度达到所需的要求，进而扩大网络传输的距离。其原理是信号再生（而非简单地放大衰减的信号）。中继器有两个端口，数据从一个端口输入，从另一个端口发出。端口仅作用于信号的电气部分，而不管是香有错误数据或不适于网段的数据。
中继器是用来扩大网络规模的最简单的廉价互连设备。中继器两端的网络部分是网段，而不是子网，使用中继器连接的几个网段仍是一个局城网。中继器若出现故障，则对相邻两个网段的工作都产生影响。因为中继器工作在物理层，所以不能连接两个具有不同速率的局域网。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;若某个网络设备有存储转发功能，则认为它能连接两个不同的协议；若该网络设备无存储转发功能，则认为它不能连接两个不同的协议。中继器没有存储转发功能，因此它不能连接两个速率不同的网段，中继器两端的网段一定要使用同一个协议。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;从理论上讲，中继器的使用数目是无限的，网络因而也可无限延长。但事实上这是不可能的，因为网络标准中对信号的延迟范围做了具体规定，中继器只能在该范围内进行有效的工作，否则会引起网络故障。例如，在采用粗同轴电缆的 10BASES 以太网规范中，互相串联的中继器的个数不能超过4个，而且用4 个中继器串联的5 段通信介质中，只有3 段可以挂接计算机，其余2段只能用作扩展通信范围的链路段，不能挂接计算机。这就是所谓的“5-4-3 规则”。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;放大器和中继器都起放大作用，只不过放大器放大的是模拟信号，其原理是放大豪减的信号，而中继器放大的是数字信号，其原理是整形再生袤减的信号。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;集线器&#34;&gt;集线器&lt;/h3&gt;
&lt;p&gt;集线器 (Hub) 实质上是一个多端口的中继器。当 Hub 工作时，一个端口接收到数据信号后， 因为信号在从端口到 Hub 的传输过程中已有衰减，所以 Hub 便对该信号进行整形放大，使之再生（恢复）到发送时的状态，紧接若转发到其他所有（除输入端口外）处千工作状态的端口。若同时有两个或多个端口输入，则输出时将发生冲突，致使这些数据都无效。从 Hub 的工作方式可以 看出，它在网络中只起信号放大和转发作用，目的是扩大网络的传输范围，而不具备信号的定向传送能力，即信息传输的方向是固定的，是标准的共享式设备。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;集线器不能分割冲突域，集线器的所有端口都属于同一个冲突域。集线器在一个时钟周期内只能传输一组信息，当一台集线器连接的机器数目较多且多台机器经常需要同时通信时，将导致信息冲突，使得集线器的工作效率很差。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>1 计算机网络体系结构</title>
        <link>http://localhost:1313/post/1-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</link>
        <pubDate>Thu, 18 Jan 2024 17:06:34 +0000</pubDate>
        
        <guid>http://localhost:1313/post/1-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</guid>
        <description>&lt;h2 id=&#34;什么是计算机网络&#34;&gt;什么是计算机网络&lt;/h2&gt;
&lt;h3 id=&#34;概念&#34;&gt;概念&lt;/h3&gt;
&lt;h4 id=&#34;计算机网络和分布式系统&#34;&gt;计算机网络和分布式系统&lt;/h4&gt;
&lt;p&gt;计算机网络 (Computer Networks)：由==自主计算机互联起来的集合体== (a group of  interconnected  computers)，与主从计算的的区别，每台计算机都有独立的操作系统，不从属某台主机。&lt;/p&gt;
&lt;p&gt;分布式系统 (Distributed  System)：对用户看起来是一个==单独系统==的计算机集合。存在着一个能为用户自动管理资源的网络操作系统。&lt;/p&gt;
&lt;p&gt;关系：计算机网络是分布式系统的技术基础，而分布式系统是计算机网发展的高级阶段。www是原型在Internet的分布式系统。&lt;/p&gt;
&lt;p&gt;计算机网络（简称网络）由若干结点 (node, 或译为节点）和连接这些结点的链路 (link)&lt;/p&gt;
&lt;p&gt;组成。网络中的结点可以是计算机、菜线器、交换机或路由器等。网络之间还可通过路由器互连， 构成一个设盖范围更广的计算机网络，这样的网络称为互连网(internet)。于是，我们可以这样&lt;/p&gt;
&lt;p&gt;理解：网络把许多计算机连在一起，而互连网则把许多网络通过路由器连在一起。&lt;/p&gt;
&lt;h3 id=&#34;组成&#34;&gt;组成&lt;/h3&gt;
&lt;h4 id=&#34;从组成部分看&#34;&gt;从组成部分看&lt;/h4&gt;
&lt;p&gt;一个完整的计算机网络主要由==硬件、软件、协议==三大部分组成，缺一不可。
==硬件==主要由主机（也称端系统）、通信链路（如双绞线、光纤）、交换设备（如路由器、交换机等）和通信处理机（如网卡）等组成。
==软件==主要包括各种实现资源共享的软件和方便用户使用的各种工具软件（如网络操作系统、邮件收发程序、 FTP 程序、聊天程序等）。软件部分多属千应用层。
==协议==是计算机网络的核心，如同交通规则制约汽车 驾驶一样，协议规定了网络传输数据时所遵循的规范。&lt;/p&gt;
&lt;h4 id=&#34;从工作方式上看&#34;&gt;从工作方式上看&lt;/h4&gt;
&lt;p&gt;计算机网络（这里主要指 Internet,即因特网）可分为==边缘部分和核心部分==。
==边缘部分==由所有连接到因特网上、供用户直接使用的主机组成，用来进行通信（如 传输数据、音频或视频）和资源共享；
==核心部分==由大量的网络和连接这些网络的路由器组成，它为边缘部分提供连通性和交换服务。图I. I 给出了这两部分的示意图。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在互联网核心部分中起特殊作用的是&lt;strong&gt;路由器&lt;/strong&gt;，它是一种专用计算机，是实现&lt;strong&gt;分组交换&lt;/strong&gt;的关键构件，作用是按&lt;strong&gt;存储转发&lt;/strong&gt;方式进行分组交换。其任务是&lt;strong&gt;转发收到的分组&lt;/strong&gt;，这是网络核心部分最重要的功能。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;互联网核心部分中的&lt;strong&gt;路由器之间一般都用高速链路&lt;/strong&gt;相连接，而在网络边缘的&lt;strong&gt;主机&lt;/strong&gt;接入到核心部分则通常以相对&lt;strong&gt;较低速率的链路&lt;/strong&gt;相连接。&lt;/p&gt;
&lt;p&gt;主机的用途是为用户进行信息处理的，并且可以和其他主机通过网络交换信息。路由器的用途则是用来转发分组的，即进行分组交换的。&lt;/p&gt;
&lt;h4 id=&#34;从功能组成上&#34;&gt;从功能组成上&lt;/h4&gt;
&lt;p&gt;计算机网络由==通信子网和资源子网==组成。
==通信子网==由各种传输介质、 通信设备和相应的网络协议组成，它使网络具有数据传输、交换、控制和存储的能力， 实现联网计算机之间的数据通信。
==资源子网==是实现资源共享功能的设备及其软件的集合， 向网络用户提供共享其他计算机上的硬件资源、软件资源和数据资源的服务。&lt;/p&gt;
&lt;h3 id=&#34;功能&#34;&gt;功能&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;==数据通信==是计算机网络最基本和最重要的功能，用来实现联网计算机之间各种信息的传输，并将分散在不同地理位置的计算机联系起来，进行统一的调配、控制和管理。例如，文件传输、电子邮件等应用，离开了计算机网络将无法实现。&lt;/li&gt;
&lt;li&gt;==资源共享==可以是软件共享、数据共享，也可以是硬件共享。它使计算机网络中的资源互通有无、分工协作，从而极大地提高硬件资源、软件资源和数据资源的利用率。&lt;/li&gt;
&lt;li&gt;==分布式存储==：当计算机网络中的某个计算机系统负荷过重时，可以将其处理的某个复杂任务分配给网络中的其他计算机系统，从而利用空闲计算机资源以提高整个系统的利用率。&lt;/li&gt;
&lt;li&gt;==提高可靠性==：计算机网络中的各台计算机可以通过网络互为替代机。&lt;/li&gt;
&lt;li&gt;==负载均衡==：将工作任务均衡地分配给计算机网络中的各台计算机。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;categories-of-computer-network&#34;&gt;Categories of computer network&lt;/h2&gt;
&lt;h3 id=&#34;按分布范固分类&#34;&gt;按分布范固分类&lt;/h3&gt;
&lt;h4 id=&#34;广域网-wan&#34;&gt;广域网 (WAN)&lt;/h4&gt;
&lt;p&gt;广域网（WAN, Wide Area Network）的任务是==提供长距离通信==，运送主机所发送的数据，其覆盖范围通常是直径为几十千米到几于千米的区域，因而有时也称远程网。广域网是因特网的核心部分。连接广域网的各结点交换机的链路一般都是==高速链路==，具有较大的==通信容址==。LAN 通常存在于封闭区域中，常常共享互联网连接的单个中心点。WAN 旨在提供远距离的网络连接。它们通常由几个互相连接的 LAN 组成。常见的广域网有：专线、VPN 或 IP 隧道。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;专线&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;专线(leased line)是从大型网络提供商（例如 ISP，Internet Service Provider）租用的直连网络连接。对于大多数组织而言，建立自己的物理网络基础设施（包括跨越数百或数千英里的电缆、路由器和互联网交换点）几乎是不可能完成的任务。因此，他们改为从已经拥有这种基础设施的公司租用专门的直连连接。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;隧道&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果公司不想付费使用专线，他们可以使用隧道(tunneling)来连接其 LAN。在网络中，隧道是一种将数据包&lt;strong&gt;封装&lt;/strong&gt;在其他数据包中的方法，以便它们可以到达原本不可及的地方。这可以比作将一个信封放在另一个信封里邮寄，两个信封分别有一个不同的地址，这样内信封就能从外信封的目的地地址邮寄出去。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;虚拟专用网络&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;某些网络隧道会经过&lt;strong&gt;加密&lt;/strong&gt;，以保护数据包的内容，以免受到任何可能在途中拦截它们的人的攻击。加密的隧道称为虚拟专用网络(VPN，Virtual Private Network)。&lt;/p&gt;
&lt;h4 id=&#34;城域网man&#34;&gt;城域网(MAN)&lt;/h4&gt;
&lt;p&gt;城域网(MAN，Metropolitan Area Network)的范围可覆盖一个城市。最有名的城域网例子是许多城市都有的有线电视网。这种系统由早期的社区天线系统发展而来，主要用在那些从空中接收电视信号条件较差的地区。在这些早期系统中，常常把一个很大的天线放在附近的山上，然后电视信号通过该天线转发到订户的家里。&lt;/p&gt;
&lt;h4 id=&#34;局域网-lan&#34;&gt;局域网 (LAN)&lt;/h4&gt;
&lt;p&gt;局域网 (LAN，Local Area Network)，LAN 是包含在==较小==地理区域内的网络，通常位于同一建筑物内。&lt;/p&gt;
&lt;p&gt;在这些系统中，每台计算机都有一个无线调制解调器和一个天线，用来与其他计算机通信。&lt;/p&gt;
&lt;p&gt;**局域网的构成：**LAN中的每台计算机会与一个接入点(AP, Access Point)、无线路由器(wireless router)或者基站(base station)的设备进行通信。它主要负责中继无线计算机之间的数据包，还负责中继无线计算机和Internet之间的数据包。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接入点(AP)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;无线接入点（AP 或 WAP）是允许 Wi-Fi 设备连接到有线网络的网络设备。它主要是提供无线工作站对有线局域网和从有线局域网对无线工作站的访问，在访问接入点覆盖范围内的无线工作站可以通过它进行相互通信。&lt;/p&gt;
&lt;p&gt;简单来说，就是&lt;strong&gt;提供无线网络的设备&lt;/strong&gt;，它有线连接在局域网内。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;路由&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;路由（routing）是选择一个或多个网络上的路径的过程。在诸如互联网等数据包交换网络中，路由选择互联网协议 (IP) 数据包从其起点到目的地的&lt;strong&gt;路径&lt;/strong&gt;。这些互联网路由决定由称为路由器的专用网络硬件做出。&lt;/p&gt;
&lt;p&gt;简单来说，路由是寻找路径的过程。网络中两个计算机之间有很多个网络相连，它们的路径有很多种，路由是找到这些路径的过程.&lt;/p&gt;
&lt;p&gt;在路由中，任播(anycast)是一种网络寻址和路由的策略，使得数据可以根据路由拓朴来决定送到“最近”或“最好”的目的地。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;路由器&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;路由器(Router)是一种网络硬件，&lt;strong&gt;负责将数据包转发到目的地&lt;/strong&gt;。路由器连接到两个或多个 IP 网络或子网，并根据需要在它们之间传递数据包。&lt;/p&gt;
&lt;p&gt;为了有效地引导数据包，路由器使用一个内部路由表——一个通往不同网络目的地的路径列表。路由器读取数据包的标头以确定其去向，然后查阅路由表以找出通往该目的地的最有效路径。然后，它将数据包转发到该路径中的下一个网络。&lt;/p&gt;
&lt;p&gt;现在的无线路由器是一个AP、路由器和交换机的集合体，支持有线无线组成同一子网并具有路由功能。它组成的网络称为无线局域网(WLAN)&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;交换机&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;网络交换机(switch)是连接网络内的设备，并向或从这些设备&lt;strong&gt;转发&lt;/strong&gt;数据包。与路由器不同，交换机仅将数据发送到它打算发送的&lt;strong&gt;单个设备&lt;/strong&gt;（可以是另一台交换机、路由器或用户的计算机），而不是发送到多个设备的网络。&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;基站&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;基站（Base Station），是公用移动通信基站，是&lt;strong&gt;移动设备接入互联网的接口设备&lt;/strong&gt;，也是无线电台站的一种形式，是指在一定的无线电覆盖区中，通过移动通信交换中心，与移动电话终端之间进行信息传递的无线电收发信电台。&lt;/p&gt;
&lt;h4 id=&#34;个人区域网personal-area-network&#34;&gt;个人区域网(Personal Area Network)&lt;/h4&gt;
&lt;p&gt;个人区域网 (PAN, Personal Area Network) 允许设备围绕着一个人进行通信。简单来说，就是==非常有限距离的连接==，其中最著名的例子就是蓝牙耳机和智能手机之间的连接。&lt;/p&gt;
&lt;p&gt;个人区域网连接可以是有线或无线的。#card&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有线连接方式包括 USB 和 FireWire；无线连接方式包括蓝牙（Bluetooth）、WiFi、IrDA 和 Zigbee。h&lt;/li&gt;
&lt;li&gt;有线连接长度取决于连接线，而无线连接——WPAN(Wireless Personal Area Network) 的范围通常非常小，例如蓝牙等短距离无线协议在大于 5-10 米的距离上效率不高。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;按传输技术分类&#34;&gt;按传输技术分类&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;广播式网络。
&lt;ul&gt;
&lt;li&gt;所有联网计算机都共享==一个公共通信信道==。当一台计算机利用共享通信信道发送报文分组时，所有其他的计算机都会“收听”到这个分组。接收到该分组的计算机将通过检查目的地址来决定是否接收该分组。&lt;/li&gt;
&lt;li&gt;==局域网==基本上都采用广播式通信技术，广域网中的无线、卫星通信网络也采用广播式通信技术。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;点对点网络。
&lt;ul&gt;
&lt;li&gt;==每条物理线路连接一对计算机==。&lt;/li&gt;
&lt;li&gt;若通信的两台主机之间没有直接连接的线路，则它们之间的分组传输就要通过中间结点进行接收、存储和转发，直至目的结点。、&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前普遍使用的传输技术有两种，分别是==广播式链路和点到点链路==&lt;/p&gt;
&lt;p&gt;==点到点（point-to-point）==链路将一对单独的机器连接起来。在一个由点到点链路组成的网络中，为了从源端到达接收方，短消息必须首先访问一个或多个中间机器，这种短消息在某些情况下称为数据包或包(packet)。&lt;/p&gt;
&lt;p&gt;通常在网络中有可能存在多条不同长度的路由，因此，找到一条好的路由对点-点网络非常重要。点-点传输只有一个发送方和一个接收方，有时候也称为==单播（unicasting）==&lt;/p&gt;
&lt;p&gt;相反，在一个==广播(boradcasting)==网络上，通信信道被网络上的所有机器所共享；任何一台机器发出的数据包能被所有其他任何机器收到。无线网络是广播链路的一个常见例子，一个覆盖区域内的通信由所有该区域内的机器共享，而该区域的划分取决于无线信道和传输机器。&lt;/p&gt;
&lt;p&gt;有些广播系统还支持给一组机器发送数据包的模式，这种传输模式称为==组播（multicasting）==&lt;/p&gt;
&lt;h3 id=&#34;按拓扑结构分类&#34;&gt;按拓扑结构分类&lt;/h3&gt;
&lt;p&gt;网络拓扑结构（Network Topology）是指由网中结点（路由器、主机等）与通信线路（网线）之间的几何关系（如 总线形、环形）表示的网络结构，主要指通信子网的拓扑结构。
按照网络的拓扑形态来划分，网络可分为星型网络(Star)、总线型网络(Bus)、环形网络(Ring)、树形网络(Hierarchical)和网状网络(Mesh)等。
&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/20240118184111.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;总线形网络。用单根传输线把计算机连接起来。总线形网络的优点是建网容易、增／减结点方便、节省线路。缺点是重负载时通信效率不高、总线任意一处对故障敏感。&lt;/li&gt;
&lt;li&gt;星型网络。每个终端或计算机都以单独的线路与中央设备相连。中央设备早期是计算机，现在一般是交换机或路由器。星形网络便于集中控制和管理，因为端用户之间的通信必须经过中央设备。缺点是成本高、中央设备对故障敏感。&lt;/li&gt;
&lt;li&gt;环形网络。所有计算机接口设备连接成一个环。环形网络最典型的例子是令牌环局域网。环可以是单环，也可以是双环，环中信号是单向传输的。&lt;/li&gt;
&lt;li&gt;网状网络。一般情况下，每个结点至少有两条路径与其他结点相连，多用在广域网中。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在局域网中,常见的三种物理层网络拓扑结构有:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240119212048747.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240119212048747&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;按交换技术分类&#34;&gt;按交换技术分类&lt;/h3&gt;
&lt;p&gt;交换技术是指各台主机之间、各通信设备之间或主机与通信设备之间为交换信息所采用的数 据格式和交换装置的方式。按交换技术可将网络分为如下几种。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;电路交换网络。==在源结点和目的结点之间建立一条专用的通路用于传送数据，包括建立连接、传输数据和断开连接三个阶段。==最典型的电路交换网是传统电话网络。该类网络的主要特点是整个报文的比特流连续地从源点直达终点，好像是在一条管道中传 送。优点是数据直接传送、时延小。缺点是线路利用率低、不能充分利用线路容盘、不便于进行差错控制。&lt;/li&gt;
&lt;li&gt;报文交换网络。用户数据加上源地址、目的地址、校验码等辅助信息，然后封装成报文。整个报文传送到相邻结点，全部存储后，再转发给下一个结点，重复这一过程直到到达目的结点。每个报文可以单独选择到达目的结点的路径。报文交换网络也称==存储－转发网==络，主要特点是==整个报文先传送到相邻结点，全部存储后查找转发表，转发到下一个结点。==优点是可以较为充分地利用线路容量，可以实现不同链路之间不同数据传输速率的转换，可以实现格式转换，可以实现一对多、多对一的访问，可以实现差错控制。缺点是增大了资源开销（如辅助信息导致处理时间和存储资源的开销），增加了缓冲时延，需要额外的控制机制来保证多个报文的顺序不乱序，缓冲区 难以管理（因为报文的大小不确定，接收方在接收到报文之前不能预知报文的大小）。&lt;/li&gt;
&lt;li&gt;分组交换网络，也称包交换网络。其原理是，将数据分成较短的固定长度的数据块，在每个数据块中加上目的地址、源地址等辅助信息组成分组（包），以存储－转发方式传输。 其主要特点是==单个分组（它只是整个报文的一部分）传送到相邻结点，存储后查找转发表，转发到下一个结点。==除具备报文交换网络的优点外，分组交换网络还具有自身的优点：缓冲易于管理；包的平均时延更小，网络占用的平均缓冲区更少；更易于标准化；更适合应用。现在的主流网络基本上都可视为分组交换网络。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;计算机网络(computer network)是通信网络的一种，被称为数据网络(data networks)。而数据网络是一种使用数字传输的通信网络。通常来说，数据是离散的信号，数据被封装成称为数据报(Datagram)的信息，并通过一些中间网络设备从源发送到目的地。例如以太网。&lt;/p&gt;
&lt;p&gt;相反的，语音网络使用模拟信号传输，它是连续的信号。通常来说，语音流(voice stream)通过预先建立的连接（称为电路circuit）从源头转发到目的地。例如电话网络。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;电路交换&lt;/strong&gt;：整个报文的比特流&lt;strong&gt;连续地&lt;/strong&gt;从源点直达终点，好像在一个管道中传送。缺点是&lt;strong&gt;在通话的全部时间里，通话的两个用户需要始终占用端到端的通信资源。&lt;strong&gt;这在计算机网络中&lt;/strong&gt;效率很低&lt;/strong&gt;，因为计算机数据往往是&lt;strong&gt;突发式&lt;/strong&gt;的出现在传输线路上的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;报文交换&lt;/strong&gt;：&lt;strong&gt;整个报文&lt;/strong&gt;先传送到相邻结点，全部存储下来后查找转发表，转发到下一个结点。&lt;strong&gt;一旦出错将使整个报文失效，不够灵活。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分组交换&lt;/strong&gt;：&lt;strong&gt;分组（报文的一部分）&lt;strong&gt;先传送到相邻结点，全部存储下来后查找转发表，转发到下一个结点。最终，接收方接收所有的分组，并将其还原为最初的报文。优点是&lt;/strong&gt;时延小，灵活性好，是计算机网络中最常用的交换方式。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://hillzhang1999.gitee.io/2020/05/22/ji-suan-ji-wang-luo-quan-bu-fu-xi-bi-ji/%e4%ba%a4%e6%8d%a2%e6%96%b9%e5%bc%8f.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;交换方式&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;性能指标&#34;&gt;性能指标&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;速率 (Speed)&lt;/strong&gt; /数据传送速率/数据率/比特率 #card&lt;/p&gt;
&lt;p&gt;单位时间内的数据传输率
单位为 &lt;code&gt;b/s&lt;/code&gt; or &lt;code&gt;比特/秒&lt;/code&gt; or &lt;code&gt;bit/s&lt;/code&gt; or &lt;code&gt;bps&lt;/code&gt; or &lt;code&gt;kb/s=10^3b/s&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;带宽(Bandwidth)&lt;/strong&gt; #card&lt;/p&gt;
&lt;p&gt;最高数据率
在模拟信号系统中：通信线路允许通过的信号频带范围，单位是赫兹(Hz) 。
在计算机网络中：表示网络的通信线路所能传送数据的能力，是最高数据率，单位是&lt;code&gt;b/s&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;吞吐量(Throughput)&lt;/strong&gt;：#card&lt;/p&gt;
&lt;p&gt;指单位时间内通过某个网络（或信道、接口）的数据量。
经常用于现实世界对网络的测量
吞吐量受网络带宽或网络额定速率的限制。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;时延(Delay)&lt;/strong&gt;：指数据（一个报文或分组）从网络（或链路）的一端传送到另一端所需要的总时间，它由 4 部分构成：==发送时延、传播时延、处理时延和排队时延==。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;发送时延&lt;/strong&gt;。结点将分组的所有比特推向（传输）链路所需的时间，即从发送分组的第一个比特算起，到该分组的最后一个比特发送完毕所需的时间，因此也称传输时延。计算公式为==发送时延＝分组长度／信道宽度==&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;传播时延&lt;/strong&gt;。电磁波在信道中传播一定的距离需要花费的时间，即一个比特从链路的一端传播到另一端所用的时间。计算公式为==传播时延＝信道长度／电磁波在信道上的传播速率==&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;处理时延&lt;/strong&gt;。数据==在交换结点为存储转发而进行的工作==所花费的时间。例如，分析分组的首部、从分组中提取数据部分、进行差错检验或查找适当的路由等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;排队时延&lt;/strong&gt;。分组在进入路由器后要先在输入队列中排队等待处理。路由器确定转发端口后，还要在输出队列中排队等待转发，这就产生了排队时延。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;时延带宽积&lt;/strong&gt; #card&lt;/p&gt;
&lt;p&gt;指发送端发送的第一个比特即将到达终点时，发送端已经发出了多少个比特
又称比特为单位的链路长度，即时延带宽积＝传播时延×信道带宽。
考虑一个代表链路的圆柱形管道，其长度表示链路的传播时延，横截面积表示链路带宽，则时延带宽积表示该管道可以容纳的比特数量。
&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/20240118215417.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;往返时延(Round-Trip Time, RTT)&lt;/strong&gt;  #card&lt;/p&gt;
&lt;p&gt;指从发送端发出一个短分组，到发送端收到来自接收端的确认（接收端收到数据后立即发送确认），总共经历的时延。在互联网中，往返时延还包括各中间结点的处理时延、排队时延及转发数据时的发送时延。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;信道利用率&lt;/strong&gt; #card&lt;/p&gt;
&lt;p&gt;信道利用率＝有数据通过时间／（有＋无）数据通过时间&lt;/p&gt;
&lt;h2 id=&#34;network-architecture&#34;&gt;Network architecture&lt;/h2&gt;
&lt;h3 id=&#34;计算机网络分层结构&#34;&gt;计算机网络分层结构&lt;/h3&gt;
&lt;p&gt;网络架构(Network architecture)是用于网络通信的一系列层、协议和服务的名称。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;层(&lt;strong&gt;layer&lt;/strong&gt;)是按照不同功能(function)将网络架构划分成层级结构。每一层都有特定的功能。&lt;/li&gt;
&lt;li&gt;协议(&lt;strong&gt;Protocols&lt;/strong&gt;) 是每一层用于执行具体功能的规则集。协议描述并规定了某个层的操作方式。&lt;/li&gt;
&lt;li&gt;服务(&lt;strong&gt;Services&lt;/strong&gt;) 是低层为高层提供的功能。每一层都利用下一层提供的服务来实现自身的功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240119212350526.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240119212350526&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;协议包含了报文(message)的格式(format)和主机之间报文交换的方式，是实现网络通信的规则。协议族(Protocol suites)是按照需要组合在一起的协议集合，用来涵盖网络通信的各种功能。每个协议只负责一个特定的功能，不同协议之间相互协作来实现全面的网络通信。&lt;/p&gt;
&lt;p&gt;每一层上可以实现多个不同的协议。协议栈(Protocol stack)就是某个系统所采用的协议集合，每个层采用一个或多个协议。例如，TCP/IP协议栈由多种协议组成，如IP协议工作在网络层，TCP和UDP协议工作在传输层。&lt;/p&gt;
&lt;p&gt;在层与层之间,低层为上层提供服务。具体来说，第k层扮演服务提供者(service provider)的角色，为第k+1层即服务用户(service user)提供服务。&lt;/p&gt;
&lt;p&gt;服务接入点(Service Access Points, SAP)存在于层与层之间，是服务用户访问服务提供者提供的服务的接口。第k层的SAP就是第k+1层用于访问第k层服务的入口。每个SAP都有一个唯一的地址标识。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240119212448976.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240119212448976&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;当两台主机上的同一层进行通信时，它们必须遵守某些预定的规则和约定，这些规则和约定统称为该层的协议。如果任意一方违反了协议，将导致通信出现问题。&lt;/p&gt;
&lt;p&gt;不同机器上构成相应层次的实体称为对等体（peer）。这些对等体可能是软件过程、硬件设备，或者甚至是人类。换句话说，正是这些对等体为了实现彼此沟通才使用协议来进行通信。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://image.hoyue.fun/imgup/2023/05/202307270951598.webp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/202307270951598.webp&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;img&#34;
	
	
&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;只有对等的层可以理解其对等数据，因为只有相同的协议之间才可以沟通。例如，我们举一个生活中的例子来解释多层通信：&lt;/p&gt;
&lt;p&gt;[&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/202307270953452.webp&#34; alt=&#34;img&#34; style=&#34;zoom:50%;&#34; /&gt;&lt;a class=&#34;link&#34; href=&#34;&#34; &gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;两个哲学家之间的交流，只有他们之间才能明白，而翻译家得到的信息也只有翻译家之间才能明白。秘书只负责发送与接收，他们的过程也只有他们自己理解。&lt;/p&gt;
&lt;p&gt;在对应层的对等实体之间传递信息的基本单位叫做协议数据单元(Protocol Data Units, PDU)。PDU 由标头(Header)、载荷(Payload)和尾部校验信息(Trailer)组成，其中Trailer可选。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Header用于识别对等实体之间所使用的协议类型，以及对PDU的数据进行控制。标头通常包含地址信息、序列号等控制信息。&lt;/li&gt;
&lt;li&gt;Payload是用户数据，即上层 PDU。&lt;/li&gt;
&lt;li&gt;Trailer用于对PDU数据的校验。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://image.hoyue.fun/imgup/2023/09/202309051443665.webp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/202309051443665.webp&#34; alt=&#34;img&#34; style=&#34;zoom:50%;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;分层的基本原则如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;每层都实现一种相对独立的功能，降低大系统的复杂度。&lt;/li&gt;
&lt;/ol&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;各层之间的接口自然清晰，易千理解，相互交流尽可能少。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;各层功能的精确定义独立于具体的实现方法，可以采用最合适的技术来实现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;保待下层对上层的独立性，上层单向使用下层提供的服务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;整个分层结构应能促进标准化工作。
网络协议：为实现网络中的数据交换而建立的规则标准或约定。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;三要素：
语法：数据与控制信息的格式。
语义：需要发出何种控制信息，完成何种动作，做出何种响应。
同步：事件实现顺序的详细说明。&lt;/p&gt;
&lt;p&gt;计算机网络的各层及其协议的媒合称为网络的体系结构 (Architecture) 。换言之，计算机网 络的体系结构就是这个计算机网络及其所应完成的功能的精确定义。要强调的是，这些功能究竞 是用何种硬件或软件完成的，是一个遵循这种体系结构的实现（Implementation) 问题。体系结构 是抽象的，而实现则是具体的，是贞正在运行的计算机硬件和软件。计算机网络体系结构通常都 具有可分层的特性，它将复杂的大系统分成若干较容易实现的层次。&lt;/p&gt;
&lt;p&gt;分层的基本原则如下：&lt;/p&gt;
&lt;p&gt;l) 每层都实现一种相对独立的功能，降低大系统的复杂度。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;各层之间的接口自然清晰，易千理解，相互交流尽可能少。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;各层功能的精确定义独立于具体的实现方法，可以采用最合适的技术来实现。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;保待下层对上层的独立性，上层单向使用下层提供的服务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;整个分层结构应能促进标准化工作。 在计算机网络分层结构中，第 n 层中的活动元索通常称为第 n 层实体。具体来说，实体指任 何可发送或接收信息的硬件或软件进程，通常是某个特定的软件模块。不同机器上的同一层称为 对等层，同一层的实体称为对等实体。第 n 层实体实现的服务为第 n+l 层所用。在这种悄况下， 第 n 层称为服务提供者，第 n+l 层则服务于用户。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在计算机网络体系结构中，对等层之间传送的数据单位称为该层的协议数据单元 (POU),&lt;/p&gt;
&lt;p&gt;第 n 层的 PDU 记为 n-PDU 。各层的 PDU 都分为数据和控制信息两部分。&lt;/p&gt;
&lt;p&gt;服务数据单元 CSDU): 为完成用户所要求的功能而传送的数据。第 n 层的 SDU 记为 n-SDU 。&lt;/p&gt;
&lt;p&gt;协议控制信息 (PC!): 控制协议操作的信息。第 n 层的 PCI 记为 n-PCl 。 每层的协议数据单元都有一个通俗的名称，如物理层的 PDU 称为比特流，数据链路层的 PDU&lt;/p&gt;
&lt;p&gt;称为帧，网络层的 PDU 称为分组，传输层的 POU 称为报文段。 当在各层之间传输数据时，将从第 n+l 层收到的 PDU 作为第 n 层的 SDU ，加匕第 n 层的 PCl，就封装成了第 n 层的 PDU ，交给第 n-1 层后作为 SDU 发送，接收方接收时做相反的处埋， 因此可知三者的关系为 n-SDU + n-PCI = n-PDU = (n - 1)-SDU, 具变换过程如图l.7 所示。&lt;/p&gt;
&lt;p&gt;具体地，层次结构的含义包括如下几方面：&lt;/p&gt;
&lt;p&gt;l) 第 n 层的实体不仅要使用第 n-l 层的服务来实现自身定义的功能，而且要向第 n+ I 层 提供本层的服务，该服务是第 n 层及其下面各层提供的服务总和。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;最低层只提供服务，是整个层次结构的基础；最高层面向用户提供服务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;上一层只能通过相邻层间的接口使用下一层的服务，而不能调用其他层的服务。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;当两台主机通信时，对等层在逻辑上有一个直接信道，表现为能直接将信息传送到 对方。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240119203420851.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240119203420851&#34;
	
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;计算机网络协议接口服务的概念&#34;&gt;计算机网络协议、接口、服务的概念&lt;/h3&gt;
&lt;h3 id=&#34;-协议服务&#34;&gt;&lt;em&gt;!&lt;/em&gt; &lt;em&gt;&lt;strong&gt;协议&amp;amp;服务&lt;/strong&gt;&lt;/em&gt;&lt;/h3&gt;
&lt;h4 id=&#34;概念-1&#34;&gt;&lt;strong&gt;概念&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Layer 层：使用了信息隐蔽、抽象数据类型以及面向对象的设计方法； 目的是向上层提供服务，上层可以使用其提供的服务，但对于其内部的状态和算法不可见&lt;/li&gt;
&lt;li&gt;Service 服务：下层（n-1）给上层（n）提供服务，垂直的&lt;/li&gt;
&lt;li&gt;Protocol 协议：对等层关于如何进行通信的一种约定，是对改成功能如何实现的一种定义，水平的&lt;/li&gt;
&lt;li&gt;Interface 接口：在每一对相邻层之间的临界处，下层通过接口向上层服务&lt;/li&gt;
&lt;li&gt;封装：某层实体在上一层交付数据前面（或后面）加上自己的控制信息，构成本层数据包，这些控制信息由协议定义&lt;/li&gt;
&lt;li&gt;实体（entity） ：任何可发送或接收信息的硬件或软件进程&lt;/li&gt;
&lt;li&gt;服务访问点 SAP （Service Access Point）：同一系统相邻两层的实体进行交互的地方，标识符叫做 SAPI&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;关系&#34;&gt;&lt;strong&gt;关系&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;协议是“水平的”，即协议是控制对等实体之间通信的规则&lt;/li&gt;
&lt;li&gt;服务是“垂直的”，即服务是由下层向上层通过层间接口提供的&lt;/li&gt;
&lt;li&gt;在协议的控制下，两个对等实体间的通信使得本层能够向上一层提供服务。&lt;/li&gt;
&lt;li&gt;一层协议的实现需要下层的服务&lt;/li&gt;
&lt;li&gt;服务的实现需要本层协议的支持&lt;/li&gt;
&lt;li&gt;本层的服务用户只能看见服务而无法看见下面的协议&lt;/li&gt;
&lt;li&gt;下层协议对上层服务用户是透明的&lt;/li&gt;
&lt;li&gt;服务不变时，本层协议的实现改变不影响上层&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;k 层服务改变，k+1 层随之改变，k-1 层不受影响&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;tips&#34;&gt;&lt;strong&gt;tips&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;为什么分层？&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;①简化网络的设计和实现的难度；②各层之间依赖性较低，只要不改变服务和接口，各层内部进行修改不会影响其它层&lt;/p&gt;
&lt;p&gt;可能缺点：加上控制信息和处理的开销，性能比不分层的系统要差&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;每一层的对等实体之间进行通信，通信要遵守协议&lt;/li&gt;
&lt;li&gt;只有最底层是实际通信，其它各层都是虚拟通信&lt;/li&gt;
&lt;li&gt;Information flow（数据流向）：U 形，发送系统自顶向下，最底层实际传输数据，接收系统自底向上&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1.2.2&lt;/p&gt;
&lt;p&gt;I.协议&lt;/p&gt;
&lt;p&gt;要在网络中做到有条不紊地交换数据，就必须遴循一些事先约定好的规则，其规定了所交换&lt;/p&gt;
&lt;p&gt;数据的格式及有关的同步问题。为了在网络中进行数据交换而建立的这些规则、标准或约定称为&lt;/p&gt;
&lt;p&gt;网络协议 (Network Protocol), 是控制在对等实体之间进行通信的规则的集合，是水平的。不对 等实体之间是没有协议的，如用 TCP/LP 协议栈通信的两个结点 A 和结点 B, 结点 A 的传输层和 结点 B 的传输层之间存在协议，但结点 A 的传输层和结点 B 的网络层之1，司不存在协议。 协议由语法、语义和同步三部分组成。&lt;/p&gt;
&lt;p&gt;&amp;quot;&lt;/p&gt;
&lt;p&gt;..i上执， ►&lt;/p&gt;
&lt;p&gt;同步的定义（2020)&lt;/p&gt;
&lt;p&gt;l) 语法。数据与控制信息的格式。例如，&lt;/p&gt;
&lt;p&gt;TCP 报文段格式就是由 TCP 协议的语法定义的。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;语义．即需要发出何种控制信息、完成何种动作及做出何种应答。例如，在建立 TCP 连&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;接的三次握手时所执行的操作就是由 TCP 协议的语义定义的。 3) 同步（或时序）。执行各种操作的条件、时序关系等，即事件实现顺序的详细说明。例如，&lt;/p&gt;
&lt;p&gt;建立 TCP 连接的三次握手橾作的时序关系就是由 TCP 协议的同步定义的。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;挂口&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;同一结点内相邻两层的实体交换信息的逻辑接口称为服务访问点 (Service Access Po int,&lt;/p&gt;
&lt;p&gt;SAP) 。每层只能为紧邻的层之间定义接口，而不能跨层定义接口。服务是通过 SAP 提供给上层 使用的，第 n 层的 SAP 就是第 n+l 层可以访问第 n 层服务的地方。例如，在本书描述的 5 层体 系结构中，数据链路层的服务访问点为帧的＂类型”字段，网络层的服务访问点为 IP 数据报的“协 议”字段，传输层的服务访问点为“端口号”字段。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;股务&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;服务是指下层为紧邻的上层提供的功能调用，是垂直的。对等实体在协议的控制下，使得本&lt;/p&gt;
&lt;p&gt;层能为上层提供服务，但要实现本层协议，还需要使用下层提供的服务。当上层使用下层提供的服务时，必须与下层交换一些命令，这些命令称为服务原语。 OSI 参考模型将原语划分为四类：&lt;/p&gt;
&lt;p&gt;l) 请求 (Request)。由服务用户发往服务提供者，诮求完成某项工作。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;指示&amp;lt;Ind ication) 。巾服务提供者发往服务用户，指示用户做某件事情。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;响应&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(Response) 。由服务用户发往服务提供者，作为对指示的响应。&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;证实（Confirmation) 。由服务提供者发往服务用户，作为对请求的证实。 这四类原语用千不同的功能，如建立连接、传输数据和断开连接等。有应答服务包括全部四 类原语，而无应答服务则只有请求和指示两类原语。四类原语的关系如图1.8 所示。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240119203527303.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240119203527303&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;注意，协议和服务概念上是不一样的。首先，只有本层协议的实现才能保证向上一层提供服 务。本层的服务用户只能看见服务而无法看见下面的协议，即下面的协议对上层的服务用户是透 明的。其次，协议是“水平的＂，即协议是控制对等实体之间通信的规则。但是，服务是“垂直&lt;/p&gt;
&lt;p&gt;堕，即服务是由下层通过层间接口向上层提供的。另外，并非在一层内完成的全部功能都称为&lt;/p&gt;
&lt;p&gt;服务，只有那些能够被高一层实体“看得见”的功能才称为服务。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240119203554429.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240119203554429&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;计算机网络提供的服务可按以下三种方式分类。 (I) 面向连接服务与无连接服务&lt;/p&gt;
&lt;p&gt;在面向连接服务中，通信前双方必须先建立连接，分配相应的资源（如缓冲区），以保证通&lt;/p&gt;
&lt;p&gt;信能正常进行，传输结束后释放连接和占用的资源。因此这种服务可分为连接建立、数据传输和&lt;/p&gt;
&lt;p&gt;连接释放三个阶段。例如， TCP 就是一种面向连接服务的协议。 在无连接服务中，通信前双方不需要先建立连接，需要发送数据时可直接发送，将每个带有&lt;/p&gt;
&lt;p&gt;目的地址的包（报文分组）传送到线路上，由系统选定路线进行传输。这种服务常被描述为“尽 最大努力交付＂，是一种不可靠的服务。例如， IP、 VDP 就是一种无连接服务的协议。&lt;/p&gt;
&lt;p&gt;(2) 可靠服务和不可靠服务&lt;/p&gt;
&lt;p&gt;可靠服务是指网络具有纠错、检错、应答机制，能保证数据正确、可靠地传送到目的地。不&lt;/p&gt;
&lt;p&gt;可靠服务是指网络只是尽批让数据正确、可靠地传送到目的地，是一种尽力而为的服务。&lt;/p&gt;
&lt;p&gt;对于提供不可靠服务的网络，其网络的正确性、可靠性要由应用或用户来保陓。例如，用户 收到信息后要判断信息的正确性，若不正确，则用户就要把出错信息报告给信息的发送者，以便 发送者采取纠正措施。通过用户的这些措施，可将不可靠服务变成可靠服务。&lt;/p&gt;
&lt;p&gt;(3) 有应答服务和无应答服务 有应答服务是指接收方在收到数据后向发送方给出相应的应答，该应答由传输系统内部自动&lt;/p&gt;
&lt;p&gt;实现，而不由用户实现。发送的应答既可以是肯定应答，又可以是否定应答，通常在接收到的数&lt;/p&gt;
&lt;p&gt;据有错误时发送否定应答。例如，文件传输服务就是一种有应答服务。 无应答服务是指接收方收到数据后不自动给出应答。若衙要应答，则由离层实现。例如，对 千 WWW 服务，客户端收到服务器发送的页面文件后不给出应答。&lt;/p&gt;
&lt;h3 id=&#34;面向连接--无连接&#34;&gt;&lt;em&gt;&lt;strong&gt;面向连接 &amp;amp; 无连接&lt;/strong&gt;&lt;/em&gt;&lt;/h3&gt;
&lt;h4 id=&#34;服务&#34;&gt;&lt;strong&gt;服务&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;面向连接服务：3 个阶段 ①连接建立②数据传输③连接释放&lt;/li&gt;
&lt;li&gt;无连接服务：两实体间通信不需要先建立连接；每个报文携带完整目标地址，可建立独立路由&lt;/li&gt;
&lt;li&gt;服务原语：一个服务通常是由一组原语操作描述，用户进程通过这些操作访问该服务&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;区别&#34;&gt;&lt;strong&gt;区别&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;通信双方是否需要建立连接&lt;/li&gt;
&lt;li&gt;能保证数据传输的可靠性&lt;/li&gt;
&lt;li&gt;通信过程中是否需要完整的目的地地址&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;举例&#34;&gt;&lt;strong&gt;举例&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;UDP 为无连接通信协议示例&lt;/li&gt;
&lt;li&gt;TCP 是面向连接通信协议示例&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;isoosi-参考模型和-tcpip模型&#34;&gt;ISO/OSI 参考模型和 TCP/IP模型&lt;/h2&gt;
&lt;h3 id=&#34;osi参考模型&#34;&gt;OSI参考模型&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240119212821542.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240119212821542&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;应用层：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;功能：&lt;strong&gt;通过应用进程之间的交互来完成特定的网络应用。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;交换的数据单元：&lt;strong&gt;报文。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;协议：域名系统DNS、支持万维网应用的HTTP协议，支持电子邮件的SMTP等。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;运输层：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;功能：&lt;strong&gt;负责向两台主机中进程之间的通信提供通用的数据传输服务。具有复用和分用的功能。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;协议：
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;传输控制协议TCP&lt;/strong&gt;：提供&lt;strong&gt;面向连接的、可靠&lt;/strong&gt;的数据传输服务。交换的数据单元是：&lt;strong&gt;TCP报文段&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户数据报协议UDP&lt;/strong&gt;：提供&lt;strong&gt;无连接的尽最大努力的&lt;/strong&gt;数据传输服务（不确保数据的可靠性）。交换的数据单元是：&lt;strong&gt;用户数据报。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;不同的应用层协议基于不同的传输层协议。例如：HTTP协议、SMTP协议基于TCP协议，DNS协议、RTP协议基于UDP协议。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;网络层：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;功能：&lt;strong&gt;为互联网内任意两台主机提供分组交换的通信服务。&lt;/strong&gt;（路由器是网络层设备）&lt;/li&gt;
&lt;li&gt;交换数据单元：&lt;strong&gt;分组（IP数据报）&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;协议：网际协议IP。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;数据链路层：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;功能：&lt;strong&gt;为局域网内任意两台主机提供数据帧传输&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;交换的数据单元：&lt;strong&gt;数据帧&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;物理层：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;功能；&lt;strong&gt;提供原始的比特流传输&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;从上至下的每一层的&lt;strong&gt;协议数据单元PDU&lt;/strong&gt;，都在上一层的基础上，&lt;strong&gt;加上自己的控制信息&lt;/strong&gt;。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;物理层(Physical Layer)：通过有线或无线方式传输比特流的功能。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;物理层的传输斗位是比特，功能是在物理介质上为数据端设备透明地传输原始比特流。物理&lt;/p&gt;
&lt;p&gt;层主要定义数据终端设备 (DTE) 和数据通信设备 (DCE) 的物理与逻辑连接方法。&lt;/p&gt;
&lt;p&gt;物理层接口标准很多，如 EIA-232C 、 EIAffiA RS-449 、 CCITT 的X.21 等。 图I. I I 表示的是两个通信结点及它们间的一段通信链路，物理层主要研究以下内容：&lt;/p&gt;
&lt;p&gt;O 通信链路与通信结点的连接需要一些电路接口，物理层规定了这些接门的一些参数，如机 械形状和尺寸、交换电路的数屈和排列等，例如笔记本电脑上的网线接口。&lt;/p&gt;
&lt;p&gt;＠物理层规定了通信链路上所传输的信号的意义和电气特征。例如，若规定信号 X 代表数&lt;/p&gt;
&lt;p&gt;字 O, 则当结点传输 0 时就发出信号 X, 而当结点接收到信号 X 时就知道收到的是 0 。 注意，传输信息所用的一些物理介质（如双绞线、光缆、无线信道等）井不在物理层协议之 内，而在物理层协议下面。因此，有人将物理介质当作第 0 层。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;数据链路层(Data Link Layer)：实现介质访问(控制数据传输顺序)和确保节点间可靠传输的功能。(主要关注单个数据链路上的可靠传输)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;数据链路层的传输单位是帧。两台主机之间的数据传输总是在一段一段的链路上传送的，这 就需要使用专门的链路层协议。数据链路层将网络层交来的 IP 分组封装成帧，并且可靠地传输到&lt;/p&gt;
&lt;p&gt;相邻结点的网络层。主要作用是加强物理层传输原始比特流的功能，将物理层提供的可能出错的&lt;/p&gt;
&lt;p&gt;物理连接改造为逻辑上无差错的数据链路，使之对网络层表现为一条无差错的链路。 因为外界噪声的干扰，所以原始的物理连接在传输比特流时可能发生错误。如图I. II 所示，&lt;/p&gt;
&lt;p&gt;结点 A 想向结点 B 传输数字 O, 于是发出信号 X: 但在传输过程中受到干扰，信号 X 变成了信号&lt;/p&gt;
&lt;p&gt;Y, 而信号 Y 又刚好代表 I,&lt;/p&gt;
&lt;p&gt;结点 B 接收到信号 Y 时，误以为结点 A 传送了数字 l ，从而发生差&lt;/p&gt;
&lt;p&gt;错。数据链路层协议应能检测出这些差错，然后将收到的错误信息丢弃。&lt;/p&gt;
&lt;p&gt;如图1. 11 所示，在两个相邻结点之间传送数据时，结点 A 的发送速率可能比结点 B 的接收 速率快，若不加以控制，则结点 B 就会丢弃很多来不及接收的正确数据，造成传输线路效率下降。 流拭控制可以协调两个结点的速率，使结点 A 的发送速率刚好是结点 B 的接收速率。&lt;/p&gt;
&lt;p&gt;广播式网络在数据链路层还要处理新的问题，即如何控制对共享信道的访问。数据链路层的 一个特殊子层 介质访问子层就是专门处理这个问题的。&lt;/p&gt;
&lt;p&gt;典型的数据链路层协议有 SDLC、 HDLC、&lt;/p&gt;
&lt;p&gt;PPP、 STP 和帧中继等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;网络层(Network Layer)：决定数据包在多个节点间的最佳传输路径。&lt;/p&gt;
&lt;p&gt;网络层的传输单位是数据报。它关心的是迎信子网的运行控制，主要任务是将网络层的协议 数据单元（分组）从源结点传输到目的结点，为分组交换网上的不同主机提供通信服务。关键问 题是对分组进行路由选择，并实现流量控制、拥塞控制、差错控制和网际互连等功能。&lt;/p&gt;
&lt;p&gt;流拭控制与数据链路层的流屈控制的含义一样，都是协调 A 的发送速率和 B 的接收速率。 差错控制是通信结点之间约定的特定检错规则，接收方根据该规则检查接收到的分组是否出 错，若出错，则能纠错就纠错，不能纠错就丢弃，确保向上层提交的数据都是无误的。&lt;/p&gt;
&lt;p&gt;若图1.12 中的结点都来不及接收分组而丢弃大狱分组，导致结点间无法正常通信，那么网络&lt;/p&gt;
&lt;p&gt;就处于拥塞状态。网络层要采取措施来缓解这种拥塞，这就是拥塞控制。&lt;/p&gt;
&lt;p&gt;互联网是由大扯异构网络通过路由器相互连接起来的。互特网使用的网络层协议是无连接的 网际协议 (IP) 和许多种路由选择协议，因此互联网的网络层也称网际层或 IP 层。 网络层的协议有 IP、 !PX、 ICMP、 IGMP、 ARP 、 RARP 、 RlP 和 OSPF 等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;传输层(Transport Layer)：在源和目的主机间建立端到端的可靠通信。(关注整体可靠传输，解决网络拥塞和段损坏问题)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;传输层也称运轮层，负贲主机中两个进程之间的通信，功能是为端到端连接提供可靠的传输 服务，即为端到端连接提供流屈控制、差错控制、服务质拭、数据传输管理等服务。&lt;/p&gt;
&lt;p&gt;数据链路层提供的是点到点通信，传输层提供的是端到端通信，两者不同。&lt;/p&gt;
&lt;p&gt;通俗地说，点到点可理解为主机和主机之间的通信，一个点是指一个硬件地址或 IP 地址， 网络中参与迎信的主机是通过硬件地址或 IP 地址来标识的：端到端通信是指运行在不同主机内的 两个进程之间的通信，一个进程由一个端口来标识，所以称为端到端通信。&lt;/p&gt;
&lt;p&gt;通过传输层的屏蔽，高层用户看不到通信子网的交替和变化。因为一台主机可同时运行多个 进程，所以传输层具有复用和分用的功能。复用是指多个应用层进程可同时使用下面传输层的服 务，分用是指传输层将收到的信息分别交付给上而应用层中相应的进程．&lt;/p&gt;
&lt;p&gt;传输层的协议有 TCP、 UDP.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;会话层(Session Layer)：控制主机间的会话连接(连接的建立与结束)。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;会话层允许不同主机上的各个进程之间进行会话。这种服务主要为表示层实体或用户进程建 立连接，并在连接上有序地传输数据，这就是会话，也称建立同步 (SYN) 。会话层负贲管理主 机间的会话进程，包括建立、管理和终止进程间的会话。会话层包含一种称为检查点的机制来维&lt;/p&gt;
&lt;p&gt;待可靠会话，使通信会话在迎信失效时从检查点继续恢复迪信，即断点下载的原理。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;表示层(Presentation Layer)：处理数据的表示格式，对数据进行展示、翻译和加密。&lt;/p&gt;
&lt;p&gt;表示层主要处理在两个通信系统中交换信息的表示方式。不同机器采用的编码和表示方法不&lt;/p&gt;
&lt;p&gt;同，为了使不同表示方法的数据和信息之间能够互相交换，表示层采用抽象的标准方法定义数据 结构，并采用标准的编码形式。此外，数据压缩、加密和解密也是表示层的功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;应用层(Application Layer)：用于网络应用进程之间的交互，提供各种网络服务。&lt;/p&gt;
&lt;p&gt;应用层是 OST 参考模型的最高层，是用户与网络的接口。应用层为特定类型的树络应用提供&lt;/p&gt;
&lt;p&gt;访问 OSI 参考校型坏境的手段。用户的实际应用多种多样，这就要求应用层采用不同的应用协议 来解决不同类型的应用要求，因此应用层是最复朵的一层，使用的协议也最多。典型的协议有用 千文件传送的 FTP、用千电子邮件的 SM兀）、用千万维网的 HTTP 等。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;封装&#34;&gt;封装&lt;/h4&gt;
&lt;p&gt;在OSI模型中，封装(Encapsulation)是指数据在各层向下传输过程中，被逐层添加该层的头部和尾部信息，形成带有headers和trailers的PDU。而反封装(De-encapsulation)则是数据在接收端向上层传递过程中，逐层移除该层添加的headers和trailers的过程。如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240119213031387.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240119213031387&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;OSI模型中数据封装的五个主要步骤:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在应用层、表示层和会话层，数据(Data)被创建和处理。&lt;/li&gt;
&lt;li&gt;在传输层，数据被分割为数据段(Segments)，添加传输层的头部信息，用于在源和目的端系统之间端到端传输。&lt;/li&gt;
&lt;li&gt;在网络层，数据段被进一步封装为数据包(Packets)，添加网络层的头部信息如源和目的IP地址等。&lt;/li&gt;
&lt;li&gt;在数据链路层，数据包被封装为帧(Frames)，添加数据链路层的头部信息如源和目的MAC地址等。&lt;/li&gt;
&lt;li&gt;在物理层，数据帧被转换为比特(Bits)，以在物理介质上传输。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;当数据在不同网络之间传输时，源主机与目的主机不一定直接连接。数据会经过多个不同的主机或网络进行传输，才能到达目的主机。在这种情况下，数据在到达接收主机之前的各个网络之间传递时，只涉及OSI模型底层的物理层、数据链路层和网络层的封装与反封装**。**如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240119213058335.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240119213058335&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;当然，不一定经过的设备均有3层，常见的网络设备中，集线器(Hub)只有第一层，交换机(Switch)只有第一第二层，路由器(Router)则有前三层。&lt;/p&gt;
&lt;p&gt;在网络传输的过程中，被反封装的层可以被设备改变信息。例如：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240119213122672.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240119213122672&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;每两个发送方与接收方的协议必须一样，但接收方可以改变这个协议并发给下个接收方。&lt;/p&gt;
&lt;h3 id=&#34;tcpip-参考模型&#34;&gt;TCP/IP 参考模型&lt;/h3&gt;
&lt;p&gt;TCP/IP 参考模型（TCP/IP Reference Model），以其中两个最主要的协议——TCP协议和IP协议命名。如图：&lt;/p&gt;
&lt;p&gt;TCP/IP 模型从低到离依次为网络接口层（对应 OSI 参考模型的物理层和数据链路层）、网际层、传输层和应用层（对应 OSI 参考模型的会话层、表示层和应用层）。 TCP/IP 因为得到广泛应 用而成为事实上的国际标准。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://picture2023-1309715649.cos.ap-beijing.myqcloud.com/img/image-20240119213659567.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image-20240119213659567&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;网络接口层&#34;&gt;网络接口层&lt;/h4&gt;
&lt;p&gt;网络接口层的功能类似千 OSI 参考模型的物理层和数据链路层。它表示与物理网络的接口，但实际上 TCP/IP 本身并未真正描述这一部分，只是指出主机必须使用某种协议与网络连接，以便在其上传输 IP 分组。具体的物理网络既可是各种类型的局域网，如以太网、令牌环网、令牌总 线网等，又可是诸如电话网、 SDH 、 X.25 、帧中继和 ATM 等公共数据网络。网络接口层的作用 是从主机或结点接收 IP 分组，并将它们发送到指定的物理网络上。&lt;/p&gt;
&lt;p&gt;虽然链路层的任务是将整个帧从一个网络元素移动到邻近的网络元素，而物理层(physical layer)的任务是将该帧中的一个个比特从一个节点移动到下一个节点。在这层中的协议仍然是链路相关 的，并且进一步与该链路（例如，双绞铜线、单模光纤）的实际传输媒体相关。物理层常用的协议有以太网(Ethernet)。&lt;/p&gt;
&lt;p&gt;模型中的最低层是链路层（link layer），该层描述了链路必须完成什么功能才能满足无连接的互联网络层的需求，比如串行线和经典以太网链路。这不是真正意义上的一个层，而是主机与传输线路之间的一个接口。又称网络接口层。&lt;/p&gt;
&lt;p&gt;因特网的网络层通过源和目的地之间的一系列路由器路由数据报。为了将分组从一个 节点（主机或路由器）移动到路径上的下一个节点，网络层必须依靠该链路层的服务。网络层将数据报下传给链路层，链路层沿着路径将数据报传递给下一个节点。&lt;/p&gt;
&lt;p&gt;我们把链路层分组称为帧（frame）。&lt;/p&gt;
&lt;h4 id=&#34;网际层&#34;&gt;网际层&lt;/h4&gt;
&lt;p&gt;网际层（主机－主机）是 TCP/IP 体系结构的关键部分，功能上它与 OSI 参考模型的网络层非 常相似。网际层将分组发往任何网络，并为其独立地选择合适的路由，但不保证各个分组有序地到达，各个分组的有序和可靠交付由高层负责。网际层定义了标准的分组格式和协议，即 IP。当 前采用的 IP 是第 4 版，即 1Pv4, 它的下一版本是 1Pv6 。&lt;/p&gt;
&lt;p&gt;互联网层（internet layer）是将整个网络体系结构贯穿在一起的关键层。该层的任务是允许主机将数据包注入到任何网络，并且让这些数据包独立地到达接收方（接收方可能在不同的网络上）。甚至数据包的到达顺序与它们被发送的顺序不同，在这种情况下，如果需要按序递交数据，那么重新排列这些数据包的任务由高层来负责完成。&lt;/p&gt;
&lt;p&gt;互联网层定义了官方的数据包格式和协议，该协议称为因特网协议IP（IP，Internet Protocol），与之相伴的还有一个辅助协议，称为因特网控制报文协议（ICMP，Internet Control Message Protocol）。互联网层的任务是将IP 分组投递到它们该去的地方。在网络层中，&lt;strong&gt;数据包的路由是最主要的问题&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;传输层&#34;&gt;传输层&lt;/h4&gt;
&lt;p&gt;传输层（应用－应用或进程－进程）的功能同样与 OSI 参考模型中的传输层类似，即使得发送端和目的端主机上的对等实体进行会话。传输层主要使用以下两种协议：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;传输控制协议 (Transmission Control Pro tocol, TCP)。它是面向连接的，传输数据之前必须先建立连接，能够提供可靠的交付。数据传输的单位是报文段。&lt;/li&gt;
&lt;/ol&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;用户数据报协议 (User Data gram Protocol,UDP) 。它是无连接的，不保证提供可靠的交付，只能提供“尽最大努力交付＂。数据传输的单位是用户数据报。应用层（用户－用户）包含所有的高层协议，如虚拟终端协议 (Telnet)、文件传输协议 (FTP)、 域名解析服务 (DNS)、电子邮件协议 (SMTP) 和超文本传输协议 (HT「P) 。由图1. 13 可以看出， IP 是互联网中的核心协议： TCP/IP 可为各式各样的应用提供服务（所谓 everything over IP), TCP/IP 还允许 IP 在由各种网络构成的互联网上运行（所诮 IP over everything)。因此，互联网才会发展到今天的规模。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因特网的运输层(transport layer)在应用程序端点之间传送应用层报文。在因特网中，有两种运输协议，即TCP(传输控制协议，Transport Control Protocol)和UDP(用户数据报协议，User Datagram Protocol)，利用其中的任一个都能运输应用层报文。&lt;/p&gt;
&lt;p&gt;TCP是一个可靠的、面向连接的协议，包括了应用层报文向目的地的确保传递和流量控制。TCP也将长报文划分为短报文，并提供拥塞控制机制，因此当网络 拥塞时，源抑制其传输速率。&lt;/p&gt;
&lt;p&gt;UDP协议向它的应用程序提供无连接服务。这是一种不提供不必要服务的服务，没有可靠性，没有流量控制，也没有拥塞控制。适用于那些不想要TCP 的有序性或流量控制功能。&lt;/p&gt;
&lt;p&gt;我们把运输层的分组称为报文段(segment)。&lt;/p&gt;
&lt;h4 id=&#34;应用层&#34;&gt;应用层&lt;/h4&gt;
&lt;p&gt;应用层(application layer)是网络应用程序及它们的应用层协议存留的地方。它包含了所有的高层协议，例如虚拟终端协议（TELNET）、文件传输协议（FTP）、电子邮件协议（SMTP）、超文本传输协议(HTTP)。其中还有一个非常重要的协议——DNS协议(DNS，Domain Name
System)，它可以将主机名字映射到它们网络地址的域名系统。&lt;/p&gt;
&lt;p&gt;我们把这种位于应用层的信息分组称为报文（message）。&lt;/p&gt;
&lt;h3 id=&#34;tcpip-模型与-osi-参考模型的比较&#34;&gt;TCP/IP 模型与 OSI 参考模型的比较&lt;/h3&gt;
&lt;p&gt;TCP/lP 模型与 OSl 参考模型有许多相似之处。 首先，二者都采取分层的体系结构，且分层的功能也大体相似。 其次，二者都是基千独立的协议栈的概念。 砐后，二者都可解决异构网络的互连，实现不同厂家生产的计算机之间的通信。&lt;/p&gt;
&lt;p&gt;它们之间的比较如图1. 14 所示。 两个模型除了具有这些基本的相似之处，也有很多差别。&lt;/p&gt;
&lt;p&gt;第一， OSI 参考模型的最大贡献是精确定义了三个主要概念：服务、协议和接口，这与现代 的面向对象程序设计思想非常吻合。而 TCP/IP 栈型在这三个概念上没有明确区分。&lt;/p&gt;
&lt;p&gt;第二， OSl 参考模型是 7 层模型，而 TCP/IP 模型是 4 层结构。 TCP/IP 模型将 OSl 参考模型 的表示层和会话层的功能合并到了应用层，还将数据链路层和物理层合并为网络接口层。&lt;/p&gt;
&lt;p&gt;第三， OSI 参考模型先有模型，后有协议规范，通用性良好，适合描述各种网络。 TCP/IP 模 型正好相反，即先有协议栈，后建立模型，因此不适合任何其他的非 TCP/IP 网络。&lt;/p&gt;
&lt;p&gt;第四， OSI 参考模型在网络层支待无连接和面向连接的通信，但在传输层仅有面向连接的通 信。而 TCP/IP 模型认为可靠性是端到端的问题，因此它在网际层仅有一种无连接的通信模式，&lt;/p&gt;
&lt;p&gt;但传输层支持无连接和面向连接两种模式。这个不同点常常作为考查点。&lt;/p&gt;
&lt;p&gt;OSI 参考模型和 TCP/IP 模型都不是完美的，对二者的批评都很多。 OSI 参考校型的设计者从 一开始就试图建立一个全世界的计算机网络都要遴循的统一标准。从技术角度看，他们追求一种 完美的理想状态，导致基于 OSI 参考模型的软件效率极低。 OSI 参考模型缺乏市场与商业动力， 结构复杂，运行效率低，这是它未能达到预期目标的重要原因。&lt;/p&gt;
&lt;p&gt;学习计算机网络时，我们往往采取折中的办法，即综合 OSI 参考模型和 TCP/IP 模型的优点， 采用一种如图1. 15 所示的只有 5 层协议的体系结构，本书也采用这种体系结构进行讨论。&lt;/p&gt;
&lt;p&gt;图1. 15：应用层-传输层-网络层-数据链路层-物理层&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
